{"version":3,"file":"radio-tile.js","names":["html","svg","classMap","ifDefined","prefix","SelectableTile","CheckmarkFilled16","carbonElement","customElement","CDSRadioTile","_decorate","_initialize","_SelectableTile","constructor","args","F","d","kind","key","value","_handleChange","selected","name","eventRadioChange","dispatchEvent","CustomEvent","bubbles","composed","detail","render","colorScheme","checkmarkLabel","_inputType","inputType","handleChange","classes","_t","_","children","undefined","_t2","static"],"sources":["components/tile/radio-tile.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html, svg } from 'lit';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { prefix } from '../../globals/settings';\nimport SelectableTile from './selectable-tile';\nimport CheckmarkFilled16 from '@carbon/icons/lib/checkmark--filled/16';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\n/**\n * Single-selectable tile.\n *\n * @element cds-radio-tile\n * @fires cds-radio-tile-selected\n *   The name of the custom event fired after this selectable tile changes its selected state.\n */\n@customElement(`${prefix}-radio-tile`)\nclass CDSRadioTile extends SelectableTile {\n  /**\n   * The `type` attribute of the `<input>`.\n   */\n  protected _inputType = 'radio';\n\n  /**\n   * Handles `change` event on the `<input>` in the shadow DOM.\n   */\n  protected _handleChange() {\n    this.selected = true;\n    const { selected, name } = this;\n    const { eventRadioChange } = this.constructor as typeof CDSRadioTile;\n    this.dispatchEvent(\n      new CustomEvent(eventRadioChange, {\n        bubbles: true,\n        composed: true,\n        detail: {\n          selected,\n          name,\n        },\n      })\n    );\n  }\n\n  render() {\n    const {\n      colorScheme,\n      checkmarkLabel,\n      name,\n      selected,\n      value,\n      _inputType: inputType,\n      _handleChange: handleChange,\n    } = this;\n    const classes = classMap({\n      [`${prefix}--tile`]: true,\n      [`${prefix}--tile--selectable`]: true,\n      [`${prefix}--tile--is-selected`]: selected,\n      [`${prefix}--tile--${colorScheme}`]: colorScheme,\n    });\n    return html`\n      <input\n        type=\"${inputType}\"\n        id=\"input\"\n        class=\"${prefix}--tile-input\"\n        tabindex=\"-1\"\n        name=\"${ifDefined(name)}\"\n        value=\"${ifDefined(value)}\"\n        .checked=${selected}\n        @change=${handleChange} />\n      <label for=\"input\" class=\"${classes}\" tabindex=\"0\">\n        <div class=\"${prefix}--tile__checkmark\">\n          ${CheckmarkFilled16({\n            children: !checkmarkLabel\n              ? undefined\n              : svg`<title>${checkmarkLabel}</title>`,\n          })}\n        </div>\n        <div class=\"${prefix}--tile-content\"><slot></slot></div>\n      </label>\n    `;\n  }\n\n  /**\n   * The name of the custom event fired after this selectable tile changes its selected state.\n   */\n  static get eventRadioChange() {\n    return `${prefix}-radio-tile-selected`;\n  }\n}\n\nexport default CDSRadioTile;\n"],"mappings":"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"}