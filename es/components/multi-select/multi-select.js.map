{"version":3,"file":"multi-select.js","names":["html","property","query","classMap","Close16","prefix","filter","forEach","indexOf","CDSDropdown","DROPDOWN_KEYBOARD_ACTION","DROPDOWN_TYPE","SELECTION_FEEDBACK_OPTION","styles","carbonElement","customElement","DROPDOWN_SIZE","DROPDOWN_DIRECTION","CDSMultiSelect","_decorate","_initialize","_CDSDropdown","constructor","args","F","d","kind","decorators","type","Boolean","key","value","_selectionShouldChange","itemToSelect","_selectionDidChange","selected","_assistiveStatusText","selectedItemAssistiveText","unselectedItemAssistiveText","querySelectorAll","selectorItemSelected","item","_handleUserInitiatedToggle","unselectedAllAssistiveText","selectorItem","map","join","_handleClickInner","event","_this$_selectionButto","_this$_clearButtonNod","_event$target","_selectionButtonNode","contains","target","readOnly","_handleUserInitiatedSelectItem","filterable","_filterInputNode","focus","_triggerNode","_clearButtonNode","_handleUserInitiatedClearInput","matches","slugItem","_get","_getPrototypeOf","prototype","call","_handleKeypressInner","_this$_clearButtonNod2","_this$_selectionButto2","action","getAction","TRIGGERING","open","_handleKeypressInnerFlterable","highlightedItem","querySelector","selectorItemHighlighted","_renderTitleLabel","clearSelectionDescription","clearSelectionText","disabled","hideLabel","titleText","_selectedItemsCount","selectedItemsCount","_slotTitleTextNode","slotTitleTextNode","_handleSlotchangeLabelText","handleSlotchangeLabelText","labelClasses","hasTitleText","assignedNodes","length","_t","_","_t2","_renderPrecedingLabel","clearSelectionLabel","selectionButtonClasses","undefined","_t3","class","_renderLabel","label","_selectedItemContent","selectedItemContent","inputClasses","_t4","_t5","_handleInput","_renderFollowingLabel","filterInputNode","_t6","items","inputValue","toLocaleLowerCase","itemValue","innerText","includes","setAttribute","removeAttribute","requestUpdate","_navigate","direction","selectorItemResults","highlightedIndex","nextIndex","i","highlighted","selectorItemFiltered","attribute","TOP_AFTER_REOPEN","_classes","size","invalid","warn","inline","INLINE","itemA","itemB","locale","localeCompare","numeric","menuItems","values","compareItems","menuItemsArray","Array","from","sortedArray","sort","hasItemA","hasItemB","shouldUpdate","changedProperties","slug","split","has","elem","selectionFeedback","TOP","sortedMenuItems","sortItems","unshift","replaceChildren","updated","_menuBodyNode","connectedCallback","static","selectorMenuBody","eventBeforeToggle","eventToggle","eventBeforeSelect","eventSelect"],"sources":["components/multi-select/multi-select.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html, TemplateResult } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport Close16 from '@carbon/icons/lib/close/16';\nimport { prefix } from '../../globals/settings';\nimport {\n  filter,\n  forEach,\n  indexOf,\n} from '../../globals/internal/collection-helpers';\nimport CDSDropdown, {\n  DROPDOWN_KEYBOARD_ACTION,\n  DROPDOWN_TYPE,\n} from '../dropdown/dropdown';\nimport { SELECTION_FEEDBACK_OPTION } from './defs';\nimport CDSMultiSelectItem from './multi-select-item';\nimport styles from './multi-select.scss';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nexport {\n  DROPDOWN_SIZE,\n  DROPDOWN_TYPE,\n  DROPDOWN_DIRECTION,\n} from '../dropdown/dropdown';\n\nexport { SELECTION_FEEDBACK_OPTION };\n\n/**\n * Multi select.\n *\n * @element cds-multi-select\n * @fires cds-multi-select-beingselected\n *   The custom event fired before a multi select item is selected upon a user gesture.\n *   Cancellation of this event stops changing the user-initiated selection.\n * @fires cds-multi-select-selected - The custom event fired after a multi select item is selected upon a user gesture.\n * @fires cds-multi-select-beingtoggled\n *   The custom event fired before the open state of this multi select is toggled upon a user gesture.\n *   Cancellation of this event stops the user-initiated toggling.\n * @fires cds-multi-select-toggled\n *   The custom event fired after the open state of this multi select is toggled upon a user gesture.\n */\n@customElement(`${prefix}-multi-select`)\nclass CDSMultiSelect extends CDSDropdown {\n  @property({ type: Boolean })\n  filterable;\n\n  /**\n   * The count of selected items.\n   */\n  private _selectedItemsCount = 0;\n\n  /**\n   * The clear button.\n   */\n  @query('#clear-button')\n  private _clearButtonNode!: HTMLElement;\n\n  /**\n   * The selection button.\n   */\n  @query('#selection-button')\n  private _selectionButtonNode!: HTMLElement;\n\n  /**\n   * The menu body.\n   */\n  @query('#menu-body')\n  private _menuBodyNode!: HTMLElement;\n\n  /**\n   * The `<input>` for filtering.\n   */\n  @query('input')\n  private _filterInputNode!: HTMLInputElement;\n\n  /**\n   * The trigger button.\n   */\n  @query(`.${prefix}--list-box__field`)\n  private _triggerNode!: HTMLElement;\n\n  protected _selectionShouldChange(itemToSelect?: CDSMultiSelectItem) {\n    // If we are selecting an item, assumes we always toggle\n    return Boolean(this.value || itemToSelect);\n  }\n\n  protected _selectionDidChange(itemToSelect?: CDSMultiSelectItem) {\n    if (itemToSelect) {\n      itemToSelect.selected = !itemToSelect.selected;\n      this._assistiveStatusText = itemToSelect.selected\n        ? this.selectedItemAssistiveText\n        : this.unselectedItemAssistiveText;\n    } else {\n      forEach(\n        this.querySelectorAll(\n          (this.constructor as typeof CDSMultiSelect).selectorItemSelected\n        ),\n        (item) => {\n          (item as CDSMultiSelectItem).selected = false;\n        }\n      );\n      this._handleUserInitiatedToggle(false);\n      this._assistiveStatusText = this.unselectedAllAssistiveText;\n    }\n    // Change in `.selected` hasn't been reflected to the corresponding attribute yet\n    this.value = filter(\n      this.querySelectorAll(\n        (this.constructor as typeof CDSMultiSelect).selectorItem\n      ),\n      (item) => (item as CDSMultiSelectItem).selected\n    )\n      .map((item) => (item as CDSMultiSelectItem).value)\n      .join(',');\n  }\n\n  protected _handleClickInner(event: MouseEvent) {\n    if (\n      this._selectionButtonNode?.contains(event.target as Node) &&\n      !this.readOnly\n    ) {\n      this._handleUserInitiatedSelectItem();\n      if (this.filterable) {\n        this._filterInputNode.focus();\n      } else {\n        this._triggerNode.focus();\n      }\n    } else if (this._clearButtonNode?.contains(event.target as Node)) {\n      this._handleUserInitiatedClearInput();\n    } else if (\n      !(event.target as HTMLElement)?.matches(\n        (this.constructor as typeof CDSMultiSelect).slugItem\n      )\n    ) {\n      super._handleClickInner(event);\n      if (this.filterable) {\n        this._filterInputNode.focus();\n      }\n    }\n  }\n\n  /**\n   * Handler for the `keypress` event, ensures filter still works upon entering space\n   */\n  protected _handleKeypressInner(event: KeyboardEvent) {\n    const { key } = event;\n    const action = (this.constructor as typeof CDSDropdown).getAction(key);\n    const { TRIGGERING } = DROPDOWN_KEYBOARD_ACTION;\n\n    if (\n      this._clearButtonNode?.contains(event.target as Node) &&\n      // Space key should be handled by `<input>` unless \"clear selection\" button has focus\n      (action === TRIGGERING || key === ' ')\n    ) {\n      this._handleUserInitiatedClearInput();\n    } else if (this._selectionButtonNode?.contains(event.target as Node)) {\n      this._handleUserInitiatedSelectItem();\n      this.open = true;\n      if (this.filterable) {\n        this._filterInputNode.focus();\n      } else {\n        this._triggerNode.focus();\n      }\n    } else if (this.filterable) {\n      this._handleKeypressInnerFlterable(event);\n    } else {\n      super._handleKeypressInner(event);\n    }\n  }\n\n  /**\n   * Special andler for the `keypress` event, ensures space selection for filterable\n   * variation is disabled\n   */\n\n  protected _handleKeypressInnerFlterable(event: KeyboardEvent) {\n    const { key } = event;\n    const action = (this.constructor as typeof CDSDropdown).getAction(key);\n    if (!this.open) {\n      switch (action) {\n        case DROPDOWN_KEYBOARD_ACTION.TRIGGERING:\n          this._handleUserInitiatedToggle(true);\n          break;\n        default:\n          break;\n      }\n    } else {\n      switch (key) {\n        case 'Enter':\n          {\n            const constructor = this.constructor as typeof CDSDropdown;\n            const highlightedItem = this.querySelector(\n              constructor.selectorItemHighlighted\n            ) as CDSMultiSelectItem;\n            if (highlightedItem) {\n              this._handleUserInitiatedSelectItem(highlightedItem);\n            } else {\n              this._handleUserInitiatedToggle(false);\n            }\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected _renderTitleLabel() {\n    const {\n      clearSelectionDescription,\n      clearSelectionText,\n      disabled,\n      hideLabel,\n      titleText,\n      _selectedItemsCount: selectedItemsCount,\n      _slotTitleTextNode: slotTitleTextNode,\n      _handleSlotchangeLabelText: handleSlotchangeLabelText,\n    } = this;\n\n    const labelClasses = classMap({\n      [`${prefix}--label`]: true,\n      [`${prefix}--label--disabled`]: disabled,\n      [`${prefix}--visually-hidden`]: hideLabel,\n    });\n\n    const hasTitleText =\n      titleText ||\n      (slotTitleTextNode && slotTitleTextNode.assignedNodes().length > 0);\n\n    return html`\n      <label\n        part=\"title-text\"\n        class=\"${labelClasses}\"\n        ?hidden=\"${!hasTitleText}\">\n        <slot name=\"title-text\" @slotchange=\"${handleSlotchangeLabelText}\"\n          >${titleText}</slot\n        >\n        ${selectedItemsCount > 0\n          ? html`\n              <span class=\"${prefix}--visually-hidden\">\n                ${clearSelectionDescription} ${selectedItemsCount},\n                ${clearSelectionText}\n              </span>\n            `\n          : null}\n      </label>\n    `;\n  }\n\n  protected _renderPrecedingLabel() {\n    const {\n      disabled,\n      readOnly,\n      clearSelectionLabel,\n      _selectedItemsCount: selectedItemsCount,\n    } = this;\n\n    const selectionButtonClasses = classMap({\n      [`${prefix}--list-box__selection`]: true,\n      [`${prefix}--list-box__selection--multi`]: true,\n      [`${prefix}--tag`]: true,\n      [`${prefix}--tag--filter`]: true,\n      [`${prefix}--tag--high-contrast`]: true,\n      [`${prefix}--tag--disabled`]: disabled,\n    });\n    return selectedItemsCount === 0\n      ? undefined\n      : html`\n          <div\n            id=\"selection-button\"\n            role=\"button\"\n            class=\"${selectionButtonClasses}\"\n            tabindex=\"-1\"\n            aria-disabled=${readOnly}\n            title=\"${clearSelectionLabel}\">\n            ${selectedItemsCount}\n            ${Close16({\n              'aria-label': clearSelectionLabel,\n              class: `${prefix}--tag__close-icon`,\n            })}\n          </div>\n        `;\n  }\n\n  /**\n    @returns The main content of the trigger button.\n   */\n  protected _renderLabel(): TemplateResult {\n    const { label, value, _selectedItemContent: selectedItemContent } = this;\n\n    const inputClasses = classMap({\n      [`${prefix}--text-input`]: true,\n      [`${prefix}--text-input--empty`]: !value,\n    });\n\n    return !this.filterable\n      ? html`\n          <span id=\"trigger-label\" class=\"${prefix}--list-box__label\"\n            >${selectedItemContent || label}</span\n          >\n        `\n      : html`\n          <input\n            id=\"trigger-label\"\n            class=\"${inputClasses}\"\n            placeholder=\"${label}\"\n            role=\"combobox\"\n            aria-controls=\"menu-body\"\n            aria-autocomplete=\"list\"\n            @input=\"${this._handleInput}\" />\n        `;\n  }\n\n  protected _renderFollowingLabel(): TemplateResult | void {\n    const { clearSelectionLabel, _filterInputNode: filterInputNode } = this;\n    return filterInputNode &&\n      filterInputNode.value.length > 0 &&\n      this.filterable\n      ? html`\n          <div\n            id=\"clear-button\"\n            role=\"button\"\n            class=\"${prefix}--list-box__selection\"\n            tabindex=\"0\"\n            title=\"${clearSelectionLabel}\">\n            ${Close16({ 'aria-label': clearSelectionLabel })}\n          </div>\n        `\n      : undefined;\n  }\n\n  /**\n   * Handles `input` event on the `<input>` for filtering.\n   */\n  protected _handleInput() {\n    const items = this.querySelectorAll(\n      (this.constructor as typeof CDSMultiSelect).selectorItem\n    );\n    const inputValue = this._filterInputNode.value.toLocaleLowerCase();\n\n    if (!this.open) {\n      this.open = true;\n    }\n\n    forEach(items, (item) => {\n      const itemValue = (item as HTMLElement).innerText.toLocaleLowerCase();\n\n      if (!itemValue.includes(inputValue)) {\n        (item as CDSMultiSelectItem).setAttribute('filtered', '');\n        (item as CDSMultiSelectItem).removeAttribute('highlighted');\n      } else {\n        (item as CDSMultiSelectItem).removeAttribute('filtered');\n      }\n    });\n\n    this.requestUpdate();\n  }\n\n  /**\n   * Navigate through dropdown items.\n   *\n   * @param direction `-1` to navigate backward, `1` to navigate forward.\n   */\n  protected _navigate(direction: number) {\n    if (!this.filterable) {\n      super._navigate(direction);\n    } else {\n      // only navigate through remaining item\n      const constructor = this.constructor as typeof CDSMultiSelect;\n      const items = this.querySelectorAll(constructor.selectorItemResults);\n      const highlightedItem = this.querySelector(\n        constructor.selectorItemHighlighted\n      );\n      const highlightedIndex = indexOf(items, highlightedItem!);\n\n      let nextIndex = highlightedIndex + direction;\n      if (nextIndex < 0) {\n        nextIndex = items.length - 1;\n      }\n      if (nextIndex >= items.length) {\n        nextIndex = 0;\n      }\n      forEach(items, (item, i) => {\n        (item as CDSMultiSelectItem).highlighted = i === nextIndex;\n      });\n    }\n  }\n\n  /**\n   * Handles user-initiated clearing the `<input>` for filtering.\n   */\n  protected _handleUserInitiatedClearInput() {\n    const constructor = this.constructor as typeof CDSMultiSelect;\n    const items = this.querySelectorAll(constructor.selectorItemFiltered);\n    this._filterInputNode.value = '';\n    this.open = true;\n    this._filterInputNode.focus();\n    forEach(items, (item) => {\n      (item as CDSMultiSelectItem).removeAttribute('filtered');\n    });\n  }\n\n  /**\n   * The `aria-label` attribute for the icon to clear selection.\n   */\n  @property({ attribute: 'clear-selection-label' })\n  clearSelectionLabel = '';\n\n  /**\n   * Specify the text that should be read for screen readers that describes total items selected\n   */\n  @property({ attribute: 'clear-selection-description' })\n  clearSelectionDescription = 'Total items selected: ';\n\n  /**\n   * Specify the text that should be read for screen readers to clear selection.\n   */\n  @property({ attribute: 'clear-selection-text' })\n  clearSelectionText = 'To clear selection, press Delete or Backspace.';\n\n  /**\n   * Specify the locale of the control. Used for the default compareItems used for sorting the list of items in the control.\n   */\n  @property()\n  locale = 'en';\n\n  /**\n   * An assistive text for screen reader to announce, telling that an item is unselected.\n   */\n  @property({ attribute: 'unselected-item-assistive-text' })\n  unselectedItemAssistiveText = 'Unselected an item.';\n\n  /**\n   * An assistive text for screen reader to announce, telling that all items are unselected.\n   */\n  @property({ attribute: 'unselected-all-assistive-text' })\n  unselectedAllAssistiveText = 'Unselected all items.';\n\n  /**\n   * Specify feedback (mode) of the selection.\n   * `top`: selected item jumps to top\n   * `fixed`: selected item stays at it's position\n   * `top-after-reopen`: selected item jump to top after reopen dropdown\n   */\n  @property({ attribute: 'selection-feedback' })\n  selectionFeedback = SELECTION_FEEDBACK_OPTION.TOP_AFTER_REOPEN;\n\n  /**\n   * The CSS class list for multi-select listbox\n   */\n  protected get _classes() {\n    const {\n      disabled,\n      size,\n      type,\n      invalid,\n      readOnly,\n      open,\n      warn,\n      _selectedItemsCount: selectedItemsCount,\n    } = this;\n    const inline = type === DROPDOWN_TYPE.INLINE;\n\n    return classMap({\n      [`${prefix}--multi-select`]: true,\n      [`${prefix}--list-box`]: true,\n      [`${prefix}--list-box--disabled`]: disabled,\n      [`${prefix}--list-box--inline`]: inline,\n      [`${prefix}--list-box--expanded`]: open,\n      [`${prefix}--list-box--${size}`]: size,\n      [`${prefix}--multi-select--invalid`]: invalid,\n      [`${prefix}--multi-select--warn`]: warn,\n      [`${prefix}--multi-select--inline`]: inline,\n      [`${prefix}--multi-select--readonly`]: readOnly,\n      [`${prefix}--multi-select--selected`]: selectedItemsCount > 0,\n    });\n  }\n\n  protected compareItems = (itemA, itemB, { locale }) => {\n    itemA.localeCompare(itemB, locale, { numeric: true });\n  };\n\n  protected sortItems = (\n    menuItems: NodeList,\n    { values, compareItems, locale = 'en' }\n  ) => {\n    const menuItemsArray = Array.from(menuItems);\n\n    const sortedArray = menuItemsArray.sort((itemA, itemB) => {\n      const hasItemA = values.includes((itemA as HTMLInputElement).value);\n      const hasItemB = values.includes((itemB as HTMLInputElement).value);\n\n      // Prefer whichever item is in the `value` array first\n      if (hasItemA && !hasItemB) {\n        return -1;\n      }\n\n      if (hasItemB && !hasItemA) {\n        return 1;\n      }\n\n      return compareItems(\n        (itemA as HTMLInputElement).value,\n        (itemB as HTMLInputElement).value,\n        {\n          locale,\n        }\n      );\n    });\n\n    return sortedArray;\n  };\n\n  shouldUpdate(changedProperties) {\n    const { selectorItem, slugItem } = this\n      .constructor as typeof CDSMultiSelect;\n    const slug = this.querySelector(slugItem);\n    const items = this.querySelectorAll(selectorItem);\n\n    const { value, locale } = this;\n    const values = !value ? [] : value.split(',');\n\n    if (changedProperties.has('size')) {\n      forEach(this.querySelectorAll(selectorItem), (elem) => {\n        (elem as CDSMultiSelectItem).size = this.size;\n      });\n    }\n    if (changedProperties.has('value')) {\n      // Updates selection beforehand because our rendering logic for `<cds-multi-select>` looks for selected items via `qSA()`\n      forEach(items, (elem) => {\n        (elem as CDSMultiSelectItem).selected =\n          values.indexOf((elem as CDSMultiSelectItem).value) >= 0;\n      });\n      this._selectedItemsCount = filter(\n        items,\n        (elem) => values.indexOf((elem as CDSMultiSelectItem).value) >= 0\n      ).length;\n\n      if (this.selectionFeedback === SELECTION_FEEDBACK_OPTION.TOP) {\n        const sortedMenuItems = this.sortItems(items, {\n          values,\n          compareItems: this.compareItems,\n          locale,\n        });\n\n        slug ? sortedMenuItems.unshift(slug as Node) : '';\n        this.replaceChildren(...sortedMenuItems);\n      }\n    }\n    if (changedProperties.has('open')) {\n      if (\n        this.selectionFeedback === SELECTION_FEEDBACK_OPTION.TOP_AFTER_REOPEN\n      ) {\n        const sortedMenuItems = this.sortItems(items, {\n          values,\n          compareItems: this.compareItems,\n          locale,\n        });\n\n        slug ? sortedMenuItems.unshift(slug as Node) : '';\n        this.replaceChildren(...sortedMenuItems);\n      }\n    }\n    return true;\n  }\n\n  updated(changedProperties) {\n    super.updated(changedProperties);\n    if (changedProperties.has('open') && this.open && !this.filterable) {\n      // move focus to menu body when open for non-filterable mulit-select\n      this._menuBodyNode.focus();\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    /**\n     * Detect if multi-select already has initially selected items\n     */\n    this.value = filter(\n      this.querySelectorAll(\n        (this.constructor as typeof CDSMultiSelect).selectorItem\n      ),\n      (item) => (item as CDSMultiSelectItem).selected\n    )\n      .map((item) => (item as CDSMultiSelectItem).value)\n      .join(',');\n  }\n\n  /**\n   * A selector that will return menu body.\n   */\n  static get selectorMenuBody() {\n    return `div[part=\"menu-body\"]`;\n  }\n\n  /**\n   * A selector that will return highlighted items.\n   */\n  static get selectorItemHighlighted() {\n    return `${prefix}-multi-select-item[highlighted]`;\n  }\n\n  /**\n   * A selector that will return multi select items.\n   * We use a separate property from `.itemTagName` due to the nature in difference of tag name vs. selector.\n   */\n  static get selectorItem() {\n    return `${prefix}-multi-select-item`;\n  }\n\n  /**\n   * A selector that will return remaining items after a filter.\n   */\n  static get selectorItemFiltered() {\n    return `${prefix}-multi-select-item[filtered]`;\n  }\n\n  /**\n   * A selector that will return remaining items after a filter.\n   */\n  static get selectorItemResults() {\n    return `${prefix}-multi-select-item:not([filtered])`;\n  }\n\n  /**\n   * A selector that will return selected items.\n   */\n  static get selectorItemSelected() {\n    return `${prefix}-multi-select-item[selected]`;\n  }\n\n  /**\n   * The name of the custom event fired before this multi select item is being toggled upon a user gesture.\n   * Cancellation of this event stops the user-initiated action of toggling this multi select item.\n   */\n  static get eventBeforeToggle() {\n    return `${prefix}-multi-select-beingtoggled`;\n  }\n\n  /**\n   * The name of the custom event fired after this multi select item is toggled upon a user gesture.\n   */\n  static get eventToggle() {\n    return `${prefix}-multi-select-toggled`;\n  }\n\n  /**\n   * The name of the custom event fired before a multi select item is selected upon a user gesture.\n   * Cancellation of this event stops changing the user-initiated selection.\n   */\n  static get eventBeforeSelect() {\n    return `${prefix}-multi-select-beingselected`;\n  }\n\n  /**\n   * The name of the custom event fired after a a multi select item is selected upon a user gesture.\n   */\n  static get eventSelect() {\n    return `${prefix}-multi-select-selected`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSMultiSelect;\n"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,IAAI,QAAwB,KAAK;AAC1C,SAASC,QAAQ,EAAEC,KAAK,QAAQ,mBAAmB;AACnD,SAASC,QAAQ,QAAQ,6BAA6B;AACtD,OAAOC,OAAO,MAAM,sBAA4B;AAChD,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,SACEC,MAAM,EACNC,OAAO,EACPC,OAAO,QACF,2CAA2C;AAClD,OAAOC,WAAW,IAChBC,wBAAwB,EACxBC,aAAa,QACR,sBAAsB;AAC7B,SAASC,yBAAyB,QAAQ,QAAQ;AAElD,OAAOC,MAAM,MAAM,yBAAqB;AACxC,SAASC,aAAa,IAAIC,aAAa,QAAQ,yCAAyC;AAExF,SACEC,aAAa,EACbL,aAAa,EACbM,kBAAkB,QACb,sBAAsB;AAE7B,SAASL,yBAAyB;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA,IAeMM,cAAc,GAAAC,SAAA,EADnBJ,aAAa,CAAE,GAAEV,MAAO,eAAc,CAAC,aAAAe,WAAA,EAAAC,YAAA;EAAxC,MACMH,cAAc,SAAAG,YAAA,CAAqB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EA4mBzC;EAAC;IAAAI,CAAA,EA5mBKN,cAAc;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACjB1B,QAAQ,CAAC;QAAE2B,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAC,GAAA;MAAAC,KAAA;IAAA;MAAAL,IAAA;MAAAI,GAAA;MAAAC,MAAA;QAAA,OAME,CAAC;MAAA;IAAA;MAAAL,IAAA;MAAAC,UAAA,GAK9BzB,KAAK,CAAC,eAAe,CAAC;MAAA4B,GAAA;MAAAC,KAAA;IAAA;MAAAL,IAAA;MAAAC,UAAA,GAMtBzB,KAAK,CAAC,mBAAmB,CAAC;MAAA4B,GAAA;MAAAC,KAAA;IAAA;MAAAL,IAAA;MAAAC,UAAA,GAM1BzB,KAAK,CAAC,YAAY,CAAC;MAAA4B,GAAA;MAAAC,KAAA;IAAA;MAAAL,IAAA;MAAAC,UAAA,GAMnBzB,KAAK,CAAC,OAAO,CAAC;MAAA4B,GAAA;MAAAC,KAAA;IAAA;MAAAL,IAAA;MAAAC,UAAA,GAMdzB,KAAK,CAAE,IAAGG,MAAO,mBAAkB,CAAC;MAAAyB,GAAA;MAAAC,KAAA;IAAA;MAAAL,IAAA;MAAAI,GAAA;MAAAC,KAAA;MAhCrC;AACF;AACA;;MAGE;AACF;AACA;;MAIE;AACF;AACA;;MAIE;AACF;AACA;;MAIE;AACF;AACA;;MAIE;AACF;AACA;;MAIE,SAAAC,uBAAiCC,YAAiC,EAAE;QAClE;QACA,OAAOJ,OAAO,CAAC,IAAI,CAACE,KAAK,IAAIE,YAAY,CAAC;MAC5C;IAAC;MAAAP,IAAA;MAAAI,GAAA;MAAAC,KAAA,EAED,SAAAG,oBAA8BD,YAAiC,EAAE;QAC/D,IAAIA,YAAY,EAAE;UAChBA,YAAY,CAACE,QAAQ,GAAG,CAACF,YAAY,CAACE,QAAQ;UAC9C,IAAI,CAACC,oBAAoB,GAAGH,YAAY,CAACE,QAAQ,GAC7C,IAAI,CAACE,yBAAyB,GAC9B,IAAI,CAACC,2BAA2B;QACtC,CAAC,MAAM;UACL/B,OAAO,CACL,IAAI,CAACgC,gBAAgB,CAClB,IAAI,CAACjB,WAAW,CAA2BkB,oBAC9C,CAAC,EACAC,IAAI,IAAK;YACPA,IAAI,CAAwBN,QAAQ,GAAG,KAAK;UAC/C,CACF,CAAC;UACD,IAAI,CAACO,0BAA0B,CAAC,KAAK,CAAC;UACtC,IAAI,CAACN,oBAAoB,GAAG,IAAI,CAACO,0BAA0B;QAC7D;QACA;QACA,IAAI,CAACZ,KAAK,GAAGzB,MAAM,CACjB,IAAI,CAACiC,gBAAgB,CAClB,IAAI,CAACjB,WAAW,CAA2BsB,YAC9C,CAAC,EACAH,IAAI,IAAMA,IAAI,CAAwBN,QACzC,CAAC,CACEU,GAAG,CAAEJ,IAAI,IAAMA,IAAI,CAAwBV,KAAK,CAAC,CACjDe,IAAI,CAAC,GAAG,CAAC;MACd;IAAC;MAAApB,IAAA;MAAAI,GAAA;MAAAC,KAAA,EAED,SAAAgB,kBAA4BC,KAAiB,EAAE;QAAA,IAAAC,qBAAA,EAAAC,qBAAA,EAAAC,aAAA;QAC7C,IACE,CAAAF,qBAAA,OAAI,CAACG,oBAAoB,cAAAH,qBAAA,eAAzBA,qBAAA,CAA2BI,QAAQ,CAACL,KAAK,CAACM,MAAc,CAAC,IACzD,CAAC,IAAI,CAACC,QAAQ,EACd;UACA,IAAI,CAACC,8BAA8B,CAAC,CAAC;UACrC,IAAI,IAAI,CAACC,UAAU,EAAE;YACnB,IAAI,CAACC,gBAAgB,CAACC,KAAK,CAAC,CAAC;UAC/B,CAAC,MAAM;YACL,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC,CAAC;UAC3B;QACF,CAAC,MAAM,KAAAT,qBAAA,GAAI,IAAI,CAACW,gBAAgB,cAAAX,qBAAA,eAArBA,qBAAA,CAAuBG,QAAQ,CAACL,KAAK,CAACM,MAAc,CAAC,EAAE;UAChE,IAAI,CAACQ,8BAA8B,CAAC,CAAC;QACvC,CAAC,MAAM,IACL,GAAAX,aAAA,GAAEH,KAAK,CAACM,MAAM,cAAAH,aAAA,eAAbA,aAAA,CAA+BY,OAAO,CACpC,IAAI,CAACzC,WAAW,CAA2B0C,QAC9C,CAAC,GACD;UACAC,IAAA,CAAAC,eAAA,CA3FAhD,cAAc,CAAAiD,SAAA,8BAAAC,IAAA,OA2FUpB,KAAK;UAC7B,IAAI,IAAI,CAACS,UAAU,EAAE;YACnB,IAAI,CAACC,gBAAgB,CAACC,KAAK,CAAC,CAAC;UAC/B;QACF;MACF;;MAEA;AACF;AACA;IAFE;MAAAjC,IAAA;MAAAI,GAAA;MAAAC,KAAA,EAGA,SAAAsC,qBAA+BrB,KAAoB,EAAE;QAAA,IAAAsB,sBAAA,EAAAC,sBAAA;QACnD,MAAM;UAAEzC;QAAI,CAAC,GAAGkB,KAAK;QACrB,MAAMwB,MAAM,GAAI,IAAI,CAAClD,WAAW,CAAwBmD,SAAS,CAAC3C,GAAG,CAAC;QACtE,MAAM;UAAE4C;QAAW,CAAC,GAAGhE,wBAAwB;QAE/C,IACE,CAAA4D,sBAAA,OAAI,CAACT,gBAAgB,cAAAS,sBAAA,eAArBA,sBAAA,CAAuBjB,QAAQ,CAACL,KAAK,CAACM,MAAc,CAAC;QACrD;QACCkB,MAAM,KAAKE,UAAU,IAAI5C,GAAG,KAAK,GAAG,CAAC,EACtC;UACA,IAAI,CAACgC,8BAA8B,CAAC,CAAC;QACvC,CAAC,MAAM,KAAAS,sBAAA,GAAI,IAAI,CAACnB,oBAAoB,cAAAmB,sBAAA,eAAzBA,sBAAA,CAA2BlB,QAAQ,CAACL,KAAK,CAACM,MAAc,CAAC,EAAE;UACpE,IAAI,CAACE,8BAA8B,CAAC,CAAC;UACrC,IAAI,CAACmB,IAAI,GAAG,IAAI;UAChB,IAAI,IAAI,CAAClB,UAAU,EAAE;YACnB,IAAI,CAACC,gBAAgB,CAACC,KAAK,CAAC,CAAC;UAC/B,CAAC,MAAM;YACL,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC,CAAC;UAC3B;QACF,CAAC,MAAM,IAAI,IAAI,CAACF,UAAU,EAAE;UAC1B,IAAI,CAACmB,6BAA6B,CAAC5B,KAAK,CAAC;QAC3C,CAAC,MAAM;UACLiB,IAAA,CAAAC,eAAA,CA3HAhD,cAAc,CAAAiD,SAAA,iCAAAC,IAAA,OA2HapB,KAAK;QAClC;MACF;;MAEA;AACF;AACA;AACA;IAHE;MAAAtB,IAAA;MAAAI,GAAA;MAAAC,KAAA,EAKA,SAAA6C,8BAAwC5B,KAAoB,EAAE;QAC5D,MAAM;UAAElB;QAAI,CAAC,GAAGkB,KAAK;QACrB,MAAMwB,MAAM,GAAI,IAAI,CAAClD,WAAW,CAAwBmD,SAAS,CAAC3C,GAAG,CAAC;QACtE,IAAI,CAAC,IAAI,CAAC6C,IAAI,EAAE;UACd,QAAQH,MAAM;YACZ,KAAK9D,wBAAwB,CAACgE,UAAU;cACtC,IAAI,CAAChC,0BAA0B,CAAC,IAAI,CAAC;cACrC;YACF;cACE;UACJ;QACF,CAAC,MAAM;UACL,QAAQZ,GAAG;YACT,KAAK,OAAO;cACV;gBACE,MAAMR,WAAW,GAAG,IAAI,CAACA,WAAiC;gBAC1D,MAAMuD,eAAe,GAAG,IAAI,CAACC,aAAa,CACxCxD,WAAW,CAACyD,uBACd,CAAuB;gBACvB,IAAIF,eAAe,EAAE;kBACnB,IAAI,CAACrB,8BAA8B,CAACqB,eAAe,CAAC;gBACtD,CAAC,MAAM;kBACL,IAAI,CAACnC,0BAA0B,CAAC,KAAK,CAAC;gBACxC;cACF;cACA;YACF;cACE;UACJ;QACF;MACF;IAAC;MAAAhB,IAAA;MAAAI,GAAA;MAAAC,KAAA,EAED,SAAAiD,kBAAA,EAA8B;QAC5B,MAAM;UACJC,yBAAyB;UACzBC,kBAAkB;UAClBC,QAAQ;UACRC,SAAS;UACTC,SAAS;UACTC,mBAAmB,EAAEC,kBAAkB;UACvCC,kBAAkB,EAAEC,iBAAiB;UACrCC,0BAA0B,EAAEC;QAC9B,CAAC,GAAG,IAAI;QAER,MAAMC,YAAY,GAAGzF,QAAQ,CAAC;UAC5B,CAAE,GAAEE,MAAO,SAAQ,GAAG,IAAI;UAC1B,CAAE,GAAEA,MAAO,mBAAkB,GAAG8E,QAAQ;UACxC,CAAE,GAAE9E,MAAO,mBAAkB,GAAG+E;QAClC,CAAC,CAAC;QAEF,MAAMS,YAAY,GAChBR,SAAS,IACRI,iBAAiB,IAAIA,iBAAiB,CAACK,aAAa,CAAC,CAAC,CAACC,MAAM,GAAG,CAAE;QAErE,OAAO/F,IAAI,CAAAgG,EAAA,KAAAA,EAAA,GAAAC,CAAC;AAChB;AACA;AACA,iBAAe,CAAe;AAC9B,mBAAiB,CAAgB;AACjC,+CAA6C,CAA4B;AACzE,aAAW,CAAY;AACvB;AACA,UAAQ,CAOS;AACjB;AACA,KAAI,GAdaL,YAAY,EACV,CAACC,YAAY,EACeF,yBAAyB,EAC3DN,SAAS,EAEZE,kBAAkB,GAAG,CAAC,GACpBvF,IAAI,CAAAkG,GAAA,KAAAA,GAAA,GAAAD,CAAC;AACjB,6BAA2B,CAAS;AACpC,kBAAgB,CAA4B,IAAC,CAAqB;AAClE,kBAAgB,CAAqB;AACrC;AACA,aAAY,GAJiB5F,MAAM,EACjB4E,yBAAyB,EAAIM,kBAAkB,EAC/CL,kBAAkB,IAGxB,IAAI;MAGd;IAAC;MAAAxD,IAAA;MAAAI,GAAA;MAAAC,KAAA,EAED,SAAAoE,sBAAA,EAAkC;QAChC,MAAM;UACJhB,QAAQ;UACR5B,QAAQ;UACR6C,mBAAmB;UACnBd,mBAAmB,EAAEC;QACvB,CAAC,GAAG,IAAI;QAER,MAAMc,sBAAsB,GAAGlG,QAAQ,CAAC;UACtC,CAAE,GAAEE,MAAO,uBAAsB,GAAG,IAAI;UACxC,CAAE,GAAEA,MAAO,8BAA6B,GAAG,IAAI;UAC/C,CAAE,GAAEA,MAAO,OAAM,GAAG,IAAI;UACxB,CAAE,GAAEA,MAAO,eAAc,GAAG,IAAI;UAChC,CAAE,GAAEA,MAAO,sBAAqB,GAAG,IAAI;UACvC,CAAE,GAAEA,MAAO,iBAAgB,GAAG8E;QAChC,CAAC,CAAC;QACF,OAAOI,kBAAkB,KAAK,CAAC,GAC3Be,SAAS,GACTtG,IAAI,CAAAuG,GAAA,KAAAA,GAAA,GAAAN,CAAC;AACb;AACA;AACA;AACA,qBAAmB,CAAyB;AAC5C;AACA,4BAA0B,CAAW;AACrC,qBAAmB,CAAsB;AACzC,cAAY,CAAqB;AACjC,cAAY,CAGG;AACf;AACA,SAAQ,GAVaI,sBAAsB,EAEf9C,QAAQ,EACf6C,mBAAmB,EAC1Bb,kBAAkB,EAClBnF,OAAO,CAAC;UACR,YAAY,EAAEgG,mBAAmB;UACjCI,KAAK,EAAG,GAAEnG,MAAO;QACnB,CAAC,CAAC,CAEL;MACP;;MAEA;AACF;AACA;IAFE;MAAAqB,IAAA;MAAAI,GAAA;MAAAC,KAAA,EAGA,SAAA0E,aAAA,EAAyC;QACvC,MAAM;UAAEC,KAAK;UAAE3E,KAAK;UAAE4E,oBAAoB,EAAEC;QAAoB,CAAC,GAAG,IAAI;QAExE,MAAMC,YAAY,GAAG1G,QAAQ,CAAC;UAC5B,CAAE,GAAEE,MAAO,cAAa,GAAG,IAAI;UAC/B,CAAE,GAAEA,MAAO,qBAAoB,GAAG,CAAC0B;QACrC,CAAC,CAAC;QAEF,OAAO,CAAC,IAAI,CAAC0B,UAAU,GACnBzD,IAAI,CAAA8G,GAAA,KAAAA,GAAA,GAAAb,CAAC;AACb,4CAA0C,CAAS;AACnD,eAAa,CAA+B;AAC5C;AACA,SAAQ,GAHoC5F,MAAM,EACnCuG,mBAAmB,IAAIF,KAAK,IAGnC1G,IAAI,CAAA+G,GAAA,KAAAA,GAAA,GAAAd,CAAC;AACb;AACA;AACA,qBAAmB,CAAe;AAClC,2BAAyB,CAAQ;AACjC;AACA;AACA;AACA,sBAAoB,CAAoB;AACxC,SAAQ,GANaY,YAAY,EACNH,KAAK,EAIV,IAAI,CAACM,YAAY,CAC9B;MACP;IAAC;MAAAtF,IAAA;MAAAI,GAAA;MAAAC,KAAA,EAED,SAAAkF,sBAAA,EAAyD;QACvD,MAAM;UAAEb,mBAAmB;UAAE1C,gBAAgB,EAAEwD;QAAgB,CAAC,GAAG,IAAI;QACvE,OAAOA,eAAe,IACpBA,eAAe,CAACnF,KAAK,CAACgE,MAAM,GAAG,CAAC,IAChC,IAAI,CAACtC,UAAU,GACbzD,IAAI,CAAAmH,GAAA,KAAAA,GAAA,GAAAlB,CAAC;AACb;AACA;AACA;AACA,qBAAmB,CAAS;AAC5B;AACA,qBAAmB,CAAsB;AACzC,cAAY,CAAiD;AAC7D;AACA,SAAQ,GALa5F,MAAM,EAEN+F,mBAAmB,EAC1BhG,OAAO,CAAC;UAAE,YAAY,EAAEgG;QAAoB,CAAC,CAAC,IAGpDE,SAAS;MACf;;MAEA;AACF;AACA;IAFE;MAAA5E,IAAA;MAAAI,GAAA;MAAAC,KAAA,EAGA,SAAAiF,aAAA,EAAyB;QACvB,MAAMI,KAAK,GAAG,IAAI,CAAC7E,gBAAgB,CAChC,IAAI,CAACjB,WAAW,CAA2BsB,YAC9C,CAAC;QACD,MAAMyE,UAAU,GAAG,IAAI,CAAC3D,gBAAgB,CAAC3B,KAAK,CAACuF,iBAAiB,CAAC,CAAC;QAElE,IAAI,CAAC,IAAI,CAAC3C,IAAI,EAAE;UACd,IAAI,CAACA,IAAI,GAAG,IAAI;QAClB;QAEApE,OAAO,CAAC6G,KAAK,EAAG3E,IAAI,IAAK;UACvB,MAAM8E,SAAS,GAAI9E,IAAI,CAAiB+E,SAAS,CAACF,iBAAiB,CAAC,CAAC;UAErE,IAAI,CAACC,SAAS,CAACE,QAAQ,CAACJ,UAAU,CAAC,EAAE;YAClC5E,IAAI,CAAwBiF,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC;YACxDjF,IAAI,CAAwBkF,eAAe,CAAC,aAAa,CAAC;UAC7D,CAAC,MAAM;YACJlF,IAAI,CAAwBkF,eAAe,CAAC,UAAU,CAAC;UAC1D;QACF,CAAC,CAAC;QAEF,IAAI,CAACC,aAAa,CAAC,CAAC;MACtB;;MAEA;AACF;AACA;AACA;AACA;IAJE;MAAAlG,IAAA;MAAAI,GAAA;MAAAC,KAAA,EAKA,SAAA8F,UAAoBC,SAAiB,EAAE;QACrC,IAAI,CAAC,IAAI,CAACrE,UAAU,EAAE;UACpBQ,IAAA,CAAAC,eAAA,CAlUAhD,cAAc,CAAAiD,SAAA,sBAAAC,IAAA,OAkUE0D,SAAS;QAC3B,CAAC,MAAM;UACL;UACA,MAAMxG,WAAW,GAAG,IAAI,CAACA,WAAoC;UAC7D,MAAM8F,KAAK,GAAG,IAAI,CAAC7E,gBAAgB,CAACjB,WAAW,CAACyG,mBAAmB,CAAC;UACpE,MAAMlD,eAAe,GAAG,IAAI,CAACC,aAAa,CACxCxD,WAAW,CAACyD,uBACd,CAAC;UACD,MAAMiD,gBAAgB,GAAGxH,OAAO,CAAC4G,KAAK,EAAEvC,eAAgB,CAAC;UAEzD,IAAIoD,SAAS,GAAGD,gBAAgB,GAAGF,SAAS;UAC5C,IAAIG,SAAS,GAAG,CAAC,EAAE;YACjBA,SAAS,GAAGb,KAAK,CAACrB,MAAM,GAAG,CAAC;UAC9B;UACA,IAAIkC,SAAS,IAAIb,KAAK,CAACrB,MAAM,EAAE;YAC7BkC,SAAS,GAAG,CAAC;UACf;UACA1H,OAAO,CAAC6G,KAAK,EAAE,CAAC3E,IAAI,EAAEyF,CAAC,KAAK;YACzBzF,IAAI,CAAwB0F,WAAW,GAAGD,CAAC,KAAKD,SAAS;UAC5D,CAAC,CAAC;QACJ;MACF;;MAEA;AACF;AACA;IAFE;MAAAvG,IAAA;MAAAI,GAAA;MAAAC,KAAA,EAGA,SAAA+B,+BAAA,EAA2C;QACzC,MAAMxC,WAAW,GAAG,IAAI,CAACA,WAAoC;QAC7D,MAAM8F,KAAK,GAAG,IAAI,CAAC7E,gBAAgB,CAACjB,WAAW,CAAC8G,oBAAoB,CAAC;QACrE,IAAI,CAAC1E,gBAAgB,CAAC3B,KAAK,GAAG,EAAE;QAChC,IAAI,CAAC4C,IAAI,GAAG,IAAI;QAChB,IAAI,CAACjB,gBAAgB,CAACC,KAAK,CAAC,CAAC;QAC7BpD,OAAO,CAAC6G,KAAK,EAAG3E,IAAI,IAAK;UACtBA,IAAI,CAAwBkF,eAAe,CAAC,UAAU,CAAC;QAC1D,CAAC,CAAC;MACJ;;MAEA;AACF;AACA;IAFE;MAAAjG,IAAA;MAAAC,UAAA,GAGC1B,QAAQ,CAAC;QAAEoI,SAAS,EAAE;MAAwB,CAAC,CAAC;MAAAvG,GAAA;MAAAC,MAAA;QAAA,OAC3B,EAAE;MAAA;IAAA;MAAAL,IAAA;MAAAC,UAAA,GAKvB1B,QAAQ,CAAC;QAAEoI,SAAS,EAAE;MAA8B,CAAC,CAAC;MAAAvG,GAAA;MAAAC,MAAA;QAAA,OAC3B,wBAAwB;MAAA;IAAA;MAAAL,IAAA;MAAAC,UAAA,GAKnD1B,QAAQ,CAAC;QAAEoI,SAAS,EAAE;MAAuB,CAAC,CAAC;MAAAvG,GAAA;MAAAC,MAAA;QAAA,OAC3B,gDAAgD;MAAA;IAAA;MAAAL,IAAA;MAAAC,UAAA,GAKpE1B,QAAQ,CAAC,CAAC;MAAA6B,GAAA;MAAAC,MAAA;QAAA,OACF,IAAI;MAAA;IAAA;MAAAL,IAAA;MAAAC,UAAA,GAKZ1B,QAAQ,CAAC;QAAEoI,SAAS,EAAE;MAAiC,CAAC,CAAC;MAAAvG,GAAA;MAAAC,MAAA;QAAA,OAC5B,qBAAqB;MAAA;IAAA;MAAAL,IAAA;MAAAC,UAAA,GAKlD1B,QAAQ,CAAC;QAAEoI,SAAS,EAAE;MAAgC,CAAC,CAAC;MAAAvG,GAAA;MAAAC,MAAA;QAAA,OAC5B,uBAAuB;MAAA;IAAA;MAAAL,IAAA;MAAAC,UAAA,GAQnD1B,QAAQ,CAAC;QAAEoI,SAAS,EAAE;MAAqB,CAAC,CAAC;MAAAvG,GAAA;MAAAC,MAAA;QAAA,OAC1BnB,yBAAyB,CAAC0H,gBAAgB;MAAA;IAAA;MAAA5G,IAAA;MAAAI,GAAA;MAAAC,KAAA;MArC9D;AACF;AACA;MAIE;AACF;AACA;MAIE;AACF;AACA;MAIE;AACF;AACA;MAIE;AACF;AACA;MAIE;AACF;AACA;AACA;AACA;AACA;MAIE;AACF;AACA;MACE,SAAAwG,SAAA,EAAyB;QACvB,MAAM;UACJpD,QAAQ;UACRqD,IAAI;UACJ5G,IAAI;UACJ6G,OAAO;UACPlF,QAAQ;UACRoB,IAAI;UACJ+D,IAAI;UACJpD,mBAAmB,EAAEC;QACvB,CAAC,GAAG,IAAI;QACR,MAAMoD,MAAM,GAAG/G,IAAI,KAAKjB,aAAa,CAACiI,MAAM;QAE5C,OAAOzI,QAAQ,CAAC;UACd,CAAE,GAAEE,MAAO,gBAAe,GAAG,IAAI;UACjC,CAAE,GAAEA,MAAO,YAAW,GAAG,IAAI;UAC7B,CAAE,GAAEA,MAAO,sBAAqB,GAAG8E,QAAQ;UAC3C,CAAE,GAAE9E,MAAO,oBAAmB,GAAGsI,MAAM;UACvC,CAAE,GAAEtI,MAAO,sBAAqB,GAAGsE,IAAI;UACvC,CAAE,GAAEtE,MAAO,eAAcmI,IAAK,EAAC,GAAGA,IAAI;UACtC,CAAE,GAAEnI,MAAO,yBAAwB,GAAGoI,OAAO;UAC7C,CAAE,GAAEpI,MAAO,sBAAqB,GAAGqI,IAAI;UACvC,CAAE,GAAErI,MAAO,wBAAuB,GAAGsI,MAAM;UAC3C,CAAE,GAAEtI,MAAO,0BAAyB,GAAGkD,QAAQ;UAC/C,CAAE,GAAElD,MAAO,0BAAyB,GAAGkF,kBAAkB,GAAG;QAC9D,CAAC,CAAC;MACJ;IAAC;MAAA7D,IAAA;MAAAI,GAAA;MAAAC,MAAA;QAAA,OAEwB,CAAC8G,KAAK,EAAEC,KAAK,EAAE;UAAEC;QAAO,CAAC,KAAK;UACrDF,KAAK,CAACG,aAAa,CAACF,KAAK,EAAEC,MAAM,EAAE;YAAEE,OAAO,EAAE;UAAK,CAAC,CAAC;QACvD,CAAC;MAAA;IAAA;MAAAvH,IAAA;MAAAI,GAAA;MAAAC,MAAA;QAAA,OAEqB,CACpBmH,SAAmB,EACnB;UAAEC,MAAM;UAAEC,YAAY;UAAEL,MAAM,EAANA,OAAM,GAAG;QAAK,CAAC,KACpC;UACH,MAAMM,cAAc,GAAGC,KAAK,CAACC,IAAI,CAACL,SAAS,CAAC;UAE5C,MAAMM,WAAW,GAAGH,cAAc,CAACI,IAAI,CAAC,CAACZ,KAAK,EAAEC,KAAK,KAAK;YACxD,MAAMY,QAAQ,GAAGP,MAAM,CAAC1B,QAAQ,CAAEoB,KAAK,CAAsB9G,KAAK,CAAC;YACnE,MAAM4H,QAAQ,GAAGR,MAAM,CAAC1B,QAAQ,CAAEqB,KAAK,CAAsB/G,KAAK,CAAC;;YAEnE;YACA,IAAI2H,QAAQ,IAAI,CAACC,QAAQ,EAAE;cACzB,OAAO,CAAC,CAAC;YACX;YAEA,IAAIA,QAAQ,IAAI,CAACD,QAAQ,EAAE;cACzB,OAAO,CAAC;YACV;YAEA,OAAON,YAAY,CAChBP,KAAK,CAAsB9G,KAAK,EAChC+G,KAAK,CAAsB/G,KAAK,EACjC;cACEgH,MAAM,EAANA;YACF,CACF,CAAC;UACH,CAAC,CAAC;UAEF,OAAOS,WAAW;QACpB,CAAC;MAAA;IAAA;MAAA9H,IAAA;MAAAI,GAAA;MAAAC,KAAA,EAED,SAAA6H,aAAaC,iBAAiB,EAAE;QAC9B,MAAM;UAAEjH,YAAY;UAAEoB;QAAS,CAAC,GAAG,IAAI,CACpC1C,WAAoC;QACvC,MAAMwI,IAAI,GAAG,IAAI,CAAChF,aAAa,CAACd,QAAQ,CAAC;QACzC,MAAMoD,KAAK,GAAG,IAAI,CAAC7E,gBAAgB,CAACK,YAAY,CAAC;QAEjD,MAAM;UAAEb,KAAK;UAAEgH;QAAO,CAAC,GAAG,IAAI;QAC9B,MAAMI,MAAM,GAAG,CAACpH,KAAK,GAAG,EAAE,GAAGA,KAAK,CAACgI,KAAK,CAAC,GAAG,CAAC;QAE7C,IAAIF,iBAAiB,CAACG,GAAG,CAAC,MAAM,CAAC,EAAE;UACjCzJ,OAAO,CAAC,IAAI,CAACgC,gBAAgB,CAACK,YAAY,CAAC,EAAGqH,IAAI,IAAK;YACpDA,IAAI,CAAwBzB,IAAI,GAAG,IAAI,CAACA,IAAI;UAC/C,CAAC,CAAC;QACJ;QACA,IAAIqB,iBAAiB,CAACG,GAAG,CAAC,OAAO,CAAC,EAAE;UAClC;UACAzJ,OAAO,CAAC6G,KAAK,EAAG6C,IAAI,IAAK;YACtBA,IAAI,CAAwB9H,QAAQ,GACnCgH,MAAM,CAAC3I,OAAO,CAAEyJ,IAAI,CAAwBlI,KAAK,CAAC,IAAI,CAAC;UAC3D,CAAC,CAAC;UACF,IAAI,CAACuD,mBAAmB,GAAGhF,MAAM,CAC/B8G,KAAK,EACJ6C,IAAI,IAAKd,MAAM,CAAC3I,OAAO,CAAEyJ,IAAI,CAAwBlI,KAAK,CAAC,IAAI,CAClE,CAAC,CAACgE,MAAM;UAER,IAAI,IAAI,CAACmE,iBAAiB,KAAKtJ,yBAAyB,CAACuJ,GAAG,EAAE;YAC5D,MAAMC,eAAe,GAAG,IAAI,CAACC,SAAS,CAACjD,KAAK,EAAE;cAC5C+B,MAAM;cACNC,YAAY,EAAE,IAAI,CAACA,YAAY;cAC/BL;YACF,CAAC,CAAC;YAEFe,IAAI,GAAGM,eAAe,CAACE,OAAO,CAACR,IAAY,CAAC,GAAG,EAAE;YACjD,IAAI,CAACS,eAAe,CAAC,GAAGH,eAAe,CAAC;UAC1C;QACF;QACA,IAAIP,iBAAiB,CAACG,GAAG,CAAC,MAAM,CAAC,EAAE;UACjC,IACE,IAAI,CAACE,iBAAiB,KAAKtJ,yBAAyB,CAAC0H,gBAAgB,EACrE;YACA,MAAM8B,eAAe,GAAG,IAAI,CAACC,SAAS,CAACjD,KAAK,EAAE;cAC5C+B,MAAM;cACNC,YAAY,EAAE,IAAI,CAACA,YAAY;cAC/BL;YACF,CAAC,CAAC;YAEFe,IAAI,GAAGM,eAAe,CAACE,OAAO,CAACR,IAAY,CAAC,GAAG,EAAE;YACjD,IAAI,CAACS,eAAe,CAAC,GAAGH,eAAe,CAAC;UAC1C;QACF;QACA,OAAO,IAAI;MACb;IAAC;MAAA1I,IAAA;MAAAI,GAAA;MAAAC,KAAA,EAED,SAAAyI,QAAQX,iBAAiB,EAAE;QACzB5F,IAAA,CAAAC,eAAA,CA5gBEhD,cAAc,CAAAiD,SAAA,oBAAAC,IAAA,OA4gBFyF,iBAAiB;QAC/B,IAAIA,iBAAiB,CAACG,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI,CAACrF,IAAI,IAAI,CAAC,IAAI,CAAClB,UAAU,EAAE;UAClE;UACA,IAAI,CAACgH,aAAa,CAAC9G,KAAK,CAAC,CAAC;QAC5B;MACF;IAAC;MAAAjC,IAAA;MAAAI,GAAA;MAAAC,KAAA,EAED,SAAA2I,kBAAA,EAAoB;QAClBzG,IAAA,CAAAC,eAAA,CAphBEhD,cAAc,CAAAiD,SAAA,8BAAAC,IAAA;QAqhBhB;AACJ;AACA;QACI,IAAI,CAACrC,KAAK,GAAGzB,MAAM,CACjB,IAAI,CAACiC,gBAAgB,CAClB,IAAI,CAACjB,WAAW,CAA2BsB,YAC9C,CAAC,EACAH,IAAI,IAAMA,IAAI,CAAwBN,QACzC,CAAC,CACEU,GAAG,CAAEJ,IAAI,IAAMA,IAAI,CAAwBV,KAAK,CAAC,CACjDe,IAAI,CAAC,GAAG,CAAC;MACd;;MAEA;AACF;AACA;IAFE;MAAApB,IAAA;MAAAiJ,MAAA;MAAA7I,GAAA;MAAAC,KAAA,EAGA,SAAA6I,iBAAA,EAA8B;QAC5B,OAAQ,uBAAsB;MAChC;;MAEA;AACF;AACA;IAFE;MAAAlJ,IAAA;MAAAiJ,MAAA;MAAA7I,GAAA;MAAAC,KAAA,EAGA,SAAAgD,wBAAA,EAAqC;QACnC,OAAQ,GAAE1E,MAAO,iCAAgC;MACnD;;MAEA;AACF;AACA;AACA;IAHE;MAAAqB,IAAA;MAAAiJ,MAAA;MAAA7I,GAAA;MAAAC,KAAA,EAIA,SAAAa,aAAA,EAA0B;QACxB,OAAQ,GAAEvC,MAAO,oBAAmB;MACtC;;MAEA;AACF;AACA;IAFE;MAAAqB,IAAA;MAAAiJ,MAAA;MAAA7I,GAAA;MAAAC,KAAA,EAGA,SAAAqG,qBAAA,EAAkC;QAChC,OAAQ,GAAE/H,MAAO,8BAA6B;MAChD;;MAEA;AACF;AACA;IAFE;MAAAqB,IAAA;MAAAiJ,MAAA;MAAA7I,GAAA;MAAAC,KAAA,EAGA,SAAAgG,oBAAA,EAAiC;QAC/B,OAAQ,GAAE1H,MAAO,oCAAmC;MACtD;;MAEA;AACF;AACA;IAFE;MAAAqB,IAAA;MAAAiJ,MAAA;MAAA7I,GAAA;MAAAC,KAAA,EAGA,SAAAS,qBAAA,EAAkC;QAChC,OAAQ,GAAEnC,MAAO,8BAA6B;MAChD;;MAEA;AACF;AACA;AACA;IAHE;MAAAqB,IAAA;MAAAiJ,MAAA;MAAA7I,GAAA;MAAAC,KAAA,EAIA,SAAA8I,kBAAA,EAA+B;QAC7B,OAAQ,GAAExK,MAAO,4BAA2B;MAC9C;;MAEA;AACF;AACA;IAFE;MAAAqB,IAAA;MAAAiJ,MAAA;MAAA7I,GAAA;MAAAC,KAAA,EAGA,SAAA+I,YAAA,EAAyB;QACvB,OAAQ,GAAEzK,MAAO,uBAAsB;MACzC;;MAEA;AACF;AACA;AACA;IAHE;MAAAqB,IAAA;MAAAiJ,MAAA;MAAA7I,GAAA;MAAAC,KAAA,EAIA,SAAAgJ,kBAAA,EAA+B;QAC7B,OAAQ,GAAE1K,MAAO,6BAA4B;MAC/C;;MAEA;AACF;AACA;IAFE;MAAAqB,IAAA;MAAAiJ,MAAA;MAAA7I,GAAA;MAAAC,KAAA,EAGA,SAAAiJ,YAAA,EAAyB;QACvB,OAAQ,GAAE3K,MAAO,wBAAuB;MAC1C;IAAC;MAAAqB,IAAA;MAAAiJ,MAAA;MAAA7I,GAAA;MAAAC,MAAA;QAAA,OAEelB,MAAM;MAAA;IAAA;EAAA;AAAA,GA3mBKJ,WAAW;AA8mBxC,eAAeS,cAAc"}