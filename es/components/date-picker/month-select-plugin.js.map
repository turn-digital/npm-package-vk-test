{"version":3,"file":"month-select-plugin.js","names":["forEach","monthToStr","monthNumber","shorthand","locale","months","config","fp","setupElements","monthElements","yearElements","currentMonth","l10n","_createElement","createElement","selectorFlatpickrMonthYearContainer","selectorFlatpickrYearContainer","classFlatpickrCurrentMonth","elem","parentNode","removeChild","splice","length","map","monthElement","textContent","monthYearContainer","closest","insertBefore","updateCurrentMonth","selectorFlatpickrCurrentMonth","monthStr","currentMonthContainer","querySelectorAll","register","loadedPlugins","push","onMonthChange","onValueUpdate","onOpen","onReady"],"sources":["components/date-picker/month-select-plugin.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Instance as FlatpickrInstance } from 'flatpickr/dist/types/instance';\nimport { Locale } from 'flatpickr/dist/types/locale';\nimport { Plugin } from 'flatpickr/dist/types/options';\nimport { forEach } from '../../globals/internal/collection-helpers';\n\n/**\n * @param monthNumber The month number.\n * @param shorthand `true` to use shorthand month.\n * @param locale The Flatpickr locale data.\n * @returns The month string.\n */\nconst monthToStr = (monthNumber: number, shorthand: boolean, locale: Locale) =>\n  locale.months[shorthand ? 'shorthand' : 'longhand'][monthNumber];\n\n/**\n * The configuration for the Flatpickr plugin to use text instead of `<select>` for month picker.\n */\nexport interface DatePickerMonthSelectPluginConfig {\n  /**\n   * `true` to use shorthand month.\n   */\n  shorthand?: boolean;\n\n  /**\n   * The CSS selector for the container of month/year selection UI.\n   */\n  selectorFlatpickrMonthYearContainer: string;\n\n  /**\n   * The CSS selector for the container of year selection UI.\n   */\n  selectorFlatpickrYearContainer: string;\n\n  /**\n   * The CSS selector for the text-based month selection UI.\n   */\n  selectorFlatpickrCurrentMonth: string;\n\n  /**\n   * The CSS class for the text-based month selection UI.\n   */\n  classFlatpickrCurrentMonth: string;\n}\n\n/**\n * @param config Plugin configuration.\n * @returns A Flatpickr plugin to use text instead of `<select>` for month picker.\n */\nexport default (config: DatePickerMonthSelectPluginConfig): Plugin =>\n  (fp: FlatpickrInstance) => {\n    /**\n     * Replaces `<select>` for month with text content.\n     */\n    const setupElements = () => {\n      const {\n        monthElements,\n        yearElements,\n        currentMonth,\n        l10n,\n        _createElement: createElement,\n      } = fp;\n      if (!monthElements) {\n        return;\n      }\n      const {\n        shorthand,\n        selectorFlatpickrMonthYearContainer,\n        selectorFlatpickrYearContainer,\n        classFlatpickrCurrentMonth,\n      } = config;\n      monthElements.forEach((elem) => {\n        if (!elem.parentNode) {\n          return;\n        }\n        elem.parentNode.removeChild(elem);\n      });\n      monthElements.splice(\n        0,\n        monthElements.length,\n        ...monthElements.map(() => {\n          const monthElement = createElement(\n            'span',\n            classFlatpickrCurrentMonth\n          );\n          monthElement.textContent = monthToStr(\n            currentMonth,\n            shorthand === true,\n            l10n\n          );\n          const monthYearContainer = yearElements[0].closest(\n            selectorFlatpickrMonthYearContainer\n          );\n          if (monthYearContainer) {\n            monthYearContainer.insertBefore(\n              monthElement,\n              yearElements[0].closest(selectorFlatpickrYearContainer)\n            );\n          }\n          return monthElement;\n        })\n      );\n    };\n\n    /**\n     * Updates the text-based month UI with the latest selected date.\n     */\n    const updateCurrentMonth = () => {\n      const { yearElements, currentMonth, l10n } = fp;\n      const {\n        shorthand,\n        selectorFlatpickrMonthYearContainer,\n        selectorFlatpickrCurrentMonth,\n      } = config;\n      const monthStr = monthToStr(currentMonth, shorthand === true, l10n);\n      yearElements.forEach((elem) => {\n        const currentMonthContainer = elem.closest(\n          selectorFlatpickrMonthYearContainer\n        );\n        if (currentMonthContainer) {\n          forEach(\n            currentMonthContainer.querySelectorAll(\n              selectorFlatpickrCurrentMonth\n            ),\n            (monthElement) => {\n              monthElement.textContent = monthStr;\n            }\n          );\n        }\n      });\n    };\n\n    /**\n     * Registers this Flatpickr plugin.\n     */\n    const register = () => {\n      fp.loadedPlugins.push('carbonFlatpickrMonthSelectPlugin');\n    };\n\n    return {\n      onMonthChange: updateCurrentMonth,\n      onValueUpdate: updateCurrentMonth,\n      onOpen: updateCurrentMonth,\n      onReady: [setupElements, updateCurrentMonth, register],\n    };\n  };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,SAASA,OAAO,QAAQ,2CAA2C;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAGA,CAACC,WAAmB,EAAEC,SAAkB,EAAEC,MAAc,KACzEA,MAAM,CAACC,MAAM,CAACF,SAAS,GAAG,WAAW,GAAG,UAAU,CAAC,CAACD,WAAW,CAAC;;AAElE;AACA;AACA;;AA4BA;AACA;AACA;AACA;AACA,gBAAgBI,MAAyC,IACtDC,EAAqB,IAAK;EACzB;AACJ;AACA;EACI,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAM;MACJC,aAAa;MACbC,YAAY;MACZC,YAAY;MACZC,IAAI;MACJC,cAAc,EAAEC;IAClB,CAAC,GAAGP,EAAE;IACN,IAAI,CAACE,aAAa,EAAE;MAClB;IACF;IACA,MAAM;MACJN,SAAS;MACTY,mCAAmC;MACnCC,8BAA8B;MAC9BC;IACF,CAAC,GAAGX,MAAM;IACVG,aAAa,CAACT,OAAO,CAAEkB,IAAI,IAAK;MAC9B,IAAI,CAACA,IAAI,CAACC,UAAU,EAAE;QACpB;MACF;MACAD,IAAI,CAACC,UAAU,CAACC,WAAW,CAACF,IAAI,CAAC;IACnC,CAAC,CAAC;IACFT,aAAa,CAACY,MAAM,CAClB,CAAC,EACDZ,aAAa,CAACa,MAAM,EACpB,GAAGb,aAAa,CAACc,GAAG,CAAC,MAAM;MACzB,MAAMC,YAAY,GAAGV,aAAa,CAChC,MAAM,EACNG,0BACF,CAAC;MACDO,YAAY,CAACC,WAAW,GAAGxB,UAAU,CACnCU,YAAY,EACZR,SAAS,KAAK,IAAI,EAClBS,IACF,CAAC;MACD,MAAMc,kBAAkB,GAAGhB,YAAY,CAAC,CAAC,CAAC,CAACiB,OAAO,CAChDZ,mCACF,CAAC;MACD,IAAIW,kBAAkB,EAAE;QACtBA,kBAAkB,CAACE,YAAY,CAC7BJ,YAAY,EACZd,YAAY,CAAC,CAAC,CAAC,CAACiB,OAAO,CAACX,8BAA8B,CACxD,CAAC;MACH;MACA,OAAOQ,YAAY;IACrB,CAAC,CACH,CAAC;EACH,CAAC;;EAED;AACJ;AACA;EACI,MAAMK,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAM;MAAEnB,YAAY;MAAEC,YAAY;MAAEC;IAAK,CAAC,GAAGL,EAAE;IAC/C,MAAM;MACJJ,SAAS;MACTY,mCAAmC;MACnCe;IACF,CAAC,GAAGxB,MAAM;IACV,MAAMyB,QAAQ,GAAG9B,UAAU,CAACU,YAAY,EAAER,SAAS,KAAK,IAAI,EAAES,IAAI,CAAC;IACnEF,YAAY,CAACV,OAAO,CAAEkB,IAAI,IAAK;MAC7B,MAAMc,qBAAqB,GAAGd,IAAI,CAACS,OAAO,CACxCZ,mCACF,CAAC;MACD,IAAIiB,qBAAqB,EAAE;QACzBhC,OAAO,CACLgC,qBAAqB,CAACC,gBAAgB,CACpCH,6BACF,CAAC,EACAN,YAAY,IAAK;UAChBA,YAAY,CAACC,WAAW,GAAGM,QAAQ;QACrC,CACF,CAAC;MACH;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;AACJ;AACA;EACI,MAAMG,QAAQ,GAAGA,CAAA,KAAM;IACrB3B,EAAE,CAAC4B,aAAa,CAACC,IAAI,CAAC,kCAAkC,CAAC;EAC3D,CAAC;EAED,OAAO;IACLC,aAAa,EAAER,kBAAkB;IACjCS,aAAa,EAAET,kBAAkB;IACjCU,MAAM,EAAEV,kBAAkB;IAC1BW,OAAO,EAAE,CAAChC,aAAa,EAAEqB,kBAAkB,EAAEK,QAAQ;EACvD,CAAC;AACH,CAAC"}