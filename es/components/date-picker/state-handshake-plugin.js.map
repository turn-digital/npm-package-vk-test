{"version":3,"file":"state-handshake-plugin.js","names":["datePicker","fp","setOpen","open","setClosed","handleChange","selectedDates","eventChange","constructor","dispatchEvent","CustomEvent","bubbles","cancelable","composed","detail","register","_selectedDates","_value","calendar","loadedPlugins","push","onOpen","onClose","onChange","onReady"],"sources":["components/date-picker/state-handshake-plugin.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Instance as FlatpickrInstance } from 'flatpickr/dist/types/instance';\nimport { Plugin } from 'flatpickr/dist/types/options';\nimport CDSDatePicker from './date-picker';\n\n/**\n * @param datePicker Plugin configuration.\n * @returns A Flatpickr plugin to handshake states with `<cds-date-picker>`.\n */\nexport default (datePicker: CDSDatePicker): Plugin =>\n  (fp: FlatpickrInstance) => {\n    /**\n     * Sets open state.\n     */\n    const setOpen = () => {\n      datePicker.open = true;\n    };\n\n    /**\n     * Sets closed state.\n     */\n    const setClosed = () => {\n      datePicker.open = false;\n    };\n\n    /**\n     * Propagates Flatpickr's `onChange` event to `<cds-date-picker>`.\n     *\n     * @param selectedDates The latest selected dates.\n     */\n    const handleChange = (selectedDates: Date[]) => {\n      const { eventChange } = datePicker.constructor as typeof CDSDatePicker;\n      datePicker.dispatchEvent(\n        new CustomEvent(eventChange, {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          detail: {\n            selectedDates,\n          },\n        })\n      );\n    };\n\n    /**\n     * Registers this Flatpickr plugin.\n     *\n     * @param _selectedDates The selected dates.\n     * @param _value The value.\n     * @param calendar The Flatpickr instance.\n     */\n    const register = (_selectedDates, _value, calendar: FlatpickrInstance) => {\n      datePicker.calendar = calendar;\n      fp.loadedPlugins.push('carbonFlatpickrStateHandshakePlugin');\n    };\n\n    return {\n      onOpen: setOpen,\n      onClose: setClosed,\n      onChange: handleChange,\n      onReady: [register],\n    };\n  };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA,gBAAgBA,UAAyB,IACtCC,EAAqB,IAAK;EACzB;AACJ;AACA;EACI,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBF,UAAU,CAACG,IAAI,GAAG,IAAI;EACxB,CAAC;;EAED;AACJ;AACA;EACI,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBJ,UAAU,CAACG,IAAI,GAAG,KAAK;EACzB,CAAC;;EAED;AACJ;AACA;AACA;AACA;EACI,MAAME,YAAY,GAAIC,aAAqB,IAAK;IAC9C,MAAM;MAAEC;IAAY,CAAC,GAAGP,UAAU,CAACQ,WAAmC;IACtER,UAAU,CAACS,aAAa,CACtB,IAAIC,WAAW,CAACH,WAAW,EAAE;MAC3BI,OAAO,EAAE,IAAI;MACbC,UAAU,EAAE,IAAI;MAChBC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE;QACNR;MACF;IACF,CAAC,CACH,CAAC;EACH,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAMS,QAAQ,GAAGA,CAACC,cAAc,EAAEC,MAAM,EAAEC,QAA2B,KAAK;IACxElB,UAAU,CAACkB,QAAQ,GAAGA,QAAQ;IAC9BjB,EAAE,CAACkB,aAAa,CAACC,IAAI,CAAC,qCAAqC,CAAC;EAC9D,CAAC;EAED,OAAO;IACLC,MAAM,EAAEnB,OAAO;IACfoB,OAAO,EAAElB,SAAS;IAClBmB,QAAQ,EAAElB,YAAY;IACtBmB,OAAO,EAAE,CAACT,QAAQ;EACpB,CAAC;AACH,CAAC"}