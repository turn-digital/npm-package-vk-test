{"version":3,"file":"fix-events-plugin.js","names":["on","config","fp","handleKeydown","event","inputFrom","inputTo","key","target","setDate","value","dateFormat","stopPropagation","release","_hCDSCEDatePickerFixEventsPluginKeydownTo","_hCDSCEDatePickerFixEventsPluginKeydownFrom","init","register","loadedPlugins","push","onReady","onDestroy"],"sources":["components/date-picker/fix-events-plugin.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Instance as FlatpickrInstance } from 'flatpickr/dist/types/instance';\nimport { Plugin } from 'flatpickr/dist/types/options';\nimport on from '../../globals/mixins/on';\nimport Handle from '../../globals/internal/handle';\nimport CDSDatePickerInput from './date-picker-input';\n\n/**\n * The configuration for the Flatpickr plugin to fix Flatpickr's behavior of certain events.\n */\nexport interface DatePickerFixEventsPluginConfig {\n  /**\n   * The input box to enter starting date.\n   */\n  inputFrom: CDSDatePickerInput;\n\n  /**\n   * The input box to enter end date.\n   */\n  inputTo?: CDSDatePickerInput;\n}\n\n/**\n * `FlatpickrInstance` with additional properties used for `carbonFlatpickrFixEventsPlugin`.\n */\nexport interface ExtendedFlatpickrInstanceFixEventsPlugin\n  extends FlatpickrInstance {\n  /**\n   * The handle for `keydown` event handler in the `<input>` for the starting date.\n   */\n  _hCDSCEDatePickerFixEventsPluginKeydownFrom?: Handle | null;\n\n  /**\n   * The handle for `keydown` event handler in the `<input>` for the end date.\n   */\n  _hCDSCEDatePickerFixEventsPluginKeydownTo?: Handle | null;\n}\n\n/**\n * @param config Plugin configuration.\n * @returns A Flatpickr plugin to fix Flatpickr's behavior of certain events.\n */\nexport default (config: DatePickerFixEventsPluginConfig): Plugin =>\n  (fp: ExtendedFlatpickrInstanceFixEventsPlugin) => {\n    /**\n     * Handles `keydown` event.\n     */\n    const handleKeydown = (event: KeyboardEvent) => {\n      const { inputFrom, inputTo } = config;\n      const { key, target } = event;\n      if (inputFrom === target || inputTo === target) {\n        switch (key) {\n          case 'Enter':\n            // Makes sure the hitting enter key picks up pending values of both `<input>`\n            // Workaround for: https://github.com/flatpickr/flatpickr/issues/1942\n            fp.setDate(\n              [inputFrom.value!, (inputTo && inputTo.value)!],\n              true,\n              fp.config.dateFormat\n            );\n            event.stopPropagation();\n            break;\n          case 'ArrowLeft':\n          case 'Left':\n          case 'ArrowRight':\n          case 'Right':\n            // Prevents Flatpickr code from canceling the event if left/right arrow keys are hit on `<input>`,\n            // so user can move the keyboard cursor for editing dates\n            // Workaround for: https://github.com/flatpickr/flatpickr/issues/1943\n            event.stopPropagation();\n            break;\n          default:\n            break;\n        }\n      }\n    };\n\n    /**\n     * Releases event listeners used in this Flatpickr plugin.\n     */\n    const release = () => {\n      if (fp._hCDSCEDatePickerFixEventsPluginKeydownTo) {\n        fp._hCDSCEDatePickerFixEventsPluginKeydownTo =\n          fp._hCDSCEDatePickerFixEventsPluginKeydownTo.release();\n      }\n      if (fp._hCDSCEDatePickerFixEventsPluginKeydownFrom) {\n        fp._hCDSCEDatePickerFixEventsPluginKeydownFrom =\n          fp._hCDSCEDatePickerFixEventsPluginKeydownFrom.release();\n      }\n    };\n\n    /**\n     * Sets up event listeners used for this Flatpickr plugin.\n     */\n    const init = () => {\n      release();\n      const { inputFrom, inputTo } = config;\n      fp._hCDSCEDatePickerFixEventsPluginKeydownFrom = on(\n        inputFrom,\n        'keydown',\n        handleKeydown,\n        true\n      );\n      if (inputTo) {\n        fp._hCDSCEDatePickerFixEventsPluginKeydownTo = on(\n          inputTo,\n          'keydown',\n          handleKeydown,\n          true\n        );\n      }\n    };\n\n    /**\n     * Registers this Flatpickr plugin.\n     */\n    const register = () => {\n      fp.loadedPlugins.push('carbonFlatpickrFixEventsPlugin');\n    };\n\n    return {\n      onReady: [register, init],\n      onDestroy: [release],\n    };\n  };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAOA,EAAE,MAAM,yBAAyB;;AAIxC;AACA;AACA;;AAaA;AACA;AACA;;AAcA;AACA;AACA;AACA;AACA,gBAAgBC,MAAuC,IACpDC,EAA4C,IAAK;EAChD;AACJ;AACA;EACI,MAAMC,aAAa,GAAIC,KAAoB,IAAK;IAC9C,MAAM;MAAEC,SAAS;MAAEC;IAAQ,CAAC,GAAGL,MAAM;IACrC,MAAM;MAAEM,GAAG;MAAEC;IAAO,CAAC,GAAGJ,KAAK;IAC7B,IAAIC,SAAS,KAAKG,MAAM,IAAIF,OAAO,KAAKE,MAAM,EAAE;MAC9C,QAAQD,GAAG;QACT,KAAK,OAAO;UACV;UACA;UACAL,EAAE,CAACO,OAAO,CACR,CAACJ,SAAS,CAACK,KAAK,EAAIJ,OAAO,IAAIA,OAAO,CAACI,KAAK,CAAG,EAC/C,IAAI,EACJR,EAAE,CAACD,MAAM,CAACU,UACZ,CAAC;UACDP,KAAK,CAACQ,eAAe,CAAC,CAAC;UACvB;QACF,KAAK,WAAW;QAChB,KAAK,MAAM;QACX,KAAK,YAAY;QACjB,KAAK,OAAO;UACV;UACA;UACA;UACAR,KAAK,CAACQ,eAAe,CAAC,CAAC;UACvB;QACF;UACE;MACJ;IACF;EACF,CAAC;;EAED;AACJ;AACA;EACI,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIX,EAAE,CAACY,yCAAyC,EAAE;MAChDZ,EAAE,CAACY,yCAAyC,GAC1CZ,EAAE,CAACY,yCAAyC,CAACD,OAAO,CAAC,CAAC;IAC1D;IACA,IAAIX,EAAE,CAACa,2CAA2C,EAAE;MAClDb,EAAE,CAACa,2CAA2C,GAC5Cb,EAAE,CAACa,2CAA2C,CAACF,OAAO,CAAC,CAAC;IAC5D;EACF,CAAC;;EAED;AACJ;AACA;EACI,MAAMG,IAAI,GAAGA,CAAA,KAAM;IACjBH,OAAO,CAAC,CAAC;IACT,MAAM;MAAER,SAAS;MAAEC;IAAQ,CAAC,GAAGL,MAAM;IACrCC,EAAE,CAACa,2CAA2C,GAAGf,EAAE,CACjDK,SAAS,EACT,SAAS,EACTF,aAAa,EACb,IACF,CAAC;IACD,IAAIG,OAAO,EAAE;MACXJ,EAAE,CAACY,yCAAyC,GAAGd,EAAE,CAC/CM,OAAO,EACP,SAAS,EACTH,aAAa,EACb,IACF,CAAC;IACH;EACF,CAAC;;EAED;AACJ;AACA;EACI,MAAMc,QAAQ,GAAGA,CAAA,KAAM;IACrBf,EAAE,CAACgB,aAAa,CAACC,IAAI,CAAC,gCAAgC,CAAC;EACzD,CAAC;EAED,OAAO;IACLC,OAAO,EAAE,CAACH,QAAQ,EAAED,IAAI,CAAC;IACzBK,SAAS,EAAE,CAACR,OAAO;EACrB,CAAC;AACH,CAAC"}