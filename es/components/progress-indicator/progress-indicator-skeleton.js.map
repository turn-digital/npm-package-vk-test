{"version":3,"file":"progress-indicator-skeleton.js","names":["LitElement","html","property","prefix","forEach","styles","carbonElement","customElement","CDSProgressIndicatorSkeleton","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","type","Boolean","reflect","key","value","updated","changedProperties","has","querySelectorAll","selectorStep","item","vertical","render","_t","_","static","default"],"sources":["components/progress-indicator/progress-indicator-skeleton.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport { forEach } from '../../globals/internal/collection-helpers';\nimport CDSProgressStepSkeleton from './progress-step-skeleton';\nimport styles from './progress-indicator.scss';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\n/**\n * Skeleton of progress indicator.\n */\n@customElement(`${prefix}-progress-indicator-skeleton`)\nexport default class CDSProgressIndicatorSkeleton extends LitElement {\n  /**\n   * `true` if the progress indicator should be vertical. Corresponds to the attribute with the same name.\n   */\n  @property({ type: Boolean, reflect: true })\n  vertical = false;\n\n  updated(changedProperties) {\n    if (changedProperties.has('vertical')) {\n      // Propagate `vertical` attribute to descendants until `:host-context()` gets supported in all major browsers\n      forEach(\n        this.querySelectorAll(\n          (this.constructor as typeof CDSProgressIndicatorSkeleton).selectorStep\n        ),\n        (item) => {\n          (item as CDSProgressStepSkeleton).vertical = this.vertical;\n        }\n      );\n    }\n  }\n\n  render() {\n    return html`<slot></slot>`;\n  }\n\n  /**\n   * A selector that will return progress steps.\n   */\n  static get selectorStep() {\n    return `${prefix}-progress-step-skeleton`;\n  }\n\n  static styles = styles;\n}\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAU,EAAEC,IAAI,QAAQ,KAAK;AACtC,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,SAASC,OAAO,QAAQ,2CAA2C;AAEnE,OAAOC,MAAM,MAAM,+BAA2B;AAC9C,SAASC,aAAa,IAAIC,aAAa,QAAQ,yCAAyC;;AAExF;AACA;AACA;AAFA,IAIqBC,4BAA4B,GAAAC,SAAA,EADhDF,aAAa,CAAE,GAAEJ,MAAO,8BAA6B,CAAC,aAAAO,WAAA,EAAAC,WAAA;EAAvD,MACqBH,4BAA4B,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAiCrE;EAAC;IAAAI,CAAA,EAjCoBN,4BAA4B;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GAI9Cf,QAAQ,CAAC;QAAEgB,IAAI,EAAEC,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAChC,KAAK;MAAA;IAAA;MAAAN,IAAA;MAAAK,GAAA;MAAAC,KAAA;MAJhB;AACF;AACA;;MAIE,SAAAC,QAAQC,iBAAiB,EAAE;QACzB,IAAIA,iBAAiB,CAACC,GAAG,CAAC,UAAU,CAAC,EAAE;UACrC;UACArB,OAAO,CACL,IAAI,CAACsB,gBAAgB,CAClB,IAAI,CAACd,WAAW,CAAyCe,YAC5D,CAAC,EACAC,IAAI,IAAK;YACPA,IAAI,CAA6BC,QAAQ,GAAG,IAAI,CAACA,QAAQ;UAC5D,CACF,CAAC;QACH;MACF;IAAC;MAAAb,IAAA;MAAAK,GAAA;MAAAC,KAAA,EAED,SAAAQ,OAAA,EAAS;QACP,OAAO7B,IAAI,CAAA8B,EAAA,KAAAA,EAAA,GAAAC,CAAC,eAAa;MAC3B;;MAEA;AACF;AACA;IAFE;MAAAhB,IAAA;MAAAiB,MAAA;MAAAZ,GAAA;MAAAC,KAAA,EAGA,SAAAK,aAAA,EAA0B;QACxB,OAAQ,GAAExB,MAAO,yBAAwB;MAC3C;IAAC;MAAAa,IAAA;MAAAiB,MAAA;MAAAZ,GAAA;MAAAC,MAAA;QAAA,OAEejB,MAAM;MAAA;IAAA;EAAA;AAAA,GAhCkCL,UAAU;AAAA,SAA/CQ,4BAA4B,IAAA0B,OAAA"}