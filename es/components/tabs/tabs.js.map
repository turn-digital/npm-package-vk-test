{"version":3,"file":"tabs.js","names":["html","property","state","query","classMap","prefix","HostListenerMixin","HostListener","forEach","ChevronRight16","ChevronLeft16","CDSContentSwitcher","NAVIGATION_DIRECTION","TABS_KEYBOARD_ACTION","TABS_TYPE","styles","carbonElement","customElement","CDSTabs","_decorate","_initialize","_HostListenerMixin","constructor","args","F","d","kind","key","value","_navigate","direction","immediate","selectorItem","selectorItemHighlighted","selectorItemSelected","nextItem","_getNextItem","querySelector","_handleUserInitiatedSelectItem","querySelectorAll","item","scrollIntoView","block","inline","nextItemText","textContent","_assistiveStatusText","_currentIndex","requestUpdate","decorators","_handleClick","event","_get","_getPrototypeOf","prototype","call","_handleKeydown","action","getAction","enabledTabs","HOME","firstEnabledTab","END","lastEnabledTab","length","NAVIGATING","_handleScrollButtonClick","_","tablist","scrollLeft","clientWidth","scrollWidth","_contentContainerNode","Math","max","_totalTabs","min","_handleSlotchange","selectedItem","hideDivider","_selectionDidChange","itemToSelect","selectedItemAssistiveText","attribute","reflect","REGULAR","records","_intersectionLeftSentinelNode","intersectionLeftSentinelNode","_intersectionRightSentinelNode","intersectionRightSentinelNode","isIntersecting","target","_isIntersectionLeftTrackerInContent","_isIntersectionRightTrackerInContent","_cleanAndCreateIntersectionObserverContainer","create","_observerIntersection","disconnect","IntersectionObserver","_observeIntersectionContainer","root","threshold","observe","disconnectedCallback","shouldUpdate","changedProperties","_isScrollable","has","elem","type","firstUpdated","selectorTablist","shadowRoot","updated","tab","_tab$getBoundingClien","_tab$offsetLeft","width","tabWidth","getBoundingClientRect","start","offsetLeft","end","visibleStart","BUTTON_WIDTH","visibleEnd","_contentNode","style","insetInlineStart","_currentScrollPosition","renderPreviousButton","isIntersectionLeftTrackerInContent","previousButtonClasses","_t","_2","Left","renderNextButton","isIntersectionRightTrackerInContent","nextButtonClasses","_t2","Right","render","assistiveStatusText","handleSlotchange","_t3","static","Set","selectorItemEnabled","eventBeforeSelect","eventSelect","NONE","default"],"sources":["components/tabs/tabs.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TemplateResult, html } from 'lit';\nimport { property, state, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { prefix } from '../../globals/settings';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport HostListener from '../../globals/decorators/host-listener';\nimport { forEach } from '../../globals/internal/collection-helpers';\nimport ChevronRight16 from '@carbon/icons/lib/chevron--right/16';\nimport ChevronLeft16 from '@carbon/icons/lib/chevron--left/16';\nimport CDSContentSwitcher, {\n  NAVIGATION_DIRECTION,\n} from '../content-switcher/content-switcher';\nimport { TABS_KEYBOARD_ACTION, TABS_TYPE } from './defs';\nimport CDSTab from './tab';\nimport styles from './tabs.scss';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nexport { NAVIGATION_DIRECTION, TABS_KEYBOARD_ACTION, TABS_TYPE };\n\n/**\n * Tabs.\n *\n * @element cds-tabs\n * @fires cds-tabs-beingselected\n *   The custom event fired before a tab is selected upon a user gesture.\n *   Cancellation of this event stops changing the user-initiated selection.\n * @fires cds-tabs-selected - The custom event fired after a a tab is selected upon a user gesture.\n */\n@customElement(`${prefix}-tabs`)\nexport default class CDSTabs extends HostListenerMixin(CDSContentSwitcher) {\n  /**\n   * The latest status of this dropdown, for screen reader to accounce.\n   */\n  private _assistiveStatusText?: string;\n\n  /**\n   * The currently selected index\n   */\n  // @ts-ignore: TS thinks this method is not referred to\n  private _currentIndex = 0;\n\n  /**\n   * Total number of tabs in the component\n   */\n  private _totalTabs = 0;\n\n  /**\n   * `true` if the tablist is scrollable\n   */\n  // @ts-ignore: TS thinks this method is not referred to\n  private _isScrollable = false;\n\n  /**\n   * The DOM element for the tablist.\n   */\n  private tablist: Element | null = null;\n\n  /**\n   * The width of the overflow scroll buttons.\n   */\n  private BUTTON_WIDTH = 44;\n\n  /**\n   * Navigates through tabs.\n   *\n   * @param direction `-1` to navigate backward, `1` to navigate forward.\n   * @param [options] The options.\n   * @param [options.immediate]\n   *   Defaults to `true`\n   *   `true` to make it \"immediate selection change\" mode, which does:\n   *\n   *   Starts with the selected item\n   *   Going prev/next item immediately changes the selection\n   */\n  protected _navigate(\n    direction: number,\n    { immediate = true }: { immediate?: boolean } = {}\n  ) {\n    const { selectorItem, selectorItemHighlighted, selectorItemSelected } = this\n      .constructor as typeof CDSTabs;\n    const nextItem = this._getNextItem(\n      this.querySelector(\n        immediate ? selectorItemSelected : selectorItemHighlighted\n      ) as CDSTab,\n      direction\n    );\n    if (!nextItem) {\n      return;\n    }\n\n    if (immediate) {\n      this._handleUserInitiatedSelectItem(nextItem as CDSTab);\n    } else {\n      forEach(this.querySelectorAll(selectorItem), (item) => {\n        (item as CDSTab)[immediate ? 'selected' : 'highlighted'] =\n          nextItem === item;\n      });\n    }\n\n    // Using `{ block: 'nearest' }` to prevent scrolling unless scrolling is absolutely necessary.\n    // `scrollIntoViewOptions` seems to work in latest Safari despite of MDN/caniuse table.\n    // IE falls back to the old behavior.\n    nextItem.scrollIntoView({ block: 'nearest', inline: 'nearest' });\n\n    const nextItemText = nextItem.textContent;\n    if (nextItemText) {\n      this._assistiveStatusText = nextItemText;\n    }\n    this._currentIndex += direction;\n    this.requestUpdate();\n  }\n\n  @HostListener('click')\n  protected _handleClick(event: MouseEvent) {\n    super._handleClick(event);\n  }\n\n  @HostListener('keydown')\n  protected _handleKeydown(event: KeyboardEvent) {\n    const { key } = event;\n    const action = (this.constructor as typeof CDSTabs).getAction(key);\n    const enabledTabs = this.querySelectorAll(`${prefix}-tab:not([disabled])`);\n    switch (action) {\n      case TABS_KEYBOARD_ACTION.HOME:\n        {\n          const [firstEnabledTab] = enabledTabs;\n          firstEnabledTab.scrollIntoView({\n            block: 'nearest',\n            inline: 'nearest',\n          });\n          this._handleUserInitiatedSelectItem(firstEnabledTab as CDSTab);\n          this.requestUpdate();\n        }\n        break;\n      case TABS_KEYBOARD_ACTION.END:\n        {\n          const lastEnabledTab = enabledTabs[enabledTabs.length - 1];\n          lastEnabledTab.scrollIntoView({\n            block: 'nearest',\n            inline: 'nearest',\n          });\n          this._handleUserInitiatedSelectItem(lastEnabledTab as CDSTab);\n          this.requestUpdate();\n        }\n        break;\n      case TABS_KEYBOARD_ACTION.NAVIGATING:\n        {\n          const direction = NAVIGATION_DIRECTION[key];\n          if (direction) {\n            this._navigate(direction);\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Handles click on overflow scroll buttons.\n   *\n   * @param _ Event object\n   * @param [options] The options.\n   * @param [options.direction] `-1` to scroll forward, `1` to scroll backward.\n   */\n  protected _handleScrollButtonClick(_, { direction }) {\n    if (!this.tablist) {\n      return;\n    }\n    const { scrollLeft, clientWidth, scrollWidth } =\n      this._contentContainerNode!;\n    switch (direction) {\n      case -1:\n        this._contentContainerNode!.scrollLeft = Math.max(\n          scrollLeft - (scrollWidth / this._totalTabs) * 1.5,\n          0\n        );\n        break;\n      case 1:\n        this._contentContainerNode!.scrollLeft =\n          Math.min(\n            scrollLeft + (scrollWidth / this._totalTabs) * 1.5,\n            scrollWidth - clientWidth\n          ) + 1;\n        break;\n      default:\n        break;\n    }\n  }\n\n  _handleSlotchange() {\n    const { selectorItemSelected } = this.constructor as typeof CDSTabs;\n    const selectedItem = this.querySelector(selectorItemSelected);\n    const nextItem = this._getNextItem(selectedItem as CDSTab, 1);\n\n    // Specifies child `<cds-tab>` to hide its divider instead of using CSS,\n    // until `:host-context()` gets supported in all major browsers\n    (nextItem as CDSTab).hideDivider = true;\n  }\n\n  protected _selectionDidChange(itemToSelect: CDSTab) {\n    super._selectionDidChange(itemToSelect);\n    this._assistiveStatusText = this.selectedItemAssistiveText;\n  }\n\n  /**\n   * The scrolling container.\n   */\n  @query(`.${prefix}--tabs-nav-content-container`)\n  private _contentContainerNode?: HTMLElement;\n\n  /**\n   * The scrolling content.\n   */\n  @query(`.${prefix}--tabs-nav-content`)\n  private _contentNode?: HTMLElement;\n\n  /**\n   * The current scroll position.\n   */\n  @state()\n  private _currentScrollPosition = 0;\n\n  /**\n   * The left-hand sentinel to track intersection with the host element.\n   * If they intersect, the left-hand paginator button should be hidden.\n   */\n  @query(`.${prefix}--sub-content-left`)\n  private _intersectionLeftSentinelNode?: HTMLElement;\n\n  /**\n   * The right-hand sentinel to track intersection with the host element.\n   * If they intersect, the right-hand paginator button should be hidden.\n   */\n  @query(`.${prefix}--sub-content-right`)\n  private _intersectionRightSentinelNode?: HTMLElement;\n\n  /**\n   * An assistive text for screen reader to announce, telling the open state.\n   */\n  @property({ attribute: 'selecting-items-assistive-text' })\n  selectingItemsAssistiveText =\n    'Selecting items. Use up and down arrow keys to navigate.';\n\n  /**\n   * An assistive text for screen reader to announce, telling that an item is selected.\n   */\n  @property({ attribute: 'selected-item-assistive-text' })\n  selectedItemAssistiveText = 'Selected an item.';\n\n  /**\n   * The content of the trigger button for narrow mode.\n   */\n  @property({ attribute: 'trigger-content' })\n  triggerContent = '';\n\n  /**\n   * Tabs type.\n   */\n  @property({ reflect: true })\n  type = TABS_TYPE.REGULAR;\n\n  /**\n   * `true` if left-hand scroll intersection sentinel intersects with the host element.\n   * In this condition, the left-hand paginator button should be hidden.\n   */\n  @state()\n  private _isIntersectionLeftTrackerInContent = true;\n\n  /**\n   * `true` if right-hand scroll intersection sentinel intersects with the host element.\n   * In this condition, the right-hand paginator button should be hidden.\n   */\n  @state()\n  private _isIntersectionRightTrackerInContent = true;\n\n  /**\n   * The observer for the intersection of left-side content edge.\n   */\n  private _observerIntersection: IntersectionObserver | null = null;\n\n  /**\n   * The intersection observer callback for the scrolling container.\n   *\n   * @param records The intersection observer records.\n   */\n  private _observeIntersectionContainer = (records) => {\n    const {\n      _intersectionLeftSentinelNode: intersectionLeftSentinelNode,\n      _intersectionRightSentinelNode: intersectionRightSentinelNode,\n    } = this;\n\n    records.forEach(({ isIntersecting, target }) => {\n      if (target === intersectionLeftSentinelNode) {\n        this._isIntersectionLeftTrackerInContent = isIntersecting;\n      }\n      if (target === intersectionRightSentinelNode) {\n        this._isIntersectionRightTrackerInContent = isIntersecting;\n      }\n    });\n  };\n\n  /**\n   * Cleans-up and creates the intersection observer for the scrolling container.\n   *\n   * @param [options] The options.\n   * @param [options.create] `true` to create the new intersection observer.\n   */\n  private _cleanAndCreateIntersectionObserverContainer({\n    create,\n  }: { create?: boolean } = {}) {\n    const {\n      _intersectionLeftSentinelNode: intersectionLeftSentinelNode,\n      _intersectionRightSentinelNode: intersectionRightSentinelNode,\n    } = this;\n\n    if (this._observerIntersection) {\n      this._observerIntersection.disconnect();\n      this._observerIntersection = null;\n    }\n\n    if (create) {\n      this._observerIntersection = new IntersectionObserver(\n        this._observeIntersectionContainer,\n        {\n          root: this,\n          threshold: 0,\n        }\n      );\n\n      if (intersectionLeftSentinelNode) {\n        this._observerIntersection.observe(intersectionLeftSentinelNode);\n      }\n      if (intersectionRightSentinelNode) {\n        this._observerIntersection.observe(intersectionRightSentinelNode);\n      }\n    }\n  }\n\n  disconnectedCallback() {\n    this._cleanAndCreateIntersectionObserverContainer();\n    super.disconnectedCallback();\n  }\n\n  shouldUpdate(changedProperties) {\n    super.shouldUpdate(changedProperties);\n    if (this.tablist) {\n      const { clientWidth, scrollWidth } = this.tablist;\n      this._isScrollable = scrollWidth > clientWidth;\n    }\n    const { selectorItem } = this.constructor as typeof CDSTabs;\n    if (changedProperties.has('type')) {\n      forEach(this.querySelectorAll(selectorItem), (elem) => {\n        this._totalTabs++;\n        (elem as CDSTab).type = this.type;\n      });\n    }\n    return true;\n  }\n\n  firstUpdated() {\n    const { selectorTablist } = this.constructor as typeof CDSTabs;\n    const tablist = this.shadowRoot!.querySelector(selectorTablist)!;\n    this.tablist = tablist;\n    this._cleanAndCreateIntersectionObserverContainer({ create: true });\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has('value')) {\n      const tab = this.querySelector(\n        `${prefix}-tab[value=\"${this.value}\"]`\n      ) as HTMLElement;\n      if (tab) {\n        const { width: tabWidth } = tab?.getBoundingClientRect() ?? {};\n        const start = tab.offsetLeft ?? 0;\n        const end = tab.offsetLeft + tabWidth;\n\n        // The start and end of the visible area of the tablist\n        const visibleStart = this.tablist!.scrollLeft + this.BUTTON_WIDTH;\n        const visibleEnd =\n          this.tablist!.scrollLeft +\n          this.tablist!.clientWidth -\n          this.BUTTON_WIDTH;\n\n        // The beginning of the tab is clipped and not visible\n        if (start < visibleStart) {\n          this.tablist!.scrollLeft = start - this.BUTTON_WIDTH;\n        }\n\n        // The end of the tab is clipped and not visible\n        if (end > visibleEnd) {\n          this.tablist!.scrollLeft =\n            end + this.BUTTON_WIDTH - this.tablist!.clientWidth;\n        }\n      }\n    }\n\n    if (changedProperties.has('_currentScrollPosition')) {\n      if (this._contentNode) {\n        this._contentNode.style.insetInlineStart = `-${this._currentScrollPosition}px`;\n      }\n    }\n  }\n\n  /**\n   * Render the previous button if tablist is wider than container.\n   */\n  protected renderPreviousButton(): TemplateResult | null {\n    const {\n      _isIntersectionLeftTrackerInContent: isIntersectionLeftTrackerInContent,\n    } = this;\n    const previousButtonClasses = classMap({\n      [`${prefix}--tab--overflow-nav-button`]: true,\n      [`${prefix}--tabs__nav-caret-left`]: true,\n      [`${prefix}--tab--overflow-nav-button--previous`]: true,\n      [`${prefix}--tab--overflow-nav-button--hidden`]:\n        isIntersectionLeftTrackerInContent,\n    });\n    return html`\n      <button\n        part=\"prev-button\"\n        tabindex=\"-1\"\n        aria-hidden=\"true\"\n        class=\"${previousButtonClasses}\"\n        @click=${(_) =>\n          this._handleScrollButtonClick(_, {\n            direction: NAVIGATION_DIRECTION.Left,\n          })}>\n        ${ChevronLeft16()}\n      </button>\n    `;\n  }\n\n  /**\n   * Render the next button if tablist is wider than container.\n   */\n  protected renderNextButton(): TemplateResult | null {\n    const {\n      _isIntersectionRightTrackerInContent: isIntersectionRightTrackerInContent,\n    } = this;\n    const nextButtonClasses = classMap({\n      [`${prefix}--tab--overflow-nav-button`]: true,\n      [`${prefix}--tabs__nav-caret-right`]: true,\n      [`${prefix}--tab--overflow-nav-button--next`]: true,\n      [`${prefix}--tab--overflow-nav-button--hidden`]:\n        isIntersectionRightTrackerInContent,\n    });\n    return html`\n      <button\n        part=\"next-button\"\n        tabindex=\"-1\"\n        aria-hidden=\"true\"\n        class=\"${nextButtonClasses}\"\n        @click=${(_) =>\n          this._handleScrollButtonClick(_, {\n            direction: NAVIGATION_DIRECTION.Right,\n          })}>\n        ${ChevronRight16()}\n      </button>\n    `;\n  }\n\n  render() {\n    const {\n      _assistiveStatusText: assistiveStatusText,\n      _handleSlotchange: handleSlotchange,\n    } = this;\n\n    return html`\n      ${this.renderPreviousButton()}\n      <div class=\"${prefix}--tabs-nav-content-container\">\n        <div class=\"${prefix}--tabs-nav-content\">\n          <div class=\"${prefix}--tabs-nav\">\n            <div id=\"tablist\" role=\"tablist\" class=\"${prefix}--tab--list\">\n              <div class=\"${prefix}--sub-content-left\"></div>\n              <slot @slotchange=${handleSlotchange}></slot>\n              <div class=\"${prefix}--sub-content-right\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n      ${this.renderNextButton()}\n      <div\n        class=\"${prefix}--assistive-text\"\n        role=\"status\"\n        aria-live=\"assertive\"\n        aria-relevant=\"additions text\">\n        ${assistiveStatusText}\n      </div>\n    `;\n  }\n\n  /**\n   * Symbols of keys that triggers opening/closing menu and selecting/deselecting menu item.\n   */\n  static TRIGGER_KEYS = new Set([' ', 'Enter']);\n\n  /**\n   * A selector that will return tabs.\n   */\n  static get selectorItem() {\n    return `${prefix}-tab`;\n  }\n\n  /**\n   * A selector that will return enabled tabs.\n   */\n  static get selectorItemEnabled() {\n    return `${prefix}-tab:not([disabled])`;\n  }\n\n  /**\n   * A selector that will return highlighted tabs.\n   */\n  static get selectorItemHighlighted() {\n    return `${prefix}-tab[highlighted]`;\n  }\n\n  /**\n   * A selector that will return selected tabs.\n   */\n  static get selectorItemSelected() {\n    return `${prefix}-tab[selected]`;\n  }\n\n  /**\n   * A selector that returns the tablist\n   */\n  static get selectorTablist() {\n    return `.${prefix}--tab--list`;\n  }\n\n  /**\n   * The name of the custom event fired before a tab is selected upon a user gesture.\n   * Cancellation of this event stops changing the user-initiated selection.\n   */\n  static get eventBeforeSelect() {\n    return `${prefix}-tabs-beingselected`;\n  }\n\n  /**\n   * The name of the custom event fired after a a tab is selected upon a user gesture.\n   */\n  static get eventSelect() {\n    return `${prefix}-tabs-selected`;\n  }\n\n  static styles = styles;\n\n  /**\n   * @param key The key symbol.\n   * @returns A action for dropdown for the given key symbol.\n   */\n  static getAction(key: string) {\n    if (key === 'Home') {\n      return TABS_KEYBOARD_ACTION.HOME;\n    }\n    if (key === 'End') {\n      return TABS_KEYBOARD_ACTION.END;\n    }\n    if (key in NAVIGATION_DIRECTION) {\n      return TABS_KEYBOARD_ACTION.NAVIGATING;\n    }\n    return TABS_KEYBOARD_ACTION.NONE;\n  }\n}\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAyBA,IAAI,QAAQ,KAAK;AAC1C,SAASC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,QAAQ,mBAAmB;AAC1D,SAASC,QAAQ,QAAQ,6BAA6B;AACtD,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,OAAOC,iBAAiB,MAAM,oCAAoC;AAClE,OAAOC,YAAY,MAAM,wCAAwC;AACjE,SAASC,OAAO,QAAQ,2CAA2C;AACnE,OAAOC,cAAc,MAAM,+BAAqC;AAChE,OAAOC,aAAa,MAAM,8BAAoC;AAC9D,OAAOC,kBAAkB,IACvBC,oBAAoB,QACf,sCAAsC;AAC7C,SAASC,oBAAoB,EAAEC,SAAS,QAAQ,QAAQ;AAExD,OAAOC,MAAM,MAAM,iBAAa;AAChC,SAASC,aAAa,IAAIC,aAAa,QAAQ,yCAAyC;AAExF,SAASL,oBAAoB,EAAEC,oBAAoB,EAAEC,SAAS;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,IAUqBI,OAAO,GAAAC,SAAA,EAD3BF,aAAa,CAAE,GAAEZ,MAAO,OAAM,CAAC,aAAAe,WAAA,EAAAC,kBAAA;EAAhC,MACqBH,OAAO,SAAAG,kBAAA,CAA+C;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAwhB3E;EAAC;IAAAI,CAAA,EAxhBoBN,OAAO;IAAAO,CAAA;MAAAC,IAAA;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAUF,CAAC;MAAA;IAAA;MAAAF,IAAA;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAKJ,CAAC;MAAA;IAAA;MAAAF,IAAA;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAME,KAAK;MAAA;IAAA;MAAAF,IAAA;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAKK,IAAI;MAAA;IAAA;MAAAF,IAAA;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAKf,EAAE;MAAA;IAAA;MAAAF,IAAA;MAAAC,GAAA;MAAAC,KAAA;MA9BzB;AACF;AACA;;MAGE;AACF;AACA;MACE;;MAGA;AACF;AACA;;MAGE;AACF;AACA;MACE;;MAGA;AACF;AACA;;MAGE;AACF;AACA;;MAGE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACE,SAAAC,UACEC,SAAiB,EACjB;QAAEC,SAAS,GAAG;MAA8B,CAAC,GAAG,CAAC,CAAC,EAClD;QACA,MAAM;UAAEC,YAAY;UAAEC,uBAAuB;UAAEC;QAAqB,CAAC,GAAG,IAAI,CACzEZ,WAA6B;QAChC,MAAMa,QAAQ,GAAG,IAAI,CAACC,YAAY,CAChC,IAAI,CAACC,aAAa,CAChBN,SAAS,GAAGG,oBAAoB,GAAGD,uBACrC,CAAC,EACDH,SACF,CAAC;QACD,IAAI,CAACK,QAAQ,EAAE;UACb;QACF;QAEA,IAAIJ,SAAS,EAAE;UACb,IAAI,CAACO,8BAA8B,CAACH,QAAkB,CAAC;QACzD,CAAC,MAAM;UACL3B,OAAO,CAAC,IAAI,CAAC+B,gBAAgB,CAACP,YAAY,CAAC,EAAGQ,IAAI,IAAK;YACpDA,IAAI,CAAYT,SAAS,GAAG,UAAU,GAAG,aAAa,CAAC,GACtDI,QAAQ,KAAKK,IAAI;UACrB,CAAC,CAAC;QACJ;;QAEA;QACA;QACA;QACAL,QAAQ,CAACM,cAAc,CAAC;UAAEC,KAAK,EAAE,SAAS;UAAEC,MAAM,EAAE;QAAU,CAAC,CAAC;QAEhE,MAAMC,YAAY,GAAGT,QAAQ,CAACU,WAAW;QACzC,IAAID,YAAY,EAAE;UAChB,IAAI,CAACE,oBAAoB,GAAGF,YAAY;QAC1C;QACA,IAAI,CAACG,aAAa,IAAIjB,SAAS;QAC/B,IAAI,CAACkB,aAAa,CAAC,CAAC;MACtB;IAAC;MAAAtB,IAAA;MAAAuB,UAAA,GAEA1C,YAAY,CAAC,OAAO,CAAC;MAAAoB,GAAA;MAAAC,KAAA,EAAtB,SAAAsB,aACuBC,KAAiB,EAAE;QACxCC,IAAA,CAAAC,eAAA,CArFiBnC,OAAO,CAAAoC,SAAA,yBAAAC,IAAA,OAqFLJ,KAAK;MAC1B;IAAC;MAAAzB,IAAA;MAAAuB,UAAA,GAEA1C,YAAY,CAAC,SAAS,CAAC;MAAAoB,GAAA;MAAAC,KAAA,EAAxB,SAAA4B,eACyBL,KAAoB,EAAE;QAC7C,MAAM;UAAExB;QAAI,CAAC,GAAGwB,KAAK;QACrB,MAAMM,MAAM,GAAI,IAAI,CAACnC,WAAW,CAAoBoC,SAAS,CAAC/B,GAAG,CAAC;QAClE,MAAMgC,WAAW,GAAG,IAAI,CAACpB,gBAAgB,CAAE,GAAElC,MAAO,sBAAqB,CAAC;QAC1E,QAAQoD,MAAM;UACZ,KAAK5C,oBAAoB,CAAC+C,IAAI;YAC5B;cACE,MAAM,CAACC,eAAe,CAAC,GAAGF,WAAW;cACrCE,eAAe,CAACpB,cAAc,CAAC;gBAC7BC,KAAK,EAAE,SAAS;gBAChBC,MAAM,EAAE;cACV,CAAC,CAAC;cACF,IAAI,CAACL,8BAA8B,CAACuB,eAAyB,CAAC;cAC9D,IAAI,CAACb,aAAa,CAAC,CAAC;YACtB;YACA;UACF,KAAKnC,oBAAoB,CAACiD,GAAG;YAC3B;cACE,MAAMC,cAAc,GAAGJ,WAAW,CAACA,WAAW,CAACK,MAAM,GAAG,CAAC,CAAC;cAC1DD,cAAc,CAACtB,cAAc,CAAC;gBAC5BC,KAAK,EAAE,SAAS;gBAChBC,MAAM,EAAE;cACV,CAAC,CAAC;cACF,IAAI,CAACL,8BAA8B,CAACyB,cAAwB,CAAC;cAC7D,IAAI,CAACf,aAAa,CAAC,CAAC;YACtB;YACA;UACF,KAAKnC,oBAAoB,CAACoD,UAAU;YAClC;cACE,MAAMnC,SAAS,GAAGlB,oBAAoB,CAACe,GAAG,CAAC;cAC3C,IAAIG,SAAS,EAAE;gBACb,IAAI,CAACD,SAAS,CAACC,SAAS,CAAC;cAC3B;YACF;YACA;UACF;YACE;QACJ;MACF;;MAEA;AACF;AACA;AACA;AACA;AACA;AACA;IANE;MAAAJ,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAOA,SAAAsC,yBAAmCC,CAAC,EAAE;QAAErC;MAAU,CAAC,EAAE;QACnD,IAAI,CAAC,IAAI,CAACsC,OAAO,EAAE;UACjB;QACF;QACA,MAAM;UAAEC,UAAU;UAAEC,WAAW;UAAEC;QAAY,CAAC,GAC5C,IAAI,CAACC,qBAAsB;QAC7B,QAAQ1C,SAAS;UACf,KAAK,CAAC,CAAC;YACL,IAAI,CAAC0C,qBAAqB,CAAEH,UAAU,GAAGI,IAAI,CAACC,GAAG,CAC/CL,UAAU,GAAIE,WAAW,GAAG,IAAI,CAACI,UAAU,GAAI,GAAG,EAClD,CACF,CAAC;YACD;UACF,KAAK,CAAC;YACJ,IAAI,CAACH,qBAAqB,CAAEH,UAAU,GACpCI,IAAI,CAACG,GAAG,CACNP,UAAU,GAAIE,WAAW,GAAG,IAAI,CAACI,UAAU,GAAI,GAAG,EAClDJ,WAAW,GAAGD,WAChB,CAAC,GAAG,CAAC;YACP;UACF;YACE;QACJ;MACF;IAAC;MAAA5C,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAED,SAAAiD,kBAAA,EAAoB;QAClB,MAAM;UAAE3C;QAAqB,CAAC,GAAG,IAAI,CAACZ,WAA6B;QACnE,MAAMwD,YAAY,GAAG,IAAI,CAACzC,aAAa,CAACH,oBAAoB,CAAC;QAC7D,MAAMC,QAAQ,GAAG,IAAI,CAACC,YAAY,CAAC0C,YAAY,EAAY,CAAC,CAAC;;QAE7D;QACA;QACC3C,QAAQ,CAAY4C,WAAW,GAAG,IAAI;MACzC;IAAC;MAAArD,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAED,SAAAoD,oBAA8BC,YAAoB,EAAE;QAClD7B,IAAA,CAAAC,eAAA,CA5KiBnC,OAAO,CAAAoC,SAAA,gCAAAC,IAAA,OA4KE0B,YAAY;QACtC,IAAI,CAACnC,oBAAoB,GAAG,IAAI,CAACoC,yBAAyB;MAC5D;;MAEA;AACF;AACA;IAFE;MAAAxD,IAAA;MAAAuB,UAAA,GAGC9C,KAAK,CAAE,IAAGE,MAAO,8BAA6B,CAAC;MAAAsB,GAAA;MAAAC,KAAA;IAAA;MAAAF,IAAA;MAAAuB,UAAA,GAM/C9C,KAAK,CAAE,IAAGE,MAAO,oBAAmB,CAAC;MAAAsB,GAAA;MAAAC,KAAA;IAAA;MAAAF,IAAA;MAAAuB,UAAA,GAMrC/C,KAAK,CAAC,CAAC;MAAAyB,GAAA;MAAAC,MAAA;QAAA,OACyB,CAAC;MAAA;IAAA;MAAAF,IAAA;MAAAuB,UAAA,GAMjC9C,KAAK,CAAE,IAAGE,MAAO,oBAAmB,CAAC;MAAAsB,GAAA;MAAAC,KAAA;IAAA;MAAAF,IAAA;MAAAuB,UAAA,GAOrC9C,KAAK,CAAE,IAAGE,MAAO,qBAAoB,CAAC;MAAAsB,GAAA;MAAAC,KAAA;IAAA;MAAAF,IAAA;MAAAuB,UAAA,GAMtChD,QAAQ,CAAC;QAAEkF,SAAS,EAAE;MAAiC,CAAC,CAAC;MAAAxD,GAAA;MAAAC,MAAA;QAAA,OAExD,0DAA0D;MAAA;IAAA;MAAAF,IAAA;MAAAuB,UAAA,GAK3DhD,QAAQ,CAAC;QAAEkF,SAAS,EAAE;MAA+B,CAAC,CAAC;MAAAxD,GAAA;MAAAC,MAAA;QAAA,OAC5B,mBAAmB;MAAA;IAAA;MAAAF,IAAA;MAAAuB,UAAA,GAK9ChD,QAAQ,CAAC;QAAEkF,SAAS,EAAE;MAAkB,CAAC,CAAC;MAAAxD,GAAA;MAAAC,MAAA;QAAA,OAC1B,EAAE;MAAA;IAAA;MAAAF,IAAA;MAAAuB,UAAA,GAKlBhD,QAAQ,CAAC;QAAEmF,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAzD,GAAA;MAAAC,MAAA;QAAA,OACrBd,SAAS,CAACuE,OAAO;MAAA;IAAA;MAAA3D,IAAA;MAAAuB,UAAA,GAMvB/C,KAAK,CAAC,CAAC;MAAAyB,GAAA;MAAAC,MAAA;QAAA,OACsC,IAAI;MAAA;IAAA;MAAAF,IAAA;MAAAuB,UAAA,GAMjD/C,KAAK,CAAC,CAAC;MAAAyB,GAAA;MAAAC,MAAA;QAAA,OACuC,IAAI;MAAA;IAAA;MAAAF,IAAA;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAKU,IAAI;MAAA;IAAA;MAAAF,IAAA;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAOxB0D,OAAO,IAAK;UACnD,MAAM;YACJC,6BAA6B,EAAEC,4BAA4B;YAC3DC,8BAA8B,EAAEC;UAClC,CAAC,GAAG,IAAI;UAERJ,OAAO,CAAC9E,OAAO,CAAC,CAAC;YAAEmF,cAAc;YAAEC;UAAO,CAAC,KAAK;YAC9C,IAAIA,MAAM,KAAKJ,4BAA4B,EAAE;cAC3C,IAAI,CAACK,mCAAmC,GAAGF,cAAc;YAC3D;YACA,IAAIC,MAAM,KAAKF,6BAA6B,EAAE;cAC5C,IAAI,CAACI,oCAAoC,GAAGH,cAAc;YAC5D;UACF,CAAC,CAAC;QACJ,CAAC;MAAA;IAAA;MAAAjE,IAAA;MAAAC,GAAA;MAAAC,KAAA;MAzFD;AACF;AACA;MAIE;AACF;AACA;MAIE;AACF;AACA;AACA;MAIE;AACF;AACA;AACA;MAIE;AACF;AACA;MAKE;AACF;AACA;MAIE;AACF;AACA;MAIE;AACF;AACA;MAIE;AACF;AACA;AACA;MAIE;AACF;AACA;AACA;MAIE;AACF;AACA;MAGE;AACF;AACA;AACA;AACA;MAiBE;AACF;AACA;AACA;AACA;AACA;MACE,SAAAmE,6CAAqD;QACnDC;MACoB,CAAC,GAAG,CAAC,CAAC,EAAE;QAC5B,MAAM;UACJT,6BAA6B,EAAEC,4BAA4B;UAC3DC,8BAA8B,EAAEC;QAClC,CAAC,GAAG,IAAI;QAER,IAAI,IAAI,CAACO,qBAAqB,EAAE;UAC9B,IAAI,CAACA,qBAAqB,CAACC,UAAU,CAAC,CAAC;UACvC,IAAI,CAACD,qBAAqB,GAAG,IAAI;QACnC;QAEA,IAAID,MAAM,EAAE;UACV,IAAI,CAACC,qBAAqB,GAAG,IAAIE,oBAAoB,CACnD,IAAI,CAACC,6BAA6B,EAClC;YACEC,IAAI,EAAE,IAAI;YACVC,SAAS,EAAE;UACb,CACF,CAAC;UAED,IAAId,4BAA4B,EAAE;YAChC,IAAI,CAACS,qBAAqB,CAACM,OAAO,CAACf,4BAA4B,CAAC;UAClE;UACA,IAAIE,6BAA6B,EAAE;YACjC,IAAI,CAACO,qBAAqB,CAACM,OAAO,CAACb,6BAA6B,CAAC;UACnE;QACF;MACF;IAAC;MAAAhE,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAED,SAAA4E,qBAAA,EAAuB;QACrB,IAAI,CAACT,4CAA4C,CAAC,CAAC;QACnD3C,IAAA,CAAAC,eAAA,CAxTiBnC,OAAO,CAAAoC,SAAA,iCAAAC,IAAA;MAyT1B;IAAC;MAAA7B,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAED,SAAA6E,aAAaC,iBAAiB,EAAE;QAC9BtD,IAAA,CAAAC,eAAA,CA5TiBnC,OAAO,CAAAoC,SAAA,yBAAAC,IAAA,OA4TLmD,iBAAiB;QACpC,IAAI,IAAI,CAACtC,OAAO,EAAE;UAChB,MAAM;YAAEE,WAAW;YAAEC;UAAY,CAAC,GAAG,IAAI,CAACH,OAAO;UACjD,IAAI,CAACuC,aAAa,GAAGpC,WAAW,GAAGD,WAAW;QAChD;QACA,MAAM;UAAEtC;QAAa,CAAC,GAAG,IAAI,CAACV,WAA6B;QAC3D,IAAIoF,iBAAiB,CAACE,GAAG,CAAC,MAAM,CAAC,EAAE;UACjCpG,OAAO,CAAC,IAAI,CAAC+B,gBAAgB,CAACP,YAAY,CAAC,EAAG6E,IAAI,IAAK;YACrD,IAAI,CAAClC,UAAU,EAAE;YAChBkC,IAAI,CAAYC,IAAI,GAAG,IAAI,CAACA,IAAI;UACnC,CAAC,CAAC;QACJ;QACA,OAAO,IAAI;MACb;IAAC;MAAApF,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAED,SAAAmF,aAAA,EAAe;QACb,MAAM;UAAEC;QAAgB,CAAC,GAAG,IAAI,CAAC1F,WAA6B;QAC9D,MAAM8C,OAAO,GAAG,IAAI,CAAC6C,UAAU,CAAE5E,aAAa,CAAC2E,eAAe,CAAE;QAChE,IAAI,CAAC5C,OAAO,GAAGA,OAAO;QACtB,IAAI,CAAC2B,4CAA4C,CAAC;UAAEC,MAAM,EAAE;QAAK,CAAC,CAAC;MACrE;IAAC;MAAAtE,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAED,SAAAsF,QAAQR,iBAAiB,EAAE;QACzB,IAAIA,iBAAiB,CAACE,GAAG,CAAC,OAAO,CAAC,EAAE;UAClC,MAAMO,GAAG,GAAG,IAAI,CAAC9E,aAAa,CAC3B,GAAEhC,MAAO,eAAc,IAAI,CAACuB,KAAM,IACrC,CAAgB;UAChB,IAAIuF,GAAG,EAAE;YAAA,IAAAC,qBAAA,EAAAC,eAAA;YACP,MAAM;cAAEC,KAAK,EAAEC;YAAS,CAAC,IAAAH,qBAAA,GAAGD,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEK,qBAAqB,CAAC,CAAC,cAAAJ,qBAAA,cAAAA,qBAAA,GAAI,CAAC,CAAC;YAC9D,MAAMK,KAAK,IAAAJ,eAAA,GAAGF,GAAG,CAACO,UAAU,cAAAL,eAAA,cAAAA,eAAA,GAAI,CAAC;YACjC,MAAMM,GAAG,GAAGR,GAAG,CAACO,UAAU,GAAGH,QAAQ;;YAErC;YACA,MAAMK,YAAY,GAAG,IAAI,CAACxD,OAAO,CAAEC,UAAU,GAAG,IAAI,CAACwD,YAAY;YACjE,MAAMC,UAAU,GACd,IAAI,CAAC1D,OAAO,CAAEC,UAAU,GACxB,IAAI,CAACD,OAAO,CAAEE,WAAW,GACzB,IAAI,CAACuD,YAAY;;YAEnB;YACA,IAAIJ,KAAK,GAAGG,YAAY,EAAE;cACxB,IAAI,CAACxD,OAAO,CAAEC,UAAU,GAAGoD,KAAK,GAAG,IAAI,CAACI,YAAY;YACtD;;YAEA;YACA,IAAIF,GAAG,GAAGG,UAAU,EAAE;cACpB,IAAI,CAAC1D,OAAO,CAAEC,UAAU,GACtBsD,GAAG,GAAG,IAAI,CAACE,YAAY,GAAG,IAAI,CAACzD,OAAO,CAAEE,WAAW;YACvD;UACF;QACF;QAEA,IAAIoC,iBAAiB,CAACE,GAAG,CAAC,wBAAwB,CAAC,EAAE;UACnD,IAAI,IAAI,CAACmB,YAAY,EAAE;YACrB,IAAI,CAACA,YAAY,CAACC,KAAK,CAACC,gBAAgB,GAAI,IAAG,IAAI,CAACC,sBAAuB,IAAG;UAChF;QACF;MACF;;MAEA;AACF;AACA;IAFE;MAAAxG,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAGA,SAAAuG,qBAAA,EAAwD;QACtD,MAAM;UACJtC,mCAAmC,EAAEuC;QACvC,CAAC,GAAG,IAAI;QACR,MAAMC,qBAAqB,GAAGjI,QAAQ,CAAC;UACrC,CAAE,GAAEC,MAAO,4BAA2B,GAAG,IAAI;UAC7C,CAAE,GAAEA,MAAO,wBAAuB,GAAG,IAAI;UACzC,CAAE,GAAEA,MAAO,sCAAqC,GAAG,IAAI;UACvD,CAAE,GAAEA,MAAO,oCAAmC,GAC5C+H;QACJ,CAAC,CAAC;QACF,OAAOpI,IAAI,CAAAsI,EAAA,KAAAA,EAAA,GAAAC,EAAC;AAChB;AACA;AACA;AACA;AACA,iBAAe,CAAwB;AACvC,iBAAe,CAGF;AACb,UAAQ,CAAkB;AAC1B;AACA,KAAI,GAPaF,qBAAqB,EACpBlE,CAAC,IACT,IAAI,CAACD,wBAAwB,CAACC,CAAC,EAAE;UAC/BrC,SAAS,EAAElB,oBAAoB,CAAC4H;QAClC,CAAC,CAAC,EACF9H,aAAa,CAAC,CAAC;MAGvB;;MAEA;AACF;AACA;IAFE;MAAAgB,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAGA,SAAA6G,iBAAA,EAAoD;QAClD,MAAM;UACJ3C,oCAAoC,EAAE4C;QACxC,CAAC,GAAG,IAAI;QACR,MAAMC,iBAAiB,GAAGvI,QAAQ,CAAC;UACjC,CAAE,GAAEC,MAAO,4BAA2B,GAAG,IAAI;UAC7C,CAAE,GAAEA,MAAO,yBAAwB,GAAG,IAAI;UAC1C,CAAE,GAAEA,MAAO,kCAAiC,GAAG,IAAI;UACnD,CAAE,GAAEA,MAAO,oCAAmC,GAC5CqI;QACJ,CAAC,CAAC;QACF,OAAO1I,IAAI,CAAA4I,GAAA,KAAAA,GAAA,GAAAL,EAAC;AAChB;AACA;AACA;AACA;AACA,iBAAe,CAAoB;AACnC,iBAAe,CAGF;AACb,UAAQ,CAAmB;AAC3B;AACA,KAAI,GAPaI,iBAAiB,EAChBxE,CAAC,IACT,IAAI,CAACD,wBAAwB,CAACC,CAAC,EAAE;UAC/BrC,SAAS,EAAElB,oBAAoB,CAACiI;QAClC,CAAC,CAAC,EACFpI,cAAc,CAAC,CAAC;MAGxB;IAAC;MAAAiB,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAED,SAAAkH,OAAA,EAAS;QACP,MAAM;UACJhG,oBAAoB,EAAEiG,mBAAmB;UACzClE,iBAAiB,EAAEmE;QACrB,CAAC,GAAG,IAAI;QAER,OAAOhJ,IAAI,CAAAiJ,GAAA,KAAAA,GAAA,GAAAV,EAAC;AAChB,QAAM,CAA8B;AACpC,oBAAkB,CAAS;AAC3B,sBAAoB,CAAS;AAC7B,wBAAsB,CAAS;AAC/B,sDAAoD,CAAS;AAC7D,4BAA0B,CAAS;AACnC,kCAAgC,CAAmB;AACnD,4BAA0B,CAAS;AACnC;AACA;AACA;AACA;AACA,QAAM,CAA0B;AAChC;AACA,iBAAe,CAAS;AACxB;AACA;AACA;AACA,UAAQ,CAAsB;AAC9B;AACA,KAAI,GApBI,IAAI,CAACJ,oBAAoB,CAAC,CAAC,EACf9H,MAAM,EACJA,MAAM,EACJA,MAAM,EACwBA,MAAM,EAChCA,MAAM,EACA2I,gBAAgB,EACtB3I,MAAM,EAK1B,IAAI,CAACoI,gBAAgB,CAAC,CAAC,EAEdpI,MAAM,EAIb0I,mBAAmB;MAG3B;;MAEA;AACF;AACA;IAFE;MAAArH,IAAA;MAAAwH,MAAA;MAAAvH,GAAA;MAAAC,MAAA;QAAA,OAGsB,IAAIuH,GAAG,CAAC,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;MAAA;IAAA;MAAAzH,IAAA;MAAAwH,MAAA;MAAAvH,GAAA;MAAAC,KAAA;MAE7C;AACF;AACA;MACE,SAAAI,aAAA,EAA0B;QACxB,OAAQ,GAAE3B,MAAO,MAAK;MACxB;;MAEA;AACF;AACA;IAFE;MAAAqB,IAAA;MAAAwH,MAAA;MAAAvH,GAAA;MAAAC,KAAA,EAGA,SAAAwH,oBAAA,EAAiC;QAC/B,OAAQ,GAAE/I,MAAO,sBAAqB;MACxC;;MAEA;AACF;AACA;IAFE;MAAAqB,IAAA;MAAAwH,MAAA;MAAAvH,GAAA;MAAAC,KAAA,EAGA,SAAAK,wBAAA,EAAqC;QACnC,OAAQ,GAAE5B,MAAO,mBAAkB;MACrC;;MAEA;AACF;AACA;IAFE;MAAAqB,IAAA;MAAAwH,MAAA;MAAAvH,GAAA;MAAAC,KAAA,EAGA,SAAAM,qBAAA,EAAkC;QAChC,OAAQ,GAAE7B,MAAO,gBAAe;MAClC;;MAEA;AACF;AACA;IAFE;MAAAqB,IAAA;MAAAwH,MAAA;MAAAvH,GAAA;MAAAC,KAAA,EAGA,SAAAoF,gBAAA,EAA6B;QAC3B,OAAQ,IAAG3G,MAAO,aAAY;MAChC;;MAEA;AACF;AACA;AACA;IAHE;MAAAqB,IAAA;MAAAwH,MAAA;MAAAvH,GAAA;MAAAC,KAAA,EAIA,SAAAyH,kBAAA,EAA+B;QAC7B,OAAQ,GAAEhJ,MAAO,qBAAoB;MACvC;;MAEA;AACF;AACA;IAFE;MAAAqB,IAAA;MAAAwH,MAAA;MAAAvH,GAAA;MAAAC,KAAA,EAGA,SAAA0H,YAAA,EAAyB;QACvB,OAAQ,GAAEjJ,MAAO,gBAAe;MAClC;IAAC;MAAAqB,IAAA;MAAAwH,MAAA;MAAAvH,GAAA;MAAAC,MAAA;QAAA,OAEeb,MAAM;MAAA;IAAA;MAAAW,IAAA;MAAAwH,MAAA;MAAAvH,GAAA;MAAAC,KAAA;MAEtB;AACF;AACA;AACA;MACE,SAAA8B,UAAiB/B,GAAW,EAAE;QAC5B,IAAIA,GAAG,KAAK,MAAM,EAAE;UAClB,OAAOd,oBAAoB,CAAC+C,IAAI;QAClC;QACA,IAAIjC,GAAG,KAAK,KAAK,EAAE;UACjB,OAAOd,oBAAoB,CAACiD,GAAG;QACjC;QACA,IAAInC,GAAG,IAAIf,oBAAoB,EAAE;UAC/B,OAAOC,oBAAoB,CAACoD,UAAU;QACxC;QACA,OAAOpD,oBAAoB,CAAC0I,IAAI;MAClC;IAAC;EAAA;AAAA,GAvhBkCjJ,iBAAiB,CAACK,kBAAkB,CAAC;AAAA,SAArDO,OAAO,IAAAsI,OAAA"}