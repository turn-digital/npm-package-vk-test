{"version":3,"file":"pagination.js","names":["LitElement","html","property","query","CaretLeft16","CaretRight16","prefix","FocusMixin","HostListenerMixin","HostListener","styles","PAGINATION_SIZE","carbonElement","customElement","CDSPagination","_decorate","_initialize","_FocusMixin","constructor","args","F","d","kind","decorators","key","value","_handleSlotChange","target","content","assignedNodes","filter","node","nodeType","Node","TEXT_NODE","textContent","trim","forEach","item","_pageSizeSelect","appendChild","_renderStatusText","start","pageSize","totalItems","pagesUnknown","formatStatusWithDeterminateTotal","formatStatusWithIndeterminateTotal","end","Math","min","Infinity","format","count","_handleUserInitiatedChangeStart","dispatchEvent","CustomEvent","eventChangeCurrent","bubbles","composed","detail","page","_handleClickPrevButton","oldStart","newStart","max","_handleClickNextButton","_handleChangeSelector","event","composedPath","parseInt","totalPages","ceil","attribute","type","Number","reflect","Boolean","MEDIUM","updated","changedProperties","selectorPageSizesSelect","selectorPagesSelect","has","shadowRoot","querySelector","toString","render","disabled","forwardText","backwardText","itemsPerPageText","pageInputDisabled","pageSizeInputDisabled","size","handleClickPrevButton","handleClickNextButton","handleSlotChange","formatLabelText","formatSupplementalText","isLastPage","prevButtonDisabled","nextButtonDisabled","prevButtonClassMap","nextButtonClassMap","prevButtonClasses","Object","entries","map","join","nextButtonClasses","_t","_","_t2","Array","from","_item","index","_t3","_t4","_t5","slot","static","eventChangeSelect","_objectSpread","shadowRootOptions","delegatesFocus"],"sources":["components/pagination/pagination.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport CaretLeft16 from '@carbon/icons/lib/caret--left/16';\nimport CaretRight16 from '@carbon/icons/lib/caret--right/16';\nimport { prefix } from '../../globals/settings';\nimport FocusMixin from '../../globals/mixins/focus';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport HostListener from '../../globals/decorators/host-listener';\nimport styles from './pagination.scss';\nimport { PAGINATION_SIZE } from './defs';\nimport CDSSelect from '../select/select';\nimport '../button/index';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\n/**\n * Pagination UI.\n *\n * @element cds-pagination\n * @slot page-sizes-select - Where to put in the `<page-sizes-select>`.\n * @fires cds-pages-select-changed - The custom event fired after the current page is changed from `<cds-pages-select>`.\n * @fires cds-page-sizes-select-changed\n *   The custom event fired after the number of rows per page is changed from `<cds-page-sizes-select>`.\n */\n@customElement(`${prefix}-pagination`)\nclass CDSPagination extends FocusMixin(HostListenerMixin(LitElement)) {\n  @query(`${prefix}-select`)\n  private _pageSizeSelect!: HTMLElement;\n\n  private _handleSlotChange({ target }: Event) {\n    const content = (target as HTMLSlotElement)\n      .assignedNodes()\n      .filter(\n        (node) => node.nodeType !== Node.TEXT_NODE || node!.textContent!.trim()\n      );\n\n    content.forEach((item) => {\n      this._pageSizeSelect.appendChild(item);\n    });\n  }\n\n  /**\n   * @returns Page status text.\n   */\n  private _renderStatusText() {\n    const {\n      start,\n      pageSize,\n      totalItems,\n      pagesUnknown,\n      formatStatusWithDeterminateTotal,\n      formatStatusWithIndeterminateTotal,\n    } = this;\n    // * Regular: `1-10 of 100 items`\n    // * Indeterminate total: `Item 1-10` (`Item 11-` at the last page)\n    const end = Math.min(\n      start + pageSize,\n      totalItems == null ? Infinity : totalItems\n    );\n    const format =\n      totalItems == null || pagesUnknown\n        ? formatStatusWithIndeterminateTotal\n        : formatStatusWithDeterminateTotal;\n\n    // `start`/`end` properties starts with zero, whereas we want to show number starting with 1\n    return format({ start: start + 1, end, count: totalItems });\n  }\n\n  /**\n   * Handles user-initiated change in the row number the current page starts with.\n   *\n   * @param start The new current row number, index that starts with zero.\n   */\n  private _handleUserInitiatedChangeStart(start: number) {\n    this.start = start;\n    this.dispatchEvent(\n      new CustomEvent(\n        (this.constructor as typeof CDSPagination).eventChangeCurrent,\n        {\n          bubbles: true,\n          composed: true,\n          detail: {\n            page: this.page,\n            pageSize: this.pageSize,\n          },\n        }\n      )\n    );\n  }\n\n  /**\n   * Handles `click` event on the previous button.\n   */\n  private _handleClickPrevButton() {\n    const { start: oldStart, pageSize } = this;\n    this.page--;\n    const newStart = Math.max(oldStart - pageSize, 0);\n    if (newStart !== oldStart) {\n      this._handleUserInitiatedChangeStart(newStart);\n    }\n  }\n\n  /**\n   * Handles `click` event on the next button.\n   */\n  private _handleClickNextButton() {\n    const { start: oldStart, pageSize, totalItems } = this;\n    this.page++;\n    const newStart = oldStart + pageSize;\n    if (newStart < (totalItems == null ? Infinity : totalItems)) {\n      this._handleUserInitiatedChangeStart(newStart);\n    }\n  }\n\n  /**\n   * Handles user-initiated change in number of rows per page.\n   *\n   * @param event The event.\n   */\n  @HostListener('eventChangeSelect')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleChangeSelector(event) {\n    const { value } = event.detail;\n    const { totalItems, pageSize } = this;\n\n    if (event.composedPath()[0] === this._pageSizeSelect) {\n      this.pageSize = parseInt(value);\n      // Default pageSize to effectively be 1 when we have a value of 0 to avoid\n      // division by 0.\n      this.totalPages =\n        pageSize > 0 ? Math.ceil(totalItems / pageSize) : totalItems;\n      this.page = 1;\n      this.start = 0;\n    } else {\n      this.page = value;\n      this._handleUserInitiatedChangeStart((value - 1) * pageSize);\n    }\n  }\n\n  /**\n   * The assistive text for the button to go to previous page.\n   */\n  @property({ attribute: 'backward-text' })\n  backwardText = 'Previous page';\n\n  /**\n   * The current page\n   */\n  @property({ type: Number, reflect: true })\n  page = 1;\n\n  /**\n   * The formatter for the assistive text for screen readers to announce.\n   * Should be changed upon the locale the UI is rendered with.\n   */\n  @property({ attribute: false })\n  formatLabelText = ({ count }) =>\n    `Page number, of ${count} page${count <= 1 ? '' : 's'}`;\n\n  /**\n   * The formatter, used with determinate the total pages. Should be changed upon the locale the UI is rendered with.\n   */\n  @property({ attribute: false })\n  formatStatusWithDeterminateTotal = ({ start, end, count }) =>\n    `${start}–${end} of ${count} item${count <= 1 ? '' : 's'}`;\n\n  /**\n   * The formatter, used with indeterminate the total pages. Should be changed upon the locale the UI is rendered with.\n   */\n  @property({ attribute: false })\n  formatStatusWithIndeterminateTotal = ({ start, end, count }) =>\n    end == null\n      ? `Item ${start}–`\n      : `${start}–${end} item${count <= 1 ? '' : 's'}`;\n\n  /**\n   * The formatter for the text next to the select box. Should be changed upon the locale the UI is rendered with.\n   */\n  @property({ attribute: false })\n  formatSupplementalText = ({ count }) =>\n    this.pagesUnknown || !this.totalItems\n      ? `page`\n      : `of ${count} page${count <= 1 ? '' : 's'}`;\n  /**\n   * `true` to explicitly state that user is at the last page.\n   */\n  @property({ type: Boolean, attribute: 'is-last-page' })\n  isLastPage!: boolean;\n\n  /**\n   * The translatable text indicating the number of items per page.\n   */\n  @property({ attribute: 'items-per-page-text' })\n  itemsPerPageText = 'Items per page:';\n\n  /**\n   * `true` if the pagination UI should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * The assistive text for the button to go to next page.\n   */\n  @property({ attribute: 'forward-text' })\n  forwardText = 'Next page';\n\n  /**\n   * true if the select box to change the page should be disabled.\n   */\n  @property({ attribute: 'page-input-disabled' })\n  pageInputDisabled;\n\n  /**\n   * Number of items per page.\n   */\n  @property({ type: Number, attribute: 'page-size', reflect: true })\n  pageSize = 10;\n\n  /**\n   * true if the select box to change the items per page should be disabled.\n   */\n  @property({ type: Boolean, attribute: 'page-size-input-disabled' })\n  pageSizeInputDisabled;\n\n  /**\n   * The label text for the UI to select page size.\n   */\n  @property({ attribute: 'page-size-label-text' })\n  pageSizeLabelText!: string;\n\n  /**\n   * true if the total number of items is unknown.\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'pages-unknown' })\n  pagesUnknown = false;\n\n  /**\n   * Specify the size of the Pagination.\n   */\n  @property({ reflect: true })\n  size = PAGINATION_SIZE.MEDIUM;\n\n  /**\n   * The row number where current page start with, index that starts with zero.\n   */\n  @property({ type: Number })\n  start = 0;\n\n  /**\n   * The number of total items.\n   */\n  @property({ type: Number, attribute: 'total-items' })\n  totalItems!: number;\n\n  /**\n   * The number of total pages.\n   */\n  @property({ type: Number })\n  totalPages = 1;\n\n  updated(changedProperties) {\n    const { page, pageSize, totalItems } = this;\n    const { selectorPageSizesSelect, selectorPagesSelect } = this\n      .constructor as typeof CDSPagination;\n\n    if (changedProperties.has('pageSize')) {\n      (this.shadowRoot!.querySelector(selectorPageSizesSelect) as any).value =\n        pageSize;\n    }\n    if (changedProperties.has('pageSize') || changedProperties.has('start')) {\n      // Default pageSize to effectively be 1 when we have a value of 0 to avoid\n      // division by 0.\n      this.totalPages =\n        pageSize > 0 ? Math.ceil(totalItems / pageSize) : totalItems;\n      (this.shadowRoot!.querySelector(selectorPagesSelect) as CDSSelect).value =\n        this.page.toString();\n    }\n\n    if (changedProperties.has('page')) {\n      this._handleUserInitiatedChangeStart((page - 1) * pageSize);\n    }\n  }\n\n  render() {\n    const {\n      page,\n      disabled,\n      forwardText,\n      backwardText,\n      itemsPerPageText,\n      pageInputDisabled,\n      pageSize,\n      pageSizeInputDisabled,\n      pagesUnknown,\n      size,\n      start,\n      totalItems,\n      totalPages,\n      _handleClickPrevButton: handleClickPrevButton,\n      _handleClickNextButton: handleClickNextButton,\n      _handleSlotChange: handleSlotChange,\n      formatLabelText,\n      formatSupplementalText,\n    } = this;\n\n    const { isLastPage = start + pageSize >= totalItems } = this;\n    const prevButtonDisabled = disabled || start === 0;\n    const nextButtonDisabled = disabled || isLastPage;\n\n    const prevButtonClassMap = {\n      [`${prefix}--btn`]: true,\n      [`${prefix}--btn--icon-only`]: true,\n      [`${prefix}--pagination__button`]: true,\n      [`${prefix}--pagination__button--backward`]: true,\n      [`${prefix}--pagination__button--no-index`]: prevButtonDisabled,\n      [`${prefix}--btn--${size}`]: true,\n      [`${prefix}--btn--ghost`]: true,\n    };\n    const nextButtonClassMap = {\n      [`${prefix}--btn`]: true,\n      [`${prefix}--btn--icon-only`]: true,\n      [`${prefix}--pagination__button`]: true,\n      [`${prefix}--pagination__button--forward`]: true,\n      [`${prefix}--pagination__button--no-index`]: nextButtonDisabled,\n      [`${prefix}--btn--${size}`]: true,\n      [`${prefix}--btn--ghost`]: true,\n    };\n\n    const prevButtonClasses = Object.entries(prevButtonClassMap)\n      .filter(([, value]) => value === true)\n      .map(([key]) => key)\n      .join(' ');\n    const nextButtonClasses = Object.entries(nextButtonClassMap)\n      .filter(([, value]) => value === true)\n      .map(([key]) => key)\n      .join(' ');\n\n    return html`\n      <div class=\"${prefix}--pagination__left\">\n        <label for=\"select\" class=\"${prefix}--pagination__text\"\n          ><slot name=\"label-text\">${itemsPerPageText}</slot></label\n        >\n        <cds-select\n          ?disabled=${disabled || pageSizeInputDisabled}\n          id=\"page-size-select\"\n          left-select\n          pagination\n          size=\"${size}\"\n          inline\n          value=\"${pageSize}\">\n          <slot @slotchange=${handleSlotChange}></slot>\n        </cds-select>\n        <span\n          class=\"${prefix}--pagination__text ${prefix}--pagination__items-count\"\n          >${this._renderStatusText()}</span\n        >\n      </div>\n      <div class=\"${prefix}--pagination__right\">\n        <label for=\"select\" class=\"${prefix}--label ${prefix}--visually-hidden\">\n          ${formatLabelText({ count: totalPages })}\n        </label>\n        ${pagesUnknown || !totalItems\n          ? html`\n              <span\n                class=\"${prefix}--pagination__text ${prefix}--pagination__page-text\"\n                >${formatSupplementalText({ count: totalPages })}</span\n              >\n\n              <cds-select\n                ?disabled=${disabled || pageInputDisabled}\n                id=\"pages-select\"\n                pagination\n                size=\"${size}\"\n                inline\n                value=\"${page}\">\n                ${Array.from(new Array(totalPages)).map(\n                  (_item, index) =>\n                    html`\n                      <cds-select-item value=\"${index + 1}\">\n                        ${index + 1}\n                      </cds-select-item>\n                    `\n                )}\n              </cds-select>\n            `\n          : html`\n              <cds-select\n                ?disabled=${disabled || pageInputDisabled}\n                id=\"pages-select\"\n                pagination\n                size=\"${size}\"\n                inline\n                value=\"${page}\">\n                ${Array.from(new Array(totalPages)).map(\n                  (_item, index) =>\n                    html`\n                      <cds-select-item value=\"${index + 1}\">\n                        ${index + 1}\n                      </cds-select-item>\n                    `\n                )}\n              </cds-select>\n              <span class=\"${prefix}--pagination__text\"\n                >${formatSupplementalText({ count: totalPages })}</span\n              >\n            `}\n\n        <div class=\"${prefix}--pagination__control-buttons\">\n          <cds-button\n            pagination\n            size=\"${size}\"\n            ?disabled=\"${prevButtonDisabled}\"\n            button-class-name=\"${prevButtonClasses}\"\n            tooltip-text=\"${backwardText}\"\n            @click=\"${handleClickPrevButton}\">\n            ${CaretLeft16({ slot: 'icon' })}\n          </cds-button>\n          <cds-button\n            tooltip-position=\"top-right\"\n            pagination\n            size=\"${size}\"\n            ?disabled=\"${nextButtonDisabled}\"\n            button-class-name=\"${nextButtonClasses}\"\n            tooltip-text=\"${forwardText}\"\n            @click=\"${handleClickNextButton}\">\n            ${CaretRight16({ slot: 'icon' })}\n          </cds-button>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * A selector that will return the select box for the current page.\n   */\n  static get selectorPagesSelect() {\n    return `${prefix}-select#pages-select`;\n  }\n\n  /**\n   * A selector that will return the select box for page sizes.\n   */\n  static get selectorPageSizesSelect() {\n    return `${prefix}-select`;\n  }\n\n  /**\n   * The name of the custom event fired after the current row number is changed.\n   */\n  static get eventChangeCurrent() {\n    return `${prefix}-pagination-changed-current`;\n  }\n\n  /**\n   * The name of the custom event fired after the number of rows per page is changed from `<cds-page-sizes-select>`.\n   */\n  static get eventChangeSelect() {\n    return `${prefix}-select-selected`;\n  }\n\n  static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\nexport default CDSPagination;\n"],"mappings":"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"}