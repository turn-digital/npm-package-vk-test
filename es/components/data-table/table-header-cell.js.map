{"version":3,"file":"table-header-cell.js","names":["LitElement","html","property","classMap","ArrowsVertical32","ArrowDown32","prefix","FocusMixin","TABLE_SORT_CYCLE","TABLE_SORT_CYCLES","TABLE_SORT_DIRECTION","styles","carbonElement","customElement","CDSTableHeaderCell","_decorate","_initialize","_FocusMixin","constructor","args","F","d","kind","key","value","_handleClickSortButton","event","target","matches","slugItem","nextSortDirection","_getNextSort","init","bubbles","cancelable","composed","detail","oldSortDirection","sortDirection","dispatchEvent","CustomEvent","eventBeforeSort","sortActive","_handleSlotChange","requestUpdate","_handleSlugSlotChange","hasContent","assignedNodes","filter","elem","undefined","length","_hasSlug","Boolean","setAttribute","sortCycle","TRI_STATES_FROM_ASCENDING","TypeError","directions","index","indexOf","NONE","RangeError","decorators","type","reflect","attribute","connectedCallback","hasAttribute","_get","_getPrototypeOf","prototype","call","updated","changedProperties","isSortable","has","removeAttribute","render","labelClasses","sortIcon","part","class","_t","_","textContent","_t2","static","_objectSpread","shadowRootOptions","delegatesFocus"],"sources":["components/data-table/table-header-cell.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport ArrowsVertical32 from '@carbon/icons/lib/arrows--vertical/32';\nimport ArrowDown32 from '@carbon/icons/lib/arrow--down/32';\nimport { prefix } from '../../globals/settings';\nimport FocusMixin from '../../globals/mixins/focus';\nimport {\n  TABLE_SORT_CYCLE,\n  TABLE_SORT_CYCLES,\n  TABLE_SORT_DIRECTION,\n} from './defs';\nimport styles from './data-table.scss';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nexport { TABLE_SORT_CYCLE, TABLE_SORT_CYCLES, TABLE_SORT_DIRECTION };\n\n/**\n * Data table header cell.\n *\n * @element cds-table-header-cell\n * @fires cds-table-header-cell-sort\n *   The custom event fired before a new sort direction is set upon a user gesture.\n *   Cancellation of this event stops the user-initiated change in sort direction.\n */\n@customElement(`${prefix}-table-header-cell`)\nclass CDSTableHeaderCell extends FocusMixin(LitElement) {\n  /**\n   * Handles `click` event on the sort button.\n   *\n   */\n  private _handleClickSortButton(event) {\n    if (\n      !(event.target as HTMLElement).matches(\n        (this.constructor as typeof CDSTableHeaderCell).slugItem\n      )\n    ) {\n      const nextSortDirection = this._getNextSort();\n      const init = {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: {\n          oldSortDirection: this.sortDirection,\n          sortDirection: nextSortDirection,\n        },\n      };\n      const constructor = this.constructor as typeof CDSTableHeaderCell;\n      if (\n        this.dispatchEvent(new CustomEvent(constructor.eventBeforeSort, init))\n      ) {\n        this.sortActive = true;\n        this.sortDirection = nextSortDirection;\n      }\n    }\n  }\n\n  /**\n   * Handles `slotchange` event.\n   *\n   */\n  private _handleSlotChange() {\n    this.requestUpdate();\n  }\n\n  /**\n   * Handles `slotchange` event.\n   */\n  protected _handleSlugSlotChange({ target }: Event) {\n    const hasContent = (target as HTMLSlotElement)\n      .assignedNodes()\n      .filter((elem) =>\n        (elem as HTMLElement).matches !== undefined\n          ? (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSTableHeaderCell).slugItem\n            )\n          : false\n      );\n    if (hasContent.length > 0) {\n      this._hasSlug = Boolean(hasContent);\n      (hasContent[0] as HTMLElement).setAttribute('size', 'mini');\n    }\n\n    this.requestUpdate();\n  }\n\n  /**\n   * @returns The next sort direction.\n   */\n  private _getNextSort() {\n    const {\n      sortCycle = TABLE_SORT_CYCLE.TRI_STATES_FROM_ASCENDING,\n      sortDirection,\n    } = this;\n    if (!sortDirection) {\n      throw new TypeError(\n        'Table sort direction is not defined. ' +\n          'Likely that `_getNextSort()` is called with non-sorted table column, which should not happen in regular condition.'\n      );\n    }\n    const directions = (this.constructor as typeof CDSTableHeaderCell)\n      .TABLE_SORT_CYCLES[sortCycle];\n    const index = directions.indexOf(sortDirection as TABLE_SORT_DIRECTION);\n    if (index < 0) {\n      if (sortDirection === TABLE_SORT_DIRECTION.NONE) {\n        // If the current sort direction is `none` in bi-state sort cycle, returns the first one in the cycle\n        return directions[0];\n      }\n      throw new RangeError(\n        `The given sort state (${sortDirection}) is not found in the given table sort cycle: ${sortCycle}`\n      );\n    }\n    return directions[(index + 1) % directions.length];\n  }\n\n  /**\n   * `true` if there is a slug.\n   */\n  protected _hasSlug = false;\n\n  /**\n   * `true` if the table has expandable rows\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'expandable' })\n  isExpandable = false;\n\n  /**\n   * `true` if this table has selectable rows\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'is-selectable' })\n  isSelectable = false;\n  /**\n   * `true` if this table header column should be sortable\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'is-sortable' })\n  isSortable = false;\n\n  /**\n   * `true` if this table header cell is of a primary sorting column.\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'sort-active' })\n  sortActive = false;\n\n  /**\n   * The table sort cycle in use.\n   */\n  @property({ reflect: true, attribute: 'sort-cycle' })\n  sortCycle?: TABLE_SORT_CYCLE;\n\n  /**\n   * The table sort direction.\n   * If present, this table header cell will have a sorting UI. Choose between `ascending` or `descending`.\n   */\n  @property({ reflect: true, attribute: 'sort-direction' })\n  sortDirection?: TABLE_SORT_DIRECTION;\n\n  /**\n   * TODO: Uncomment when Carbon fully implements sticky header\n   * Specify whether the header should be sticky.\n   * Still experimental: may not work with every combination of table props\n   */\n  // @property({ type: Boolean, reflect: true, attribute: 'sticky-header' })\n  // stickyHeader = false;\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'columnheader');\n    }\n\n    super.connectedCallback();\n  }\n\n  updated(changedProperties) {\n    if (\n      this.isSortable &&\n      !changedProperties.has('sortDirection') &&\n      !this.sortDirection\n    ) {\n      this.sortDirection = TABLE_SORT_DIRECTION.NONE;\n    }\n    if (this._hasSlug) {\n      this.setAttribute('slug', '');\n    } else {\n      this.removeAttribute('slug');\n    }\n  }\n\n  render() {\n    const { sortDirection } = this;\n    const labelClasses = classMap({\n      [`${prefix}--table-header-label`]: true,\n      [`${prefix}--table-header-label--slug`]: this._hasSlug,\n    });\n    if (sortDirection) {\n      const sortIcon =\n        sortDirection === TABLE_SORT_DIRECTION.NONE\n          ? ArrowsVertical32({\n              part: 'sort-icon',\n              class: `${prefix}--table-sort__icon-unsorted`,\n            })\n          : ArrowDown32({\n              part: 'sort-icon',\n              class: `${prefix}--table-sort__icon`,\n            });\n      return html`\n        <button\n          part=\"sort-button\"\n          class=\"${prefix}--table-sort\"\n          title=\"${this.textContent}\"\n          @click=${this._handleClickSortButton}>\n          <span class=\"${prefix}--table-sort__flex\">\n            <span part=\"label-text\" class=\"${prefix}--table-header-label\"\n              ><slot @slotchange=${this._handleSlotChange}></slot\n            ></span>\n            <slot\n              name=\"slug\"\n              @slotchange=\"${this._handleSlugSlotChange}\"></slot>\n            ${sortIcon}\n          </span>\n        </button>\n      `;\n    }\n    return html`<span part=\"label-text\" class=\"${labelClasses}\">\n      <slot></slot\n      ><slot name=\"slug\" @slotchange=\"${this._handleSlugSlotChange}\"></slot\n    ></span> `;\n  }\n  /**\n   * A selector that will return the slug item.\n   */\n  static get slugItem() {\n    return `${prefix}-slug`;\n  }\n\n  /**\n   * The name of the custom event fired before a new sort direction is set upon a user gesture.\n   * Cancellation of this event stops the user-initiated change in sort direction.\n   */\n  static get eventBeforeSort() {\n    return `${prefix}-table-header-cell-sort`;\n  }\n\n  static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n  static styles = styles;\n\n  /**\n   * Mapping of table sort cycles to table sort states.\n   */\n  static TABLE_SORT_CYCLES = TABLE_SORT_CYCLES;\n}\n\nexport default CDSTableHeaderCell;\n"],"mappings":"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"}