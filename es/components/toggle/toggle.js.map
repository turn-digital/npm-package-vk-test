{"version":3,"file":"toggle.js","names":["classMap","html","property","query","ifDefined","prefix","CDSCheckbox","TOGGLE_SIZE","styles","HostListener","HostListenerMixin","carbonElement","customElement","CDSToggle","_decorate","_initialize","_HostListenerMixin","constructor","args","F","d","kind","decorators","key","value","_handleChange","checked","indeterminate","_checkboxNode","disabled","readOnly","eventChange","dispatchEvent","CustomEvent","bubbles","composed","detail","event","_renderCheckmark","size","SMALL","undefined","_t","_","attribute","reflect","type","Boolean","REGULAR","render","labelText","hideLabel","id","name","labelA","labelB","handleChange","inputClasses","toggleClasses","stateText","_t2","static"],"sources":["components/toggle/toggle.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { prefix } from '../../globals/settings';\nimport CDSCheckbox from '../checkbox/checkbox';\nimport { TOGGLE_SIZE } from './defs';\nimport styles from './toggle.scss';\nimport HostListener from '../../globals/decorators/host-listener';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nexport { TOGGLE_SIZE };\n\n/**\n * Basic toggle.\n *\n * @element cds-toggle\n * @slot label-text - The label text.\n * @slot checked-text - The text for the checked state.\n * @slot unchecked-text - The text for the unchecked state.\n * @fires cds-toggle-changed - The custom event fired after this changebox changes its checked state.\n */\n@customElement(`${prefix}-toggle`)\nclass CDSToggle extends HostListenerMixin(CDSCheckbox) {\n  @query('button')\n  protected _checkboxNode!: HTMLInputElement;\n\n  /**\n   * Handles `click` event on the `<button>` in the shadow DOM.\n   */\n  protected _handleChange() {\n    const { checked, indeterminate } = this._checkboxNode;\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n    this.checked = !checked;\n    this.indeterminate = indeterminate;\n    const { eventChange } = this.constructor as typeof CDSCheckbox;\n    this.dispatchEvent(\n      new CustomEvent(eventChange, {\n        bubbles: true,\n        composed: true,\n        detail: {\n          indeterminate,\n        },\n      })\n    );\n  }\n\n  /**\n   * Handles `keydown` event on the toggle button.\n   */\n  @HostListener('keydown')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  protected _handleKeydown = async (event: KeyboardEvent) => {\n    const { key } = event;\n\n    if (key === ' ') {\n      this._handleChange();\n    }\n  };\n\n  protected _renderCheckmark() {\n    if (this.size !== TOGGLE_SIZE.SMALL) {\n      return undefined;\n    }\n    return html`\n      <svg\n        class=\"${prefix}--toggle__check\"\n        width=\"6px\"\n        height=\"5px\"\n        viewBox=\"0 0 6 5\">\n        <path d=\"M2.2 2.7L5 0 6 1 2.2 5 0 2.7 1 1.5z\" />\n      </svg>\n    `;\n  }\n\n  /**\n   * The text for the checked state.\n   */\n  @property({ attribute: 'label-a' })\n  labelA = '';\n\n  /**\n   * Hide label text.\n   */\n  @property({ reflect: true, type: Boolean })\n  hideLabel = false;\n\n  /**\n   * Read only boolean.\n   */\n  @property({ reflect: true, attribute: 'read-only', type: Boolean })\n  readOnly = false;\n\n  /**\n   * Toggle size.\n   */\n  @property({ reflect: true })\n  size = TOGGLE_SIZE.REGULAR;\n\n  /**\n   * The text for the unchecked state.\n   */\n  @property({ attribute: 'label-b' })\n  labelB = '';\n\n  render() {\n    const {\n      checked,\n      disabled,\n      labelText,\n      hideLabel,\n      id,\n      name,\n      size,\n      labelA,\n      labelB,\n      value,\n      _handleChange: handleChange,\n    } = this;\n    const inputClasses = classMap({\n      [`${prefix}--toggle__appearance`]: true,\n      [`${prefix}--toggle__appearance--${size}`]: size,\n    });\n    const toggleClasses = classMap({\n      [`${prefix}--toggle__switch`]: true,\n      [`${prefix}--toggle__switch--checked`]: checked,\n    });\n    const stateText = checked ? labelA : labelB;\n    return html`\n      <button\n        class=\"${prefix}--toggle__button\"\n        role=\"switch\"\n        type=\"button\"\n        aria-checked=${checked}\n        aria-lable=${labelText}\n        .checked=\"${checked}\"\n        name=\"${ifDefined(name)}\"\n        value=\"${ifDefined(value)}\"\n        ?disabled=${disabled}\n        id=\"${id}\"></button>\n      <label for=\"${id}\" class=\"${prefix}--toggle__label\">\n        <span class=\"${prefix}--toggle__label-text\">${labelText}</span>\n        <div class=\"${inputClasses}\">\n          <div class=\"${toggleClasses}\" @click=${handleChange}>\n            ${this._renderCheckmark()}\n          </div>\n          <span\n            ?hidden=\"${hideLabel}\"\n            class=\"${prefix}--toggle__text\"\n            aria-hidden=\"true\"\n            >${stateText}</span\n          >\n        </div>\n      </label>\n    `;\n  }\n\n  /**\n   * The name of the custom event fired after this changebox changes its checked state.\n   */\n  static get eventChange() {\n    return `${prefix}-toggle-changed`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSToggle;\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,QAAQ,6BAA6B;AACtD,SAASC,IAAI,QAAQ,KAAK;AAC1B,SAASC,QAAQ,EAAEC,KAAK,QAAQ,mBAAmB;AACnD,SAASC,SAAS,QAAQ,8BAA8B;AACxD,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,SAASC,WAAW,QAAQ,QAAQ;AACpC,OAAOC,MAAM,MAAM,mBAAe;AAClC,OAAOC,YAAY,MAAM,wCAAwC;AACjE,OAAOC,iBAAiB,MAAM,oCAAoC;AAClE,SAASC,aAAa,IAAIC,aAAa,QAAQ,yCAAyC;AAExF,SAASL,WAAW;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,IAUMM,SAAS,GAAAC,SAAA,EADdF,aAAa,CAAE,GAAEP,MAAO,SAAQ,CAAC,aAAAU,WAAA,EAAAC,kBAAA;EAAlC,MACMH,SAAS,SAAAG,kBAAA,CAAwC;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAgJvD;EAAC;IAAAI,CAAA,EAhJKN,SAAS;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GACZnB,KAAK,CAAC,QAAQ,CAAC;MAAAoB,GAAA;MAAAC,KAAA;IAAA;MAAAH,IAAA;MAAAE,GAAA;MAAAC,KAAA;MAGhB;AACF;AACA;MACE,SAAAC,cAAA,EAA0B;QACxB,MAAM;UAAEC,OAAO;UAAEC;QAAc,CAAC,GAAG,IAAI,CAACC,aAAa;QACrD,IAAI,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACC,QAAQ,EAAE;UAClC;QACF;QACA,IAAI,CAACJ,OAAO,GAAG,CAACA,OAAO;QACvB,IAAI,CAACC,aAAa,GAAGA,aAAa;QAClC,MAAM;UAAEI;QAAY,CAAC,GAAG,IAAI,CAACd,WAAiC;QAC9D,IAAI,CAACe,aAAa,CAChB,IAAIC,WAAW,CAACF,WAAW,EAAE;UAC3BG,OAAO,EAAE,IAAI;UACbC,QAAQ,EAAE,IAAI;UACdC,MAAM,EAAE;YACNT;UACF;QACF,CAAC,CACH,CAAC;MACH;;MAEA;AACF;AACA;IAFE;MAAAN,IAAA;MAAAC,UAAA,GAGCb,YAAY,CAAC,SAAS,CAAC;MAAAc,GAAA;MAAAC,MAAA;QAAA,OAEG,MAAOa,KAAoB,IAAK;UACzD,MAAM;YAAEd;UAAI,CAAC,GAAGc,KAAK;UAErB,IAAId,GAAG,KAAK,GAAG,EAAE;YACf,IAAI,CAACE,aAAa,CAAC,CAAC;UACtB;QACF,CAAC;MAAA;IAAA;MAAAJ,IAAA;MAAAE,GAAA;MAAAC,KAAA,EAED,SAAAc,iBAAA,EAA6B;QAC3B,IAAI,IAAI,CAACC,IAAI,KAAKhC,WAAW,CAACiC,KAAK,EAAE;UACnC,OAAOC,SAAS;QAClB;QACA,OAAOxC,IAAI,CAAAyC,EAAA,KAAAA,EAAA,GAAAC,CAAC;AAChB;AACA,iBAAe,CAAS;AACxB;AACA;AACA;AACA;AACA;AACA,KAAI,GANatC,MAAM;MAOrB;;MAEA;AACF;AACA;IAFE;MAAAgB,IAAA;MAAAC,UAAA,GAGCpB,QAAQ,CAAC;QAAE0C,SAAS,EAAE;MAAU,CAAC,CAAC;MAAArB,GAAA;MAAAC,MAAA;QAAA,OAC1B,EAAE;MAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAKVpB,QAAQ,CAAC;QAAE2C,OAAO,EAAE,IAAI;QAAEC,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAxB,GAAA;MAAAC,MAAA;QAAA,OAC/B,KAAK;MAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAKhBpB,QAAQ,CAAC;QAAE2C,OAAO,EAAE,IAAI;QAAED,SAAS,EAAE,WAAW;QAAEE,IAAI,EAAEC;MAAQ,CAAC,CAAC;MAAAxB,GAAA;MAAAC,MAAA;QAAA,OACxD,KAAK;MAAA;IAAA;MAAAH,IAAA;MAAAC,UAAA,GAKfpB,QAAQ,CAAC;QAAE2C,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAtB,GAAA;MAAAC,MAAA;QAAA,OACrBjB,WAAW,CAACyC,OAAO;MAAA;IAAA;MAAA3B,IAAA;MAAAC,UAAA,GAKzBpB,QAAQ,CAAC;QAAE0C,SAAS,EAAE;MAAU,CAAC,CAAC;MAAArB,GAAA;MAAAC,MAAA;QAAA,OAC1B,EAAE;MAAA;IAAA;MAAAH,IAAA;MAAAE,GAAA;MAAAC,KAAA;MAtBX;AACF;AACA;MAIE;AACF;AACA;MAIE;AACF;AACA;MAIE;AACF;AACA;MAIE,SAAAyB,OAAA,EAAS;QACP,MAAM;UACJvB,OAAO;UACPG,QAAQ;UACRqB,SAAS;UACTC,SAAS;UACTC,EAAE;UACFC,IAAI;UACJd,IAAI;UACJe,MAAM;UACNC,MAAM;UACN/B,KAAK;UACLC,aAAa,EAAE+B;QACjB,CAAC,GAAG,IAAI;QACR,MAAMC,YAAY,GAAGzD,QAAQ,CAAC;UAC5B,CAAE,GAAEK,MAAO,sBAAqB,GAAG,IAAI;UACvC,CAAE,GAAEA,MAAO,yBAAwBkC,IAAK,EAAC,GAAGA;QAC9C,CAAC,CAAC;QACF,MAAMmB,aAAa,GAAG1D,QAAQ,CAAC;UAC7B,CAAE,GAAEK,MAAO,kBAAiB,GAAG,IAAI;UACnC,CAAE,GAAEA,MAAO,2BAA0B,GAAGqB;QAC1C,CAAC,CAAC;QACF,MAAMiC,SAAS,GAAGjC,OAAO,GAAG4B,MAAM,GAAGC,MAAM;QAC3C,OAAOtD,IAAI,CAAA2D,GAAA,KAAAA,GAAA,GAAAjB,CAAC;AAChB;AACA,iBAAe,CAAS;AACxB;AACA;AACA,uBAAqB,CAAU;AAC/B,qBAAmB,CAAY;AAC/B,oBAAkB,CAAU;AAC5B,gBAAc,CAAkB;AAChC,iBAAe,CAAmB;AAClC,oBAAkB,CAAW;AAC7B,cAAY,CAAK;AACjB,oBAAkB,CAAK,YAAS,CAAS;AACzC,uBAAqB,CAAS,yBAAsB,CAAY;AAChE,sBAAoB,CAAe;AACnC,wBAAsB,CAAgB,YAAS,CAAe;AAC9D,cAAY,CAA0B;AACtC;AACA;AACA,uBAAqB,CAAY;AACjC,qBAAmB,CAAS;AAC5B;AACA,eAAa,CAAY;AACzB;AACA;AACA;AACA,KAAI,GAxBatC,MAAM,EAGAqB,OAAO,EACTwB,SAAS,EACVxB,OAAO,EACXtB,SAAS,CAACiD,IAAI,CAAC,EACdjD,SAAS,CAACoB,KAAK,CAAC,EACbK,QAAQ,EACduB,EAAE,EACIA,EAAE,EAAY/C,MAAM,EACjBA,MAAM,EAAyB6C,SAAS,EACzCO,YAAY,EACVC,aAAa,EAAYF,YAAY,EAC/C,IAAI,CAAClB,gBAAgB,CAAC,CAAC,EAGda,SAAS,EACX9C,MAAM,EAEZsD,SAAS;MAKtB;;MAEA;AACF;AACA;IAFE;MAAAtC,IAAA;MAAAwC,MAAA;MAAAtC,GAAA;MAAAC,KAAA,EAGA,SAAAO,YAAA,EAAyB;QACvB,OAAQ,GAAE1B,MAAO,iBAAgB;MACnC;IAAC;MAAAgB,IAAA;MAAAwC,MAAA;MAAAtC,GAAA;MAAAC,MAAA;QAAA,OAEehB,MAAM;MAAA;IAAA;EAAA;AAAA,GA/IAE,iBAAiB,CAACJ,WAAW,CAAC;AAkJtD,eAAeO,SAAS"}