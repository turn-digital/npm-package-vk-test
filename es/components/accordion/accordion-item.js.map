{"version":3,"file":"accordion-item.js","names":["classMap","LitElement","html","property","ChevronRight16","prefix","FocusMixin","ACCORDION_ITEM_BREAKPOINT","styles","carbonElement","customElement","observeResize","observer","elem","observe","release","unobserve","CDSAccordionItem","_decorate","_initialize","_FocusMixin","constructor","args","F","d","kind","key","value","_handleUserInitiatedToggle","open","init","bubbles","cancelable","composed","detail","dispatchEvent","CustomEvent","eventBeforeToggle","selectorAccordionContent","setAttribute","shadowRoot","querySelector","addEventListener","removeAttribute","eventToggle","content","style","maxBlockSize","scrollHeight","_handleClickExpando","ResizeObserver","records","width","length","contentRect","_sizesBreakpoints","sizesBreakpoints","_currentBreakpoint","Object","keys","sort","lhs","rhs","find","size","requestUpdate","decorators","type","Boolean","reflect","attribute","connectedCallback","hasAttribute","_get","_getPrototypeOf","prototype","call","_hObserveResize","_resizeObserver","disconnectedCallback","render","disabled","title","currentBreakpoint","handleClickExpando","_handleKeydownExpando","handleKeydownExpando","_classesBreakpoints","classesBreakpoints","classBreakpoint","contentClasses","_t","_","part","class","static","SMALL","MEDIUM"],"sources":["components/accordion/accordion-item.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport ChevronRight16 from '@carbon/icons/lib/chevron--right/16';\nimport { prefix } from '../../globals/settings';\nimport FocusMixin from '../../globals/mixins/focus';\nimport Handle from '../../globals/internal/handle';\nimport { ACCORDION_ITEM_BREAKPOINT } from './defs';\nimport styles from './accordion.scss';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nexport { ACCORDION_ITEM_BREAKPOINT };\n\n/**\n * Observes resize of the given element with the given resize observer.\n *\n * @param observer The resize observer.\n * @param elem The element to observe the resize.\n */\nconst observeResize = (observer: ResizeObserver, elem: Element) => {\n  if (!elem) {\n    return null;\n  }\n  observer.observe(elem);\n  return {\n    release() {\n      observer.unobserve(elem);\n      return null;\n    },\n  } as Handle;\n};\n\n/**\n * Accordion item.\n *\n * @element cds-accordion-item\n * @fires cds-accordion-item-beingtoggled\n *   The custom event fired before this accordion item is being toggled upon a user gesture.\n *   Cancellation of this event stops the user-initiated action of toggling this accordion item.\n * @fires cds-accordion-item-toggled - The custom event fired after this accordion item is toggled upon a user gesture.\n * @csspart expando The expando button.\n * @csspart expando-icon The expando icon.\n * @csspart title The title.\n * @csspart content The content.\n */\n@customElement(`${prefix}-accordion-item`)\nclass CDSAccordionItem extends FocusMixin(LitElement) {\n  /**\n   * The current breakpoint.\n   */\n  private _currentBreakpoint?: ACCORDION_ITEM_BREAKPOINT;\n\n  /**\n   * The handle for observing resize of the parent element of this element.\n   */\n  private _hObserveResize: Handle | null = null;\n\n  /**\n   * Handles user-initiated toggle request of this accordion item.\n   *\n   * @param open The new open state.\n   */\n  private _handleUserInitiatedToggle(open = !this.open) {\n    const init = {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail: {\n        open,\n      },\n    };\n    if (\n      this.dispatchEvent(\n        new CustomEvent(\n          (this.constructor as typeof CDSAccordionItem).eventBeforeToggle,\n          init\n        )\n      )\n    ) {\n      const { selectorAccordionContent } = this\n        .constructor as typeof CDSAccordionItem;\n\n      !this.open\n        ? this.setAttribute('expanding', '')\n        : this.setAttribute('collapsing', '');\n      this.shadowRoot!.querySelector(\n        selectorAccordionContent\n      )!.addEventListener('animationend', () => {\n        this.removeAttribute('expanding');\n        this.removeAttribute('collapsing');\n      });\n\n      this.open = open;\n      this.dispatchEvent(\n        new CustomEvent(\n          (this.constructor as typeof CDSAccordionItem).eventToggle,\n          init\n        )\n      );\n    }\n\n    const content = this.shadowRoot!.querySelector(\n      `.${prefix}--accordion__wrapper`\n    ) as HTMLElement;\n\n    if (this.open) {\n      // accordion opens\n      content!.style.maxBlockSize = content!.scrollHeight + 15 + 'px';\n    } else {\n      // accordion closes\n      content!.style.maxBlockSize = '';\n    }\n  }\n\n  /**\n   * Handler for the `click` event on the expando button.\n   */\n  private _handleClickExpando() {\n    this._handleUserInitiatedToggle();\n  }\n\n  /**\n   * Handler for the `keydown` event on the expando button.\n   */\n  private _handleKeydownExpando = ({ key }: KeyboardEvent) => {\n    if (this.open && (key === 'Esc' || key === 'Escape')) {\n      this._handleUserInitiatedToggle(false);\n    }\n  };\n\n  /**\n   * The `ResizeObserver` instance for observing element resizes for re-positioning floating menu position.\n   */\n  // TODO: Wait for `.d.ts` update to support `ResizeObserver`\n  // @ts-ignore\n  private _resizeObserver = new ResizeObserver(\n    (records: ResizeObserverEntry[]) => {\n      const { width } = records[records.length - 1].contentRect;\n      const { _sizesBreakpoints: sizesBreakpoints } = this\n        .constructor as typeof CDSAccordionItem;\n      this._currentBreakpoint = Object.keys(sizesBreakpoints)\n        .sort((lhs, rhs) => sizesBreakpoints[rhs] - sizesBreakpoints[lhs])\n        .find(\n          (size) => width >= sizesBreakpoints[size]\n        ) as ACCORDION_ITEM_BREAKPOINT;\n      this.requestUpdate();\n    }\n  );\n\n  /**\n   * `true` if the accordion item should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * `true` if the accordion item should be open.\n   */\n  @property({ type: Boolean, reflect: true })\n  open = false;\n\n  /**\n   * The title text.\n   */\n  @property({ attribute: 'title' })\n  title = '';\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'listitem');\n    }\n    super.connectedCallback();\n    if (this._hObserveResize) {\n      this._hObserveResize = this._hObserveResize.release();\n    }\n    this._hObserveResize = observeResize(this._resizeObserver, this);\n  }\n\n  disconnectedCallback() {\n    if (this._hObserveResize) {\n      this._hObserveResize = this._hObserveResize.release();\n    }\n  }\n\n  render() {\n    const {\n      disabled,\n      title,\n      open,\n      _currentBreakpoint: currentBreakpoint,\n      _handleClickExpando: handleClickExpando,\n      _handleKeydownExpando: handleKeydownExpando,\n    } = this;\n    const { _classesBreakpoints: classesBreakpoints } = this\n      .constructor as typeof CDSAccordionItem;\n    const { [currentBreakpoint!]: classBreakpoint } = classesBreakpoints;\n    const contentClasses = classMap({\n      [classBreakpoint]: classBreakpoint,\n      [`${prefix}--accordion__content`]: true,\n    });\n    return html`\n      <button\n        ?disabled=\"${disabled}\"\n        type=\"button\"\n        part=\"expando\"\n        class=\"${prefix}--accordion__heading\"\n        aria-controls=\"content\"\n        aria-expanded=\"${open}\"\n        @click=\"${handleClickExpando}\"\n        @keydown=\"${handleKeydownExpando}\">\n        ${ChevronRight16({\n          part: 'expando-icon',\n          class: `${prefix}--accordion__arrow`,\n        })}\n        <div part=\"title\" class=\"${prefix}--accordion__title\">\n          <slot name=\"title\">${title}</slot>\n        </div>\n      </button>\n      <div class=\"${prefix}--accordion__wrapper\">\n        <div id=\"content\" part=\"content\" class=\"${contentClasses}\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * The CSS classes for breakpoints.\n   *\n   * @private\n   */\n  static get _classesBreakpoints() {\n    return {\n      [ACCORDION_ITEM_BREAKPOINT.SMALL]: `${prefix}-ce--accordion__content--${ACCORDION_ITEM_BREAKPOINT.SMALL}`,\n      [ACCORDION_ITEM_BREAKPOINT.MEDIUM]: `${prefix}-ce--accordion__content--${ACCORDION_ITEM_BREAKPOINT.MEDIUM}`,\n    };\n  }\n\n  /**\n   * The breakpoints.\n   *\n   * @private\n   */\n  static get _sizesBreakpoints() {\n    return {\n      [ACCORDION_ITEM_BREAKPOINT.SMALL]: 480,\n      [ACCORDION_ITEM_BREAKPOINT.MEDIUM]: 640,\n    };\n  }\n\n  /**\n   * The name of the custom event fired before this accordion item is being toggled upon a user gesture.\n   * Cancellation of this event stops the user-initiated action of toggling this accordion item.\n   */\n  static get eventBeforeToggle() {\n    return `${prefix}-accordion-item-beingtoggled`;\n  }\n\n  /**\n   * The name of the custom event fired after this accordion item is toggled upon a user gesture.\n   */\n  static get eventToggle() {\n    return `${prefix}-accordion-item-toggled`;\n  }\n\n  static get selectorAccordionContent() {\n    return `.${prefix}--accordion__content`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSAccordionItem;\n"],"mappings":"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"}