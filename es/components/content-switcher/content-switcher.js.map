{"version":3,"file":"content-switcher.js","names":["LitElement","html","property","prefix","forEach","indexOf","NAVIGATION_DIRECTION","CONTENT_SWITCHER_SIZE","styles","carbonElement","customElement","capIndex","index","length","CDSContentSwitcher","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","key","value","_handleHover","target","type","selectorItem","items","querySelectorAll","closest","nextIndex","elem","i","hideDivider","selectorItemSelected","selectedItem","querySelector","nextItem","_getNextItem","currentItem","direction","selectorItemEnabled","currentIndex","_handleClick","_handleUserInitiatedSelectItem","_handleKeydown","_navigate","item","disabled","init","bubbles","composed","detail","beforeSelectEvent","CustomEvent","eventBeforeSelect","_objectSpread","cancelable","dispatchEvent","_selectionDidChange","afterSelectEvent","eventSelect","requestUpdate","itemToSelect","selected","Promise","resolve","then","focus","decorators","reflect","REGULAR","Boolean","attribute","shouldUpdate","changedProperties","has","selectorIconItem","iconOnly","_handleSlotchange","static","render","handleHover","handleKeydown","handleSlotchange","_t","_","default"],"sources":["components/content-switcher/content-switcher.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport { forEach, indexOf } from '../../globals/internal/collection-helpers';\nimport { NAVIGATION_DIRECTION, CONTENT_SWITCHER_SIZE } from './defs';\nimport CDSContentSwitcherItem from './content-switcher-item';\nimport styles from './content-switcher.scss';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nexport { NAVIGATION_DIRECTION, CONTENT_SWITCHER_SIZE };\n\n/**\n * @param index The index\n * @param length The length of the array.\n * @returns The new index, adjusting overflow/underflow.\n */\nconst capIndex = (index: number, length: number) => {\n  if (index < 0) {\n    return length - 1;\n  }\n  if (index >= length) {\n    return 0;\n  }\n  return index;\n};\n\n/**\n * Content switcher.\n *\n * @element cds-content-switcher\n * @fires cds-content-switcher-beingselected\n *   The custom event fired before a content switcher item is selected upon a user gesture.\n *   Cancellation of this event stops changing the user-initiated selection.\n * @fires cds-content-switcher-selected - The custom event fired after a a content switcher item is selected upon a user gesture.\n */\n@customElement(`${prefix}-content-switcher`)\nexport default class CDSContentSwitcher extends LitElement {\n  /**\n   * Handles `mouseover`/`mouseout` events on `<slot>`.\n   *\n   * @param event The event.\n   * @param event.target The event target.\n   * @param event.type The event type.\n   */\n  private _handleHover({ target, type }: MouseEvent) {\n    const { selectorItem } = this.constructor as typeof CDSContentSwitcher;\n    const items = this.querySelectorAll(selectorItem);\n    const index =\n      type !== 'mouseover'\n        ? -1\n        : indexOf(items, (target as Element).closest(selectorItem)!);\n    const nextIndex = index < 0 ? index : index + 1;\n    forEach(this.querySelectorAll(selectorItem), (elem, i) => {\n      // Specifies child `<cds-content-switcher-item>` to hide its divider instead of using CSS,\n      // until `:host-context()` gets supported in all major browsers\n      (elem as CDSContentSwitcherItem).hideDivider = i === nextIndex;\n    });\n\n    const { selectorItemSelected } = this\n      .constructor as typeof CDSContentSwitcher;\n    const selectedItem = this.querySelector(selectorItemSelected);\n    const nextItem = this._getNextItem(\n      selectedItem as CDSContentSwitcherItem,\n      1\n    );\n    (nextItem as CDSContentSwitcherItem).hideDivider = true;\n  }\n\n  /**\n   * @param currentItem The currently selected item.\n   * @param direction The navigation direction.\n   * @returns The item to be selected.\n   */\n  protected _getNextItem(\n    currentItem: CDSContentSwitcherItem,\n    direction: number\n  ) {\n    const items = this.querySelectorAll(\n      (this.constructor as typeof CDSContentSwitcher).selectorItemEnabled\n    );\n    const currentIndex = indexOf(items, currentItem);\n    const nextIndex = capIndex(currentIndex + direction, items.length);\n    return nextIndex === currentIndex ? null : items[nextIndex];\n  }\n\n  /**\n   * Handles `click` event on the top-level element in the shadow DOM.\n   *\n   * @param event The event.\n   * @param event.target The event target.\n   */\n  protected _handleClick({ target }: MouseEvent) {\n    this._handleUserInitiatedSelectItem(target as CDSContentSwitcherItem);\n  }\n\n  /**\n   * Handles `keydown` event on the top-level element in the shadow DOM.\n   *\n   * @param event The event.\n   * @param event.key The event key.\n   */\n  protected _handleKeydown({ key }: KeyboardEvent) {\n    if (key in NAVIGATION_DIRECTION) {\n      this._navigate(NAVIGATION_DIRECTION[key]);\n    }\n  }\n\n  /**\n   * Handles user-initiated selection of a content switcher item.\n   *\n   * @param [item] The content switcher item user wants to select.\n   */\n  protected _handleUserInitiatedSelectItem(item: CDSContentSwitcherItem) {\n    if (!item.disabled && item.value !== this.value) {\n      const init = {\n        bubbles: true,\n        composed: true,\n        detail: {\n          item,\n        },\n      };\n      const constructor = this.constructor as typeof CDSContentSwitcher;\n      const beforeSelectEvent = new CustomEvent(constructor.eventBeforeSelect, {\n        ...init,\n        cancelable: true,\n      });\n      if (this.dispatchEvent(beforeSelectEvent)) {\n        this._selectionDidChange(item);\n        const afterSelectEvent = new CustomEvent(constructor.eventSelect, init);\n        this.dispatchEvent(afterSelectEvent);\n      }\n    }\n  }\n\n  /**\n   * Navigates through content switcher items.\n   *\n   * @param direction `-1` to navigate backward, `1` to navigate forward.\n   */\n  protected _navigate(direction: number) {\n    const { selectorItemSelected } = this\n      .constructor as typeof CDSContentSwitcher;\n    const nextItem = this._getNextItem(\n      this.querySelector(selectorItemSelected) as CDSContentSwitcherItem,\n      direction\n    );\n    if (nextItem) {\n      this._handleUserInitiatedSelectItem(nextItem as CDSContentSwitcherItem);\n      this.requestUpdate();\n    }\n  }\n\n  /**\n   * A callback that runs after change in content switcher selection upon user interaction is confirmed.\n   *\n   * @param itemToSelect A content switcher item.\n   */\n  protected _selectionDidChange(itemToSelect: CDSContentSwitcherItem) {\n    this.value = itemToSelect.value;\n    forEach(\n      this.querySelectorAll(\n        (this.constructor as typeof CDSContentSwitcher).selectorItemSelected\n      ),\n      (item) => {\n        (item as CDSContentSwitcherItem).selected = false;\n      }\n    );\n    itemToSelect.selected = true;\n    // Waits for rendering with the new state that updates `tabindex`\n    Promise.resolve().then(() => {\n      itemToSelect.focus();\n\n      const { selectorItem } = this.constructor as typeof CDSContentSwitcher;\n      const items = this.querySelectorAll(selectorItem);\n      const index = indexOf(\n        items,\n        (itemToSelect as Element).closest(selectorItem)!\n      );\n      const nextIndex = index < 0 ? index : index + 1;\n      forEach(this.querySelectorAll(selectorItem), (elem, i) => {\n        // Specifies child `<cds-content-switcher-item>` to hide its divider instead of using CSS,\n        // until `:host-context()` gets supported in all major browsers\n        (elem as CDSContentSwitcherItem).hideDivider = i === nextIndex;\n      });\n    });\n  }\n\n  /**\n   * The value of the selected item.\n   */\n  @property({ reflect: true })\n  value = '';\n\n  /**\n   * Content switcher size.\n   */\n  @property({ reflect: true })\n  size = CONTENT_SWITCHER_SIZE.REGULAR;\n\n  /**\n   * Icon only.\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'icon' })\n  iconOnly = false;\n\n  shouldUpdate(changedProperties) {\n    if (changedProperties.has('value')) {\n      const { selectorItem } = this.constructor as typeof CDSContentSwitcher;\n      forEach(this.querySelectorAll(selectorItem), (elem) => {\n        (elem as CDSContentSwitcherItem).selected =\n          (elem as CDSContentSwitcherItem).value === this.value;\n      });\n    }\n    const { selectorIconItem } = this.constructor as typeof CDSContentSwitcher;\n    if (this.querySelector(selectorIconItem)) {\n      this.iconOnly = true;\n    }\n    return true;\n  }\n\n  _handleSlotchange() {\n    const { selectorItemSelected } = this\n      .constructor as typeof CDSContentSwitcher;\n    const selectedItem = this.querySelector(selectorItemSelected);\n    const nextItem = this._getNextItem(\n      selectedItem as CDSContentSwitcherItem,\n      1\n    );\n\n    // Specifies child `<cds-content-switcher-item>` to hide its divider instead of using CSS,\n    // until `:host-context()` gets supported in all major browsers\n    (nextItem as CDSContentSwitcherItem).hideDivider = true;\n  }\n\n  /**\n   * A selector that will return content switcher items.\n   */\n  static get selectorItem() {\n    return `${prefix}-content-switcher-item`;\n  }\n\n  /**\n   * A selector that will return content switcher icon items.\n   */\n  static get selectorIconItem() {\n    return `${prefix}-content-switcher-item[icon]`;\n  }\n\n  /**\n   * A selector that will return enabled content switcher items.\n   */\n  static get selectorItemEnabled() {\n    return `${prefix}-content-switcher-item:not([disabled])`;\n  }\n\n  /**\n   * A selector that will return selected items.\n   */\n  static get selectorItemSelected() {\n    return `${prefix}-content-switcher-item[selected]`;\n  }\n\n  /**\n   * The name of the custom event fired before a content switcher item is selected upon a user gesture.\n   * Cancellation of this event stops changing the user-initiated selection.\n   */\n  static get eventBeforeSelect() {\n    return `${prefix}-content-switcher-beingselected`;\n  }\n\n  /**\n   * The name of the custom event fired after a a content switcher item is selected upon a user gesture.\n   */\n  static get eventSelect() {\n    return `${prefix}-content-switcher-selected`;\n  }\n\n  render() {\n    const {\n      _handleHover: handleHover,\n      _handleKeydown: handleKeydown,\n      _handleSlotchange: handleSlotchange,\n    } = this;\n    return html`\n      <slot\n        @click=\"${this._handleClick}\"\n        @keydown=\"${handleKeydown}\"\n        @mouseover=\"${handleHover}\"\n        @mouseout=\"${handleHover}\"\n        @slotchange=${handleSlotchange}></slot>\n    `;\n  }\n\n  static styles = styles;\n}\n"],"mappings":"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"}