{"version":3,"file":"validity.js","names":["VALIDATION_STATUS","ValidityMixin","Base","ValidityMixinImpl","_getValidityMessage","state","NO_ERROR","ERROR_REQUIRED","requiredValidityMessage","_testValidity","required","value","checkValidity","status","dispatchEvent","CustomEvent","bubbles","cancelable","composed","invalid","validityMessage","setCustomValidity","Boolean"],"sources":["globals/mixins/validity.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Form validation status.\n */\nexport enum VALIDATION_STATUS {\n  /**\n   * One indicating no validation error.\n   */\n  NO_ERROR = '',\n\n  /**\n   * One indicating missing required value.\n   */\n  ERROR_REQUIRED = 'required',\n}\n\n/**\n * @param Base The base class.\n * @returns A mix-in implementing `.setCustomValidity()` method.\n */\nconst ValidityMixin = <T extends Constructor<HTMLElement>>(Base: T) => {\n  abstract class ValidityMixinImpl extends Base {\n    // Not using TypeScript `protected` due to: microsoft/TypeScript#17744\n    // Using `string` instead of `VALIDATION_STATUS` until we can require TypeScript 3.8\n    /**\n     * @param state The form validation status.\n     * @returns The form validation error messages associated with the given status.\n     * @protected\n     */\n    _getValidityMessage(state: string) {\n      return {\n        [VALIDATION_STATUS.NO_ERROR]: '',\n        [VALIDATION_STATUS.ERROR_REQUIRED]: this.requiredValidityMessage,\n      }[state];\n    }\n\n    // Not using TypeScript `protected` due to: microsoft/TypeScript#17744\n    // Using `string` instead of `VALIDATION_STATUS` until we can require TypeScript 3.8\n    /**\n     * Checks if the value meets the constraints.\n     *\n     * @returns `VALIDATION_STATUS.NO_ERROR` if the value meets the constraints. Some other values otherwise.\n     * @protected\n     */\n    _testValidity(): string {\n      const { required, value } = this;\n      return required && !value\n        ? VALIDATION_STATUS.ERROR_REQUIRED\n        : VALIDATION_STATUS.NO_ERROR;\n    }\n\n    /**\n     * `true` to show the UI of the invalid state.\n     */\n    abstract invalid: boolean;\n\n    /**\n     * `true` if the value is required.\n     */\n    abstract required: boolean;\n\n    /**\n     * The special validity message for `required`.\n     */\n    abstract requiredValidityMessage: string;\n\n    /**\n     * The validity message.\n     */\n    abstract validityMessage: string;\n\n    /**\n     * The value.\n     */\n    abstract value: string;\n\n    /**\n     * Checks if the value meets the constraints.\n     * Fires cancelable `invalid` event if it doesn't.\n     *\n     * @returns `true` if the value meets the constraints. `false` otherwise.\n     */\n    checkValidity() {\n      const status = this._testValidity();\n      if (status !== VALIDATION_STATUS.NO_ERROR) {\n        if (\n          this.dispatchEvent(\n            new CustomEvent('invalid', {\n              bubbles: false,\n              cancelable: true,\n              composed: false,\n            })\n          )\n        ) {\n          this.invalid = true;\n          this.validityMessage = this._getValidityMessage(status) as string;\n        }\n        return false;\n      }\n      this.invalid = false;\n      this.validityMessage = '';\n      return true;\n    }\n\n    /**\n     * Sets the given custom validity message.\n     *\n     * @param validityMessage The custom validity message\n     */\n    setCustomValidity(validityMessage: string) {\n      this.invalid = Boolean(validityMessage);\n      this.validityMessage = validityMessage;\n    }\n  }\n  return ValidityMixinImpl;\n};\n\nexport default ValidityMixin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAYA,iBAAiB;;AAY7B;AACA;AACA;AACA;AAHA,WAZYA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;AAAA,GAAjBA,iBAAiB,KAAjBA,iBAAiB;AAgB7B,MAAMC,aAAa,GAAwCC,IAAO,IAAK;EACrE,MAAeC,iBAAiB,SAASD,IAAI,CAAC;IAC5C;IACA;IACA;AACJ;AACA;AACA;AACA;IACIE,mBAAmBA,CAACC,KAAa,EAAE;MACjC,OAAO;QACL,CAACL,iBAAiB,CAACM,QAAQ,GAAG,EAAE;QAChC,CAACN,iBAAiB,CAACO,cAAc,GAAG,IAAI,CAACC;MAC3C,CAAC,CAACH,KAAK,CAAC;IACV;;IAEA;IACA;IACA;AACJ;AACA;AACA;AACA;AACA;IACII,aAAaA,CAAA,EAAW;MACtB,MAAM;QAAEC,QAAQ;QAAEC;MAAM,CAAC,GAAG,IAAI;MAChC,OAAOD,QAAQ,IAAI,CAACC,KAAK,GACrBX,iBAAiB,CAACO,cAAc,GAChCP,iBAAiB,CAACM,QAAQ;IAChC;;IAEA;AACJ;AACA;;IAGI;AACJ;AACA;;IAGI;AACJ;AACA;;IAGI;AACJ;AACA;;IAGI;AACJ;AACA;;IAGI;AACJ;AACA;AACA;AACA;AACA;IACIM,aAAaA,CAAA,EAAG;MACd,MAAMC,MAAM,GAAG,IAAI,CAACJ,aAAa,CAAC,CAAC;MACnC,IAAII,MAAM,KAAKb,iBAAiB,CAACM,QAAQ,EAAE;QACzC,IACE,IAAI,CAACQ,aAAa,CAChB,IAAIC,WAAW,CAAC,SAAS,EAAE;UACzBC,OAAO,EAAE,KAAK;UACdC,UAAU,EAAE,IAAI;UAChBC,QAAQ,EAAE;QACZ,CAAC,CACH,CAAC,EACD;UACA,IAAI,CAACC,OAAO,GAAG,IAAI;UACnB,IAAI,CAACC,eAAe,GAAG,IAAI,CAAChB,mBAAmB,CAACS,MAAM,CAAW;QACnE;QACA,OAAO,KAAK;MACd;MACA,IAAI,CAACM,OAAO,GAAG,KAAK;MACpB,IAAI,CAACC,eAAe,GAAG,EAAE;MACzB,OAAO,IAAI;IACb;;IAEA;AACJ;AACA;AACA;AACA;IACIC,iBAAiBA,CAACD,eAAuB,EAAE;MACzC,IAAI,CAACD,OAAO,GAAGG,OAAO,CAACF,eAAe,CAAC;MACvC,IAAI,CAACA,eAAe,GAAGA,eAAe;IACxC;EACF;EACA,OAAOjB,iBAAiB;AAC1B,CAAC;AAED,eAAeF,aAAa"}