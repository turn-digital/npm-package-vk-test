{"version":3,"file":"carbon-element.js","names":["legacyCustomElement","tagName","clazz","customElements","define","error","console","warn","standardCustomElement","descriptor","kind","elements","finisher","carbonElement","classOrDescriptor"],"sources":["globals/decorators/carbon-element.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport {\n  Constructor,\n  ClassDescriptor,\n} from '@lit/reactive-element/decorators/base.js';\n\n/**\n * Allow for custom element classes with private constructors\n */\ntype CustomElementClass = Omit<typeof HTMLElement, 'new'>;\n\nconst legacyCustomElement = (tagName: string, clazz: CustomElementClass) => {\n  try {\n    customElements.define(tagName, clazz as CustomElementConstructor);\n  } catch (error) {\n    console.warn(`Attempting to re-define ${tagName}`);\n  }\n  // Cast as any because TS doesn't recognize the return type as being a\n  // subtype of the decorated class when clazz is typed as\n  // `Constructor<HTMLElement>` for some reason.\n  // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n  // applied to elements however.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return clazz as any;\n};\n\nconst standardCustomElement = (\n  tagName: string,\n  descriptor: ClassDescriptor\n) => {\n  const { kind, elements } = descriptor;\n  return {\n    kind,\n    elements,\n    // This callback is called once the class is otherwise fully defined\n    finisher(clazz: Constructor<HTMLElement>) {\n      try {\n        customElements.define(tagName, clazz);\n      } catch (error) {\n        console.warn(`Attempting to re-define ${tagName}`);\n      }\n    },\n  };\n};\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```js\n * @customElement('my-element')\n * class MyElement extends LitElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n *\n * @category Decorator\n * @param tagName The tag name of the custom element to define.\n */\nexport const carbonElement =\n  (tagName: string) =>\n  (classOrDescriptor: CustomElementClass | ClassDescriptor) =>\n    typeof classOrDescriptor === 'function'\n      ? legacyCustomElement(tagName, classOrDescriptor)\n      : standardCustomElement(tagName, classOrDescriptor as ClassDescriptor);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;;AAGA,MAAMA,mBAAmB,GAAGA,CAACC,OAAe,EAAEC,KAAyB,KAAK;EAC1E,IAAI;IACFC,cAAc,CAACC,MAAM,CAACH,OAAO,EAAEC,KAAiC,CAAC;EACnE,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACC,IAAI,CAAE,2BAA0BN,OAAQ,EAAC,CAAC;EACpD;EACA;EACA;EACA;EACA;EACA;EACA;EACA,OAAOC,KAAK;AACd,CAAC;AAED,MAAMM,qBAAqB,GAAGA,CAC5BP,OAAe,EACfQ,UAA2B,KACxB;EACH,MAAM;IAAEC,IAAI;IAAEC;EAAS,CAAC,GAAGF,UAAU;EACrC,OAAO;IACLC,IAAI;IACJC,QAAQ;IACR;IACAC,QAAQA,CAACV,KAA+B,EAAE;MACxC,IAAI;QACFC,cAAc,CAACC,MAAM,CAACH,OAAO,EAAEC,KAAK,CAAC;MACvC,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACC,IAAI,CAAE,2BAA0BN,OAAQ,EAAC,CAAC;MACpD;IACF;EACF,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMY,aAAa,GACvBZ,OAAe,IACfa,iBAAuD,IACtD,OAAOA,iBAAiB,KAAK,UAAU,GACnCd,mBAAmB,CAACC,OAAO,EAAEa,iBAAiB,CAAC,GAC/CN,qBAAqB,CAACP,OAAO,EAAEa,iBAAoC,CAAC"}