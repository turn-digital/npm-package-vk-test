{"version":3,"file":"radio-group-manager.js","names":["NAVIGATION_DIRECTION","RadioGroupManager","constructor","document","_defineProperty","_instances","set","shouldBeFocusable","radio","checked","name","group","_groups","hasSelectedItemInGroup","Array","from","some","item","isFirstInGroup","size","getSortedGroup","sort","lhs","rhs","comparisonResult","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","DOCUMENT_POSITION_CONTAINED_BY","DOCUMENT_POSITION_PRECEDING","DOCUMENT_POSITION_CONTAINS","add","groups","Set","delete","select","readOnly","tabIndex","focus","forEach","navigate","direction","sortedGroup","newIndex","indexOf","length","get","found","WeakMap"],"sources":["globals/internal/radio-group-manager.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * The navigation direction.\n */\nexport enum NAVIGATION_DIRECTION {\n  /**\n   * Navigating backward.\n   */\n  BACKWARD = -1,\n\n  /**\n   * Navigating forward.\n   */\n  FORWARD = 1,\n}\n\nexport interface ManagedRadioButtonDelegate {\n  /**\n   * `true` if this radio button is selected.\n   */\n  checked: boolean;\n\n  /**\n   * The tab index.\n   */\n  tabIndex: number;\n\n  /**\n   * The name of the radio group.\n   */\n  name: string;\n\n  /**\n   * @param other A node to compare this radio button's DOM position in document with.\n   * @returns\n   *   An integer value, the same format as `Node.compareDocumentPosition` does,\n   *   whose bits represent the calling this radio button's relationship to the given node within the document.\n   */\n  compareDocumentPosition(other: ManagedRadioButtonDelegate): number;\n\n  /**\n   * Focuses on the radio button.\n   */\n  focus(): void;\n}\n\ntype ManagedRadioButton = HTMLInputElement | ManagedRadioButtonDelegate;\n\n/**\n * An object that manages radio groups in a document.\n * There must be only one instance for one document.\n */\nclass RadioGroupManager {\n  /**\n   * Radio groups, keyed by their names.\n   */\n  private _groups: { [name: string]: Set<ManagedRadioButton> } = {};\n\n  private constructor(document: Document) {\n    (this.constructor as typeof RadioGroupManager)._instances.set(\n      document,\n      this\n    );\n  }\n\n  /**\n   * @param radio A radio button.\n   * @returns\n   *   `true` if the given radio button should be focusable, which is either:\n   *   - The radio button is selected\n   *   - No radio button is selected and the radio button is first one in the radio group\n   */\n  shouldBeFocusable(radio: ManagedRadioButton) {\n    if (radio.checked) {\n      return true;\n    }\n    const { name } = radio;\n    const group = this._groups[name];\n    const hasSelectedItemInGroup =\n      group && Array.from(group).some((item) => item.checked);\n    if (hasSelectedItemInGroup) {\n      return false;\n    }\n    const isFirstInGroup =\n      !group || group.size === 1 || this.getSortedGroup(radio)[0] === radio;\n    return isFirstInGroup;\n  }\n\n  /**\n   * @param radio A radio button.\n   * @returns The sorted radio group the given radio button is in.\n   */\n  getSortedGroup(radio: ManagedRadioButton) {\n    const group = this._groups[radio.name];\n    return (\n      group &&\n      Array.from(group).sort((lhs, rhs) => {\n        const comparisonResult = (\n          lhs as ManagedRadioButtonDelegate\n        ).compareDocumentPosition(rhs as ManagedRadioButtonDelegate);\n        // eslint-disable-next-line no-bitwise\n        if (\n          comparisonResult & Node.DOCUMENT_POSITION_FOLLOWING ||\n          comparisonResult & Node.DOCUMENT_POSITION_CONTAINED_BY\n        ) {\n          return -1;\n        }\n        // eslint-disable-next-line no-bitwise\n        if (\n          comparisonResult & Node.DOCUMENT_POSITION_PRECEDING ||\n          comparisonResult & Node.DOCUMENT_POSITION_CONTAINS\n        ) {\n          return 1;\n        }\n        return 0;\n      })\n    );\n  }\n\n  /**\n   * Manages a radio button.\n   *\n   * @param radio The radio button to manage.\n   * @returns This object.\n   */\n  add(radio: ManagedRadioButton) {\n    const { name } = radio;\n    if (name) {\n      const groups = this._groups;\n      if (!groups[name]) {\n        groups[name] = new Set<ManagedRadioButton>();\n      }\n      groups[name].add(radio);\n    }\n    return this;\n  }\n\n  /**\n   * Unmanages a radio button.\n   *\n   * @param radio The radio button to unmanage.\n   * @param name The old name of the radio button to unmanage.\n   * @returns `true` if `element` was actually managed.\n   */\n  delete(radio: ManagedRadioButton, name: string = radio.name) {\n    const group = this._groups[name];\n    return !group ? false : group.delete(radio);\n  }\n\n  /**\n   * Selects or focuses on a radio button.\n   *\n   * @param radio The radio button to select.\n   * @param readOnly optional if radio button has readOnly.\n   */\n  select(radio: ManagedRadioButton, readOnly?: boolean) {\n    const group = this._groups[radio.name];\n    if (group) {\n      // Updates the state of the one being selected up-front to avoid the state of no radio button is selected\n      radio.checked = !readOnly || true;\n      radio.tabIndex = 0;\n      radio.focus();\n      group.forEach((item) => {\n        if (radio !== item) {\n          item.checked = readOnly || false;\n          item.tabIndex = -1;\n        }\n      });\n    }\n  }\n\n  /**\n   * @param radio The currently selected radio button.\n   * @param direction The direction to navigate to.\n   * @returns The radio button that should be selected next.\n   */\n  navigate(radio: ManagedRadioButton, direction: NAVIGATION_DIRECTION) {\n    const sortedGroup = this.getSortedGroup(radio);\n    let newIndex = sortedGroup.indexOf(radio) + direction;\n    if (newIndex < 0) {\n      newIndex = sortedGroup.length - 1;\n    } else if (newIndex >= sortedGroup.length) {\n      newIndex = 0;\n    }\n    return sortedGroup[newIndex];\n  }\n\n  /**\n   * `RadioGroupManager` instances associated with documents.\n   */\n  private static _instances = new WeakMap();\n\n  /**\n   * @param document A document element.\n   * @returns The `RadioGroupManager` instance associated with the given document.\n   */\n  static get(document: Document) {\n    const found = this._instances.get(document);\n    return found || new RadioGroupManager(document);\n  }\n}\n\nexport default RadioGroupManager;\n"],"mappings":"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"}