{"version":3,"file":"createReactCustomElementType.js","names":["_react","require","_on","_interopRequireDefault","_excluded","mergeRefs","refs","el","forEach","ref","Object","current","convertProp","prop","descriptor","event","serialize","undefined","convertProps","props","keys","reduce","acc","propName","descriptorItem","converted","attribute","_objectSpread2","default","attachEventListeners","elem","callback","handles","Set","eventDescriptor","name","options","add","on","release","handle","delete","createReactCustomElementType","displayName","nonAttributeProps","filter","CustomElementType","Component","constructor","args","_defineProperty2","listener","call","currentTarget","_elem","_eventListenersHandle","_handleEvent","updateProps","prevProps","prevValue","value","componentDidMount","componentDidUpdate","render","_this$props","children","innerRef","_objectWithoutProperties2","mergedRef","_handleElemRef","createElement","forwardRef","booleanSerializer","exports","numberSerializer","String","objectSerializer","JSON","stringify","_default"],"sources":["globals/wrappers/createReactCustomElementType.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component, createElement, forwardRef } from 'react';\nimport on from '../mixins/on';\nimport Handle from '../internal/handle';\n\n/**\n * A descriptor for a React event prop of a custom element.\n */\ninterface CustomElementEventDescriptor {\n  /**\n   * The event name.\n   */\n  name: string;\n\n  /**\n   * A boolean to detemine usage of capture mode or the event options.\n   */\n  options?: boolean | EventListenerOptions;\n}\n\n/**\n * A descriptor for a React prop for an attribute of a custom element.\n */\ninterface CustomElementPropDescriptor {\n  /**\n   * The attribute name for the prop.\n   */\n  attribute?: string | false;\n\n  /**\n   * The event name (or descriptor) for the prop.\n   */\n  event?: string | CustomElementEventDescriptor;\n\n  /**\n   * A function that takes a property value and returns the corresponding attribute value.\n   */\n  serialize?: (value: any) => string | void;\n}\n\n/**\n * A descriptor for a set of React props for attributes of a custom element.\n */\ninterface CustomElementPropsDescriptor {\n  [propName: string]: CustomElementPropDescriptor;\n}\n\n/**\n * React props for the component `createCustomElementType()` generates.\n */\ninterface CustomElementTypeProps {\n  /**\n   * Ordinal prop.\n   */\n  [propName: string]: any;\n\n  /**\n   * Child nodes.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  children?: React.ReactNode;\n}\n\n/**\n * @param refs List of React refs to merge.\n * @returns Merged React ref.\n */\nconst mergeRefs =\n  <T>(...refs: React.Ref<T>[]) =>\n  (el) => {\n    refs.forEach((ref) => {\n      // https://github.com/facebook/react/issues/13029#issuecomment-410002316\n      if (typeof ref === 'function') {\n        ref(el);\n      } else if (Object(ref) === ref) {\n        // `React.Ref.current` is read-only for regular use case, but we update it here\n        (ref as { current: T }).current = el;\n      }\n    });\n  };\n\n/**\n * @param prop A prop value.\n * @param descriptor A React prop descriptor.\n * @returns The corresponding attribute value for the given prop value.\n */\nconst convertProp = (prop: any, descriptor: CustomElementPropDescriptor) => {\n  if (!descriptor) {\n    return prop;\n  }\n  const { event, serialize } = descriptor;\n  if (event) {\n    // Events are not set as props, we use DOM `addEventListener()` instead\n    return undefined;\n  }\n  return !serialize ? prop : serialize(prop);\n};\n\n/**\n * @param props A set of React props.\n * @param descriptor A set of React prop desciptor.\n * @returns The set of React props to set to a custom element, corresponding to the given React props.\n */\nconst convertProps = (\n  props: CustomElementTypeProps,\n  descriptor: CustomElementPropsDescriptor\n) =>\n  Object.keys(props).reduce((acc, propName) => {\n    const { [propName]: descriptorItem } = descriptor;\n    const converted = convertProp(props[propName], descriptorItem);\n    const { attribute } = descriptorItem ?? {};\n    return attribute === false\n      ? acc\n      : {\n          ...acc,\n          [attribute || propName]: converted,\n        };\n  }, {});\n\n/**\n * Attaches listeners of custom events, to a custom element.\n *\n * @param elem The custom element.\n * @param descriptor An object, keyed by prop name, of data that may have custom event names.\n * @param callback A callback function that runs as the custom events fire.\n * @returns A handle that allows to release all event listeners attached.\n */\nconst attachEventListeners = (\n  elem: HTMLElement,\n  descriptor: CustomElementPropsDescriptor,\n  callback: (name: string, event: Event) => void\n): Handle => {\n  const handles = new Set<Handle>();\n  Object.keys(descriptor).forEach((propName) => {\n    if (descriptor[propName]) {\n      const { event: eventDescriptor } = descriptor[propName];\n      const name =\n        Object(eventDescriptor) !== eventDescriptor\n          ? (eventDescriptor as string)\n          : (eventDescriptor as CustomElementEventDescriptor).name;\n      const options =\n        Object(eventDescriptor) !== eventDescriptor\n          ? undefined\n          : (eventDescriptor as CustomElementEventDescriptor).options;\n      if (name) {\n        handles.add(\n          on(\n            elem,\n            name,\n            (event) => {\n              callback(propName, event);\n            },\n            options\n          )\n        );\n      }\n    }\n  });\n  return {\n    release() {\n      handles.forEach((handle) => {\n        handle.release();\n        handles.delete(handle);\n      });\n      return null;\n    },\n  };\n};\n\n/**\n * @param displayName The tag name of the custom element.\n * @param descriptor A descriptor for a set of React props for attributes of a custom element.\n * @returns A React component working as a wrapper for the given custom element.\n * @example\n * import { render } from 'react-dom';\n * import createCustomElementType, { booleanSerializer } from '/path/to/createCustomElementType';\n *\n * const CDSDropdown = createCustomElementType(`${prefix}-dropdown`, {\n *   disabled: {\n *     // Sets `disabled` attribute when the React prop value is truthy, unsets otherwise\n *     serialize: booleanSerializer,\n *   },\n *   helperText: {\n *     // Maps `helperText` React prop to `helper-text` attribute\n *     attribute: 'helper-text',\n *   },\n *   onBeforeSelect: {\n *     // Sets `onBeforeSelect` React prop value as a listener of `cds-dropdown-beingselected` custom event\n *     event: `${prefix}-dropdown-beingselected`,\n *   },\n * });\n *\n * render(\n *   (\n *     <CDSDropdown\n *       disabled={true}\n *       helperText=\"some-helper-text\"\n *       onBeforeSelect={event => { console.log(`${prefix}-dropdown-beingselected is fired!`, event); }}>\n *       <cds-dropdown-item value=\"all\">Option 1</cds-dropdown-item>\n *       <cds-dropdown-item value=\"cloudFoundry\">Option 2</cds-dropdown-item>\n *       <cds-dropdown-item value=\"staging\">Option 3</cds-dropdown-item>\n *     </CDSDropdown>\n *   )\n *   document.body\n * );\n */\nconst createReactCustomElementType = (\n  displayName: string,\n  descriptor: CustomElementPropsDescriptor\n) => {\n  /**\n   * Array of React prop names that should be mapped to DOM properties instead of attributes.\n   */\n  const nonAttributeProps = Object.keys(descriptor).filter((propName) => {\n    const { [propName]: descriptorItem } = descriptor;\n    const { attribute } = descriptorItem ?? {};\n    return attribute === false;\n  });\n\n  /**\n   * A React component working as a wrapper for the custom element.\n   */\n  class CustomElementType extends Component<CustomElementTypeProps> {\n    /**\n     * The element.\n     */\n    private _elem: HTMLElement | null = null;\n\n    /**\n     * The handle that allows to release all event listeners attached to this custom element.\n     */\n    private _eventListenersHandle: Handle | null = null;\n\n    /**\n     * The callback function that runs as the custom events fire.\n     *\n     * @param propName The React prop name associated with the event listener.\n     * @param event The event.\n     */\n    private _handleEvent = (propName: string, event: Event) => {\n      const { [propName]: listener } = this.props;\n      if (listener) {\n        listener.call(event.currentTarget, event);\n      }\n    };\n\n    /**\n     * Handles getting/losing the React `ref` object of this custom element.\n     *\n     * @param elem The custom element.\n     */\n    private _handleElemRef = (elem: HTMLElement) => {\n      this._elem = elem;\n      if (this._eventListenersHandle) {\n        this._eventListenersHandle.release();\n        this._eventListenersHandle = null;\n      }\n      if (elem) {\n        this._eventListenersHandle = attachEventListeners(\n          elem,\n          descriptor,\n          this._handleEvent\n        );\n      }\n    };\n\n    /**\n     * Reflects change in React props to DOM properties.\n     *\n     * @param prevProps The previous props.\n     */\n    updateProps(prevProps: { [key: string]: any } = {}) {\n      const { props, _elem: elem } = this;\n      nonAttributeProps.forEach((propName) => {\n        const { [propName]: prevValue } = prevProps;\n        const { [propName]: value } = props;\n        if (prevValue !== value) {\n          elem![propName] = value;\n        }\n      });\n    }\n\n    componentDidMount() {\n      this.updateProps();\n    }\n\n    componentDidUpdate(prevProps) {\n      this.updateProps(prevProps);\n    }\n\n    render() {\n      // eslint-disable-next-line react/prop-types\n      const { children, innerRef, ...props } = this.props;\n      const mergedRef = mergeRefs<HTMLElement>(innerRef, this._handleElemRef);\n      return createElement(\n        displayName,\n        { ref: mergedRef, ...convertProps(props, descriptor) },\n        children\n      );\n    }\n  }\n\n  // eslint-disable-next-line react/display-name\n  return forwardRef<HTMLElement, CustomElementTypeProps>((props, ref) =>\n    createElement(CustomElementType, { ...props, innerRef: ref })\n  );\n};\n\n/**\n * @param value A React prop value.\n * @returns Serialized version of React prop value, as a boolean attribute in a custom element.\n */\nexport const booleanSerializer = (value) => (!value ? undefined : '');\n\n/**\n * @param value A React prop value.\n * @returns Serialized version of React prop value, as a number attribute in a custom element.\n */\nexport const numberSerializer = (value) =>\n  value == null ? value : String(value);\n\n/**\n * @param value A React prop value.\n * @returns Serialized version of React prop value, as a object attribute in a custom element.\n */\nexport const objectSerializer = (value) =>\n  value == null ? value : JSON.stringify(value);\n\nexport default createReactCustomElementType;\n"],"mappings":";;;;;;;;;;AASA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,GAAA,GAAAC,sBAAA,CAAAF,OAAA;AAA8B,MAAAG,SAAA;AAV9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;;AAaA;AACA;AACA;;AAkBA;AACA;AACA;;AAKA;AACA;AACA;;AAcA;AACA;AACA;AACA;AACA,MAAMC,SAAS,GACbA,CAAI,GAAGC,IAAoB,KAC1BC,EAAE,IAAK;EACND,IAAI,CAACE,OAAO,CAAEC,GAAG,IAAK;IACpB;IACA,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;MAC7BA,GAAG,CAACF,EAAE,CAAC;IACT,CAAC,MAAM,IAAIG,MAAM,CAACD,GAAG,CAAC,KAAKA,GAAG,EAAE;MAC9B;MACCA,GAAG,CAAoBE,OAAO,GAAGJ,EAAE;IACtC;EACF,CAAC,CAAC;AACJ,CAAC;;AAEH;AACA;AACA;AACA;AACA;AACA,MAAMK,WAAW,GAAGA,CAACC,IAAS,EAAEC,UAAuC,KAAK;EAC1E,IAAI,CAACA,UAAU,EAAE;IACf,OAAOD,IAAI;EACb;EACA,MAAM;IAAEE,KAAK;IAAEC;EAAU,CAAC,GAAGF,UAAU;EACvC,IAAIC,KAAK,EAAE;IACT;IACA,OAAOE,SAAS;EAClB;EACA,OAAO,CAACD,SAAS,GAAGH,IAAI,GAAGG,SAAS,CAACH,IAAI,CAAC;AAC5C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMK,YAAY,GAAGA,CACnBC,KAA6B,EAC7BL,UAAwC,KAExCJ,MAAM,CAACU,IAAI,CAACD,KAAK,CAAC,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAK;EAC3C,MAAM;IAAE,CAACA,QAAQ,GAAGC;EAAe,CAAC,GAAGV,UAAU;EACjD,MAAMW,SAAS,GAAGb,WAAW,CAACO,KAAK,CAACI,QAAQ,CAAC,EAAEC,cAAc,CAAC;EAC9D,MAAM;IAAEE;EAAU,CAAC,GAAGF,cAAc,aAAdA,cAAc,cAAdA,cAAc,GAAI,CAAC,CAAC;EAC1C,OAAOE,SAAS,KAAK,KAAK,GACtBJ,GAAG,OAAAK,cAAA,CAAAC,OAAA,MAAAD,cAAA,CAAAC,OAAA,MAEEN,GAAG;IACN,CAACI,SAAS,IAAIH,QAAQ,GAAGE;EAAS,EACnC;AACP,CAAC,EAAE,CAAC,CAAC,CAAC;;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMI,oBAAoB,GAAGA,CAC3BC,IAAiB,EACjBhB,UAAwC,EACxCiB,QAA8C,KACnC;EACX,MAAMC,OAAO,GAAG,IAAIC,GAAG,CAAS,CAAC;EACjCvB,MAAM,CAACU,IAAI,CAACN,UAAU,CAAC,CAACN,OAAO,CAAEe,QAAQ,IAAK;IAC5C,IAAIT,UAAU,CAACS,QAAQ,CAAC,EAAE;MACxB,MAAM;QAAER,KAAK,EAAEmB;MAAgB,CAAC,GAAGpB,UAAU,CAACS,QAAQ,CAAC;MACvD,MAAMY,IAAI,GACRzB,MAAM,CAACwB,eAAe,CAAC,KAAKA,eAAe,GACtCA,eAAe,GACfA,eAAe,CAAkCC,IAAI;MAC5D,MAAMC,OAAO,GACX1B,MAAM,CAACwB,eAAe,CAAC,KAAKA,eAAe,GACvCjB,SAAS,GACRiB,eAAe,CAAkCE,OAAO;MAC/D,IAAID,IAAI,EAAE;QACRH,OAAO,CAACK,GAAG,CACT,IAAAC,WAAE,EACAR,IAAI,EACJK,IAAI,EACHpB,KAAK,IAAK;UACTgB,QAAQ,CAACR,QAAQ,EAAER,KAAK,CAAC;QAC3B,CAAC,EACDqB,OACF,CACF,CAAC;MACH;IACF;EACF,CAAC,CAAC;EACF,OAAO;IACLG,OAAOA,CAAA,EAAG;MACRP,OAAO,CAACxB,OAAO,CAAEgC,MAAM,IAAK;QAC1BA,MAAM,CAACD,OAAO,CAAC,CAAC;QAChBP,OAAO,CAACS,MAAM,CAACD,MAAM,CAAC;MACxB,CAAC,CAAC;MACF,OAAO,IAAI;IACb;EACF,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,4BAA4B,GAAGA,CACnCC,WAAmB,EACnB7B,UAAwC,KACrC;EACH;AACF;AACA;EACE,MAAM8B,iBAAiB,GAAGlC,MAAM,CAACU,IAAI,CAACN,UAAU,CAAC,CAAC+B,MAAM,CAAEtB,QAAQ,IAAK;IACrE,MAAM;MAAE,CAACA,QAAQ,GAAGC;IAAe,CAAC,GAAGV,UAAU;IACjD,MAAM;MAAEY;IAAU,CAAC,GAAGF,cAAc,aAAdA,cAAc,cAAdA,cAAc,GAAI,CAAC,CAAC;IAC1C,OAAOE,SAAS,KAAK,KAAK;EAC5B,CAAC,CAAC;;EAEF;AACF;AACA;EACE,MAAMoB,iBAAiB,SAASC,gBAAS,CAAyB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAChE;AACJ;AACA;MAFI,IAAAC,gBAAA,CAAAtB,OAAA,iBAGoC,IAAI;MAExC;AACJ;AACA;MAFI,IAAAsB,gBAAA,CAAAtB,OAAA,iCAG+C,IAAI;MAEnD;AACJ;AACA;AACA;AACA;AACA;MALI,IAAAsB,gBAAA,CAAAtB,OAAA,wBAMuB,CAACL,QAAgB,EAAER,KAAY,KAAK;QACzD,MAAM;UAAE,CAACQ,QAAQ,GAAG4B;QAAS,CAAC,GAAG,IAAI,CAAChC,KAAK;QAC3C,IAAIgC,QAAQ,EAAE;UACZA,QAAQ,CAACC,IAAI,CAACrC,KAAK,CAACsC,aAAa,EAAEtC,KAAK,CAAC;QAC3C;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;MAJI,IAAAmC,gBAAA,CAAAtB,OAAA,0BAK0BE,IAAiB,IAAK;QAC9C,IAAI,CAACwB,KAAK,GAAGxB,IAAI;QACjB,IAAI,IAAI,CAACyB,qBAAqB,EAAE;UAC9B,IAAI,CAACA,qBAAqB,CAAChB,OAAO,CAAC,CAAC;UACpC,IAAI,CAACgB,qBAAqB,GAAG,IAAI;QACnC;QACA,IAAIzB,IAAI,EAAE;UACR,IAAI,CAACyB,qBAAqB,GAAG1B,oBAAoB,CAC/CC,IAAI,EACJhB,UAAU,EACV,IAAI,CAAC0C,YACP,CAAC;QACH;MACF,CAAC;IAAA;IAED;AACJ;AACA;AACA;AACA;IACIC,WAAWA,CAACC,SAAiC,GAAG,CAAC,CAAC,EAAE;MAClD,MAAM;QAAEvC,KAAK;QAAEmC,KAAK,EAAExB;MAAK,CAAC,GAAG,IAAI;MACnCc,iBAAiB,CAACpC,OAAO,CAAEe,QAAQ,IAAK;QACtC,MAAM;UAAE,CAACA,QAAQ,GAAGoC;QAAU,CAAC,GAAGD,SAAS;QAC3C,MAAM;UAAE,CAACnC,QAAQ,GAAGqC;QAAM,CAAC,GAAGzC,KAAK;QACnC,IAAIwC,SAAS,KAAKC,KAAK,EAAE;UACvB9B,IAAI,CAAEP,QAAQ,CAAC,GAAGqC,KAAK;QACzB;MACF,CAAC,CAAC;IACJ;IAEAC,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACJ,WAAW,CAAC,CAAC;IACpB;IAEAK,kBAAkBA,CAACJ,SAAS,EAAE;MAC5B,IAAI,CAACD,WAAW,CAACC,SAAS,CAAC;IAC7B;IAEAK,MAAMA,CAAA,EAAG;MACP;MACA,MAAAC,WAAA,GAAyC,IAAI,CAAC7C,KAAK;QAA7C;UAAE8C,QAAQ;UAAEC;QAAmB,CAAC,GAAAF,WAAA;QAAP7C,KAAK,OAAAgD,yBAAA,CAAAvC,OAAA,EAAAoC,WAAA,EAAA5D,SAAA;MACpC,MAAMgE,SAAS,GAAG/D,SAAS,CAAc6D,QAAQ,EAAE,IAAI,CAACG,cAAc,CAAC;MACvE,OAAO,IAAAC,oBAAa,EAClB3B,WAAW,MAAAhB,cAAA,CAAAC,OAAA;QACTnB,GAAG,EAAE2D;MAAS,GAAKlD,YAAY,CAACC,KAAK,EAAEL,UAAU,CAAC,GACpDmD,QACF,CAAC;IACH;EACF;;EAEA;EACA,OAAO,IAAAM,iBAAU,EAAsC,CAACpD,KAAK,EAAEV,GAAG,KAChE,IAAA6D,oBAAa,EAACxB,iBAAiB,MAAAnB,cAAA,CAAAC,OAAA,MAAAD,cAAA,CAAAC,OAAA,MAAOT,KAAK;IAAE+C,QAAQ,EAAEzD;EAAG,EAAE,CAC9D,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACO,MAAM+D,iBAAiB,GAAIZ,KAAK,IAAM,CAACA,KAAK,GAAG3C,SAAS,GAAG,EAAG;;AAErE;AACA;AACA;AACA;AAHAwD,OAAA,CAAAD,iBAAA,GAAAA,iBAAA;AAIO,MAAME,gBAAgB,GAAId,KAAK,IACpCA,KAAK,IAAI,IAAI,GAAGA,KAAK,GAAGe,MAAM,CAACf,KAAK,CAAC;;AAEvC;AACA;AACA;AACA;AAHAa,OAAA,CAAAC,gBAAA,GAAAA,gBAAA;AAIO,MAAME,gBAAgB,GAAIhB,KAAK,IACpCA,KAAK,IAAI,IAAI,GAAGA,KAAK,GAAGiB,IAAI,CAACC,SAAS,CAAClB,KAAK,CAAC;AAACa,OAAA,CAAAG,gBAAA,GAAAA,gBAAA;AAAA,IAAAG,QAAA,GAAAN,OAAA,CAAA7C,OAAA,GAEjCc,4BAA4B"}